{
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositTransaction",
      "inputs": [
        {
          "name": "_to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_gasLimit",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "_isCreation",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "donateETH",
      "inputs": [],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "finalizeWithdrawalTransaction",
      "inputs": [
        {
          "name": "_tx",
          "type": "tuple",
          "internalType": "struct Types.WithdrawalTransaction",
          "components": [
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "sender",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "target",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "finalizedWithdrawals",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "guardian",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_l2Oracle",
          "type": "address",
          "internalType": "contract L2OutputOracle"
        },
        {
          "name": "_systemConfig",
          "type": "address",
          "internalType": "contract SystemConfig"
        },
        {
          "name": "_superchainConfig",
          "type": "address",
          "internalType": "contract SuperchainConfig"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isOutputFinalized",
      "inputs": [
        {
          "name": "_l2OutputIndex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "l2Oracle",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract L2OutputOracle"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "l2Sender",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minimumGasLimit",
      "inputs": [
        {
          "name": "_byteCount",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "params",
      "inputs": [],
      "outputs": [
        {
          "name": "prevBaseFee",
          "type": "uint128",
          "internalType": "uint128"
        },
        {
          "name": "prevBoughtGas",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "prevBlockNum",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "paused_",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proveWithdrawalTransaction",
      "inputs": [
        {
          "name": "_tx",
          "type": "tuple",
          "internalType": "struct Types.WithdrawalTransaction",
          "components": [
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "sender",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "target",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "_l2OutputIndex",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_outputRootProof",
          "type": "tuple",
          "internalType": "struct Types.OutputRootProof",
          "components": [
            {
              "name": "version",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "stateRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "messagePasserStorageRoot",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "latestBlockhash",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "name": "_withdrawalProof",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "provenWithdrawals",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "outputRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "timestamp",
          "type": "uint128",
          "internalType": "uint128"
        },
        {
          "name": "l2OutputIndex",
          "type": "uint128",
          "internalType": "uint128"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "superchainConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract SuperchainConfig"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "systemConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract SystemConfig"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransactionDeposited",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "version",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "opaqueData",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawalFinalized",
      "inputs": [
        {
          "name": "withdrawalHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "success",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawalProven",
      "inputs": [
        {
          "name": "withdrawalHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "BadTarget",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CallPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "GasEstimation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "LargeCalldata",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OutOfGas",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SmallGasLimit",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1240:19301:81:-:0;;;4633:218;;;;;;;;;-1:-1:-1;4657:187:81;4716:1;;;4657:10;:187::i;:::-;1240:19301;;5069:435;3100:19:25;3123:13;;;;;;3122:14;;3168:34;;;;-1:-1:-1;3186:12:25;;3201:1;3186:12;;;;:16;3168:34;3167:97;;;;3209:33;3236:4;3209:18;;;;;:33;;:::i;:::-;3208:34;:55;;;;-1:-1:-1;3246:12:25;;;;;:17;3208:55;3146:190;;;;-1:-1:-1;;;3146:190:25;;216:2:144;3146:190:25;;;198:21:144;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:144;;;338:44;399:19;;3146:190:25;;;;;;;;;3346:12;:16;;-1:-1:-1;;3346:16:25;3361:1;3346:16;;;3372:65;;;;3406:13;:20;;-1:-1:-1;;3406:20:25;;;;;3372:65;5258:8:81::1;:20:::0;;-1:-1:-1;;;;;;5258:20:81;;::::1;-1:-1:-1::0;;;;;5258:20:81;;::::1;::::0;;;::::1;::::0;;;5288:12:::1;:28:::0;;;;::::1;::::0;;::::1;;::::0;;5326:16:::1;:36:::0;;-1:-1:-1;;;;;;5326:36:81::1;5258:20;5326:36:::0;;::::1;;;::::0;;5376:8:::1;::::0;::::1;5372:91;;5414:8;:38:::0;;-1:-1:-1;;;;;;5414:38:81::1;1338:42:118;5414:38:81;::::0;;5372:91:::1;5472:25;:23;:25::i;:::-;3461:14:25::0;3457:99;;;3507:5;3491:21;;-1:-1:-1;;3491:21:25;;;3531:14;;-1:-1:-1;581:36:144;;3531:14:25;;569:2:144;554:18;3531:14:25;;;;;;;3457:99;3090:472;5069:435:81;;;:::o;1175:320:33:-;-1:-1:-1;;;;;1465:19:33;;:23;;;1175:320::o;8340:234:84:-;4888:13:25;;;;;;;4880:69;;;;-1:-1:-1;;;4880:69:25;;830:2:144;4880:69:25;;;812:21:144;869:2;849:18;;;842:30;908:34;888:18;;;881:62;-1:-1:-1;;;959:18:144;;;952:41;1010:19;;4880:69:25;628:407:144;4880:69:25;8415:6:84::1;:19:::0;-1:-1:-1;;;8415:19:84;::::1;-1:-1:-1::0;;;;;8415:19:84::1;;:24:::0;8411:157:::1;;8464:93;::::0;;::::1;::::0;::::1;::::0;;8494:6:::1;8464:93:::0;;;-1:-1:-1;8464:93:84::1;::::0;::::1;::::0;8541:12:::1;-1:-1:-1::0;;;;;8464:93:84::1;::::0;;;;;;;-1:-1:-1;;;8455:102:84::1;;:6;:102:::0;8411:157:::1;8340:234::o:0;628:407:144:-;1240:19301:81;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101125760003560e01c80638c3152e9116100a5578063a35d99df11610074578063cff0ab9611610059578063cff0ab961461039a578063e965084c1461043b578063e9e05c42146104c757600080fd5b8063a35d99df14610341578063c0c53b8b1461037a57600080fd5b80638c3152e9146102975780639b5f694a146102b75780639bf62d82146102e4578063a14238e71461031157600080fd5b806354fd4d50116100e157806354fd4d50146101fc5780635c975abb146102525780636dbffb78146102775780638b4c40b01461013757600080fd5b806333d7e2bd1461013e57806335e80ab314610195578063452a9320146101c75780634870496f146101dc57600080fd5b36610139576101373334620186a06000604051806020016040528060008152506104d5565b005b600080fd5b34801561014a57600080fd5b5060375461016b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101a157600080fd5b5060355461016b90610100900473ffffffffffffffffffffffffffffffffffffffff1681565b3480156101d357600080fd5b5061016b610692565b3480156101e857600080fd5b506101376101f7366004614709565b61072a565b34801561020857600080fd5b506102456040518060400160405280600581526020017f322e362e3000000000000000000000000000000000000000000000000000000081525081565b60405161018c919061485b565b34801561025e57600080fd5b50610267610d2d565b604051901515815260200161018c565b34801561028357600080fd5b5061026761029236600461486e565b610dc0565b3480156102a357600080fd5b506101376102b2366004614887565b610e7d565b3480156102c357600080fd5b5060365461016b9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102f057600080fd5b5060325461016b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561031d57600080fd5b5061026761032c36600461486e565b60336020526000908152604090205460ff1681565b34801561034d57600080fd5b5061036161035c3660046148e1565b6116b8565b60405167ffffffffffffffff909116815260200161018c565b34801561038657600080fd5b506101376103953660046148fc565b6116d1565b3480156103a657600080fd5b50600154610402906fffffffffffffffffffffffffffffffff81169067ffffffffffffffff7001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041683565b604080516fffffffffffffffffffffffffffffffff909416845267ffffffffffffffff928316602085015291169082015260600161018c565b34801561044757600080fd5b5061049961045636600461486e565b603460205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041683565b604080519384526fffffffffffffffffffffffffffffffff928316602085015291169082015260600161018c565b6101376104d5366004614955565b8260005a90508380156104fd575073ffffffffffffffffffffffffffffffffffffffff871615155b15610534576040517f13496fda00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61053e83516116b8565b67ffffffffffffffff168567ffffffffffffffff16101561058b576040517f4929b80800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6201d4c0835111156105c9576040517f73052b0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b333281146105ea575033731111000000000000000000000000000000001111015b600034888888886040516020016106059594939291906149d2565b604051602081830303815290604052905060008973ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fb3813568d9991fc951961fcb4c784893574240a28925604d09fc577c55bb7c3284604051610675919061485b565b60405180910390a45050610689828261193b565b50505050505050565b6000603560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663452a93206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107259190614a37565b905090565b610732610d2d565b15610769576040517ff480973e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16856040015173ffffffffffffffffffffffffffffffffffffffff160361082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4f7074696d69736d506f7274616c3a20796f752063616e6e6f742073656e642060448201527f6d6573736167657320746f2074686520706f7274616c20636f6e74726163740060648201526084015b60405180910390fd5b6036546040517fa25ae5570000000000000000000000000000000000000000000000000000000081526004810186905260009173ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401606060405180830381865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c19190614a74565b5190506108db6108d636869003860186614ad9565b611c12565b8114610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f7074696d69736d506f7274616c3a20696e76616c6964206f7574707574207260448201527f6f6f742070726f6f6600000000000000000000000000000000000000000000006064820152608401610824565b600061097487611c6e565b6000818152603460209081526040918290208251606081018452815481526001909101546fffffffffffffffffffffffffffffffff8082169383018490527001000000000000000000000000000000009091041692810192909252919250901580610a8a5750805160365460408084015190517fa25ae5570000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909116600482015273ffffffffffffffffffffffffffffffffffffffff9091169063a25ae55790602401606060405180830381865afa158015610a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a869190614a74565b5114155b610b16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f4f7074696d69736d506f7274616c3a207769746864726177616c20686173682060448201527f68617320616c7265616479206265656e2070726f76656e0000000000000000006064820152608401610824565b60408051602081018490526000918101829052606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201209083018190529250610bdf9101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600182527f0100000000000000000000000000000000000000000000000000000000000000602083015290610bd5888a614b3f565b8a60400135611c9e565b610c6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4f7074696d69736d506f7274616c3a20696e76616c696420776974686472617760448201527f616c20696e636c7573696f6e2070726f6f6600000000000000000000000000006064820152608401610824565b604080516060810182528581526fffffffffffffffffffffffffffffffff42811660208084019182528c831684860190815260008981526034835286812095518655925190518416700100000000000000000000000000000000029316929092176001909301929092558b830151908c0151925173ffffffffffffffffffffffffffffffffffffffff918216939091169186917f67a6208cfcc0801d50f6cbe764733f4fddf66ac0b04442061a8a8c0cb6b63f629190a4505050505050505050565b6000603560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d9c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107259190614bc3565b6036546040517fa25ae55700000000000000000000000000000000000000000000000000000000815260048101839052600091610e759173ffffffffffffffffffffffffffffffffffffffff9091169063a25ae55790602401606060405180830381865afa158015610e36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5a9190614a74565b602001516fffffffffffffffffffffffffffffffff16611cc2565b92915050565b565b610e85610d2d565b15610ebc576040517ff480973e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60325473ffffffffffffffffffffffffffffffffffffffff1661dead14610f65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4f7074696d69736d506f7274616c3a2063616e206f6e6c79207472696767657260448201527f206f6e65207769746864726177616c20706572207472616e73616374696f6e006064820152608401610824565b6000610f7082611c6e565b60008181526034602090815260408083208151606081018352815481526001909101546fffffffffffffffffffffffffffffffff8082169483018590527001000000000000000000000000000000009091041691810191909152929350900361105b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4f7074696d69736d506f7274616c3a207769746864726177616c20686173206e60448201527f6f74206265656e2070726f76656e2079657400000000000000000000000000006064820152608401610824565b603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663887862726040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ec9190614be0565b81602001516fffffffffffffffffffffffffffffffff1610156111b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604b60248201527f4f7074696d69736d506f7274616c3a207769746864726177616c2074696d657360448201527f74616d70206c657373207468616e204c32204f7261636c65207374617274696e60648201527f672074696d657374616d70000000000000000000000000000000000000000000608482015260a401610824565b6111d681602001516fffffffffffffffffffffffffffffffff16611cc2565b611288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604560248201527f4f7074696d69736d506f7274616c3a2070726f76656e2077697468647261776160448201527f6c2066696e616c697a6174696f6e20706572696f6420686173206e6f7420656c60648201527f6170736564000000000000000000000000000000000000000000000000000000608482015260a401610824565b60365460408281015190517fa25ae5570000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909116600482015260009173ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401606060405180830381865afa15801561130f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113339190614a74565b82518151919250146113ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604960248201527f4f7074696d69736d506f7274616c3a206f757470757420726f6f742070726f7660448201527f656e206973206e6f74207468652073616d652061732063757272656e74206f7560648201527f7470757420726f6f740000000000000000000000000000000000000000000000608482015260a401610824565b61140c81602001516fffffffffffffffffffffffffffffffff16611cc2565b6114be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4f7074696d69736d506f7274616c3a206f75747075742070726f706f73616c2060448201527f66696e616c697a6174696f6e20706572696f6420686173206e6f7420656c617060648201527f7365640000000000000000000000000000000000000000000000000000000000608482015260a401610824565b60008381526033602052604090205460ff161561155d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f4f7074696d69736d506f7274616c3a207769746864726177616c20686173206160448201527f6c7265616479206265656e2066696e616c697a656400000000000000000000006064820152608401610824565b600083815260336020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055908601516032805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff00000000000000000000000000000000000000009092169190911790558501516080860151606087015160a08801516115ff93929190611d68565b603280547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead17905560405190915084907fdb5c7652857aa163daadd670e116628fb42e869d8ac4251ef8971d9e5727df1b9061166490841515815260200190565b60405180910390a28015801561167a5750326001145b156116b1576040517feeae4ed300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b60006116c5826010614c28565b610e7590615208614c58565b600054610100900460ff16158080156116f15750600054600160ff909116105b8061170b5750303b15801561170b575060005460ff166001145b611797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610824565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156117f557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b603680547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff8781169190911790925560378054909116858316179055603580547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1661010085841602179055603254166118ae57603280547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead1790555b6118b6611dc6565b801561191957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b600154600090611971907801000000000000000000000000000000000000000000000000900467ffffffffffffffff1643614c84565b9050600061197d611ed9565b90506000816020015160ff16826000015163ffffffff1661199e9190614cca565b90508215611ad5576001546000906119d5908390700100000000000000000000000000000000900467ffffffffffffffff16614d32565b90506000836040015160ff16836119ec9190614da6565b600154611a0c9084906fffffffffffffffffffffffffffffffff16614da6565b611a169190614cca565b600154909150600090611a6790611a409084906fffffffffffffffffffffffffffffffff16614e62565b866060015163ffffffff168760a001516fffffffffffffffffffffffffffffffff16611f9a565b90506001861115611a9657611a93611a4082876040015160ff1660018a611a8e9190614c84565b611fb9565b90505b6fffffffffffffffffffffffffffffffff16780100000000000000000000000000000000000000000000000067ffffffffffffffff4316021760015550505b60018054869190601090611b08908490700100000000000000000000000000000000900467ffffffffffffffff16614c58565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550816000015163ffffffff16600160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff161315611b95576040517f77ebef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600154600090611bc1906fffffffffffffffffffffffffffffffff1667ffffffffffffffff8816614ed6565b90506000611bd348633b9aca0061200e565b611bdd9083614f13565b905060005a611bec9088614c84565b905080821115611c0857611c08611c038284614c84565b612025565b5050505050505050565b60008160000151826020015183604001518460600151604051602001611c51949392919093845260208401929092526040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b80516020808301516040808501516060860151608087015160a08801519351600097611c51979096959101614f27565b600080611caa86612053565b9050611cb881868686612085565b9695505050505050565b603654604080517ff4daa291000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163f4daa2919160048083019260209291908290030181865afa158015611d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d569190614be0565b611d609083614f7e565b421192915050565b6000806000611d788660006120b5565b905080611dae576308c379a06000526020805278185361666543616c6c3a204e6f7420656e6f756768206761736058526064601cfd5b600080855160208701888b5af1979650505050505050565b600054610100900460ff16611e5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610824565b6001547801000000000000000000000000000000000000000000000000900467ffffffffffffffff16600003610e7b5760408051606081018252633b9aca00808252600060208301524367ffffffffffffffff169190920181905278010000000000000000000000000000000000000000000000000217600155565b6040805160c08082018352600080835260208301819052828401819052606083018190526080830181905260a083015260375483517fcc731b020000000000000000000000000000000000000000000000000000000081529351929373ffffffffffffffffffffffffffffffffffffffff9091169263cc731b02926004808401939192918290030181865afa158015611f76573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107259190614fbb565b6000611faf611fa985856120d3565b836120e3565b90505b9392505050565b6000670de0b6b3a7640000611ffa611fd18583614cca565b611fe390670de0b6b3a7640000614d32565b611ff585670de0b6b3a7640000614da6565b6120f2565b6120049086614da6565b611faf9190614cca565b60008183101561201e5781611fb2565b5090919050565b6000805a90505b825a6120389083614c84565b101561204e576120478261505a565b915061202c565b505050565b6060818051906020012060405160200161206f91815260200190565b6040516020818303038152906040529050919050565b60006120ac84612096878686612123565b8051602091820120825192909101919091201490565b95945050505050565b600080603f83619c4001026040850201603f5a021015949350505050565b60008183121561201e5781611fb2565b600081831261201e5781611fb2565b6000611fb2670de0b6b3a76400008361210a86612ba1565b6121149190614da6565b61211e9190614cca565b612de5565b60606000845111612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d65726b6c65547269653a20656d707479206b657900000000000000000000006044820152606401610824565b600061219b84613024565b905060006121a886613110565b90506000846040516020016121bf91815260200190565b60405160208183030381529060405290506000805b8451811015612b185760008582815181106121f1576121f1615092565b60200260200101519050845183111561228c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4d65726b6c65547269653a206b657920696e646578206578636565647320746f60448201527f74616c206b6579206c656e6774680000000000000000000000000000000000006064820152608401610824565b8260000361234557805180516020918201206040516122da926122b492910190815260200190565b604051602081830303815290604052858051602091820120825192909101919091201490565b612340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4d65726b6c65547269653a20696e76616c696420726f6f7420686173680000006044820152606401610824565b61249c565b8051516020116123fb578051805160209182012060405161236f926122b492910190815260200190565b612340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d65726b6c65547269653a20696e76616c6964206c6172676520696e7465726e60448201527f616c2068617368000000000000000000000000000000000000000000000000006064820152608401610824565b80518451602080870191909120825191909201201461249c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4d65726b6c65547269653a20696e76616c696420696e7465726e616c206e6f6460448201527f65206861736800000000000000000000000000000000000000000000000000006064820152608401610824565b6124a860106001614f7e565b81602001515103612684578451830361261c576124e281602001516010815181106124d5576124d5615092565b6020026020010151613173565b96506000875111612575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f4d65726b6c65547269653a2076616c7565206c656e677468206d75737420626560448201527f2067726561746572207468616e207a65726f20286272616e63682900000000006064820152608401610824565b600186516125839190614c84565b8214612611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d65726b6c65547269653a2076616c7565206e6f6465206d757374206265206c60448201527f617374206e6f646520696e2070726f6f6620286272616e6368290000000000006064820152608401610824565b505050505050611fb2565b600085848151811061263057612630615092565b602001015160f81c60f81b60f81c9050600082602001518260ff168151811061265b5761265b615092565b6020026020010151905061266e816132d3565b955061267b600186614f7e565b94505050612b05565b600281602001515103612a7d57600061269c826132f8565b90506000816000815181106126b3576126b3615092565b016020015160f81c905060006126ca6002836150c1565b6126d59060026150e3565b905060006126e6848360ff1661331c565b905060006126f48a8961331c565b905060006127028383613352565b905080835114612794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d65726b6c65547269653a20706174682072656d61696e646572206d7573742060448201527f736861726520616c6c206e6962626c65732077697468206b65790000000000006064820152608401610824565b60ff8516600214806127a9575060ff85166003145b15612998578082511461283e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4d65726b6c65547269653a206b65792072656d61696e646572206d757374206260448201527f65206964656e746963616c20746f20706174682072656d61696e6465720000006064820152608401610824565b61285887602001516001815181106124d5576124d5615092565b9c5060008d51116128eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f4d65726b6c65547269653a2076616c7565206c656e677468206d75737420626560448201527f2067726561746572207468616e207a65726f20286c65616629000000000000006064820152608401610824565b60018c516128f99190614c84565b8814612987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4d65726b6c65547269653a2076616c7565206e6f6465206d757374206265206c60448201527f617374206e6f646520696e2070726f6f6620286c6561662900000000000000006064820152608401610824565b505050505050505050505050611fb2565b60ff851615806129ab575060ff85166001145b156129ea576129d787602001516001815181106129ca576129ca615092565b60200260200101516132d3565b99506129e3818a614f7e565b9850612a72565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4d65726b6c65547269653a2072656365697665642061206e6f6465207769746860448201527f20616e20756e6b6e6f776e2070726566697800000000000000000000000000006064820152608401610824565b505050505050612b05565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4d65726b6c65547269653a20726563656976656420616e20756e70617273656160448201527f626c65206e6f64650000000000000000000000000000000000000000000000006064820152608401610824565b5080612b108161505a565b9150506121d4565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4d65726b6c65547269653a2072616e206f7574206f662070726f6f6620656c6560448201527f6d656e74730000000000000000000000000000000000000000000000000000006064820152608401610824565b6000808213612c0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f554e444546494e454400000000000000000000000000000000000000000000006044820152606401610824565b60006060612c1984613406565b03609f8181039490941b90931c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b393909302929092017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdb731c958f34d94c18213612e1657506000919050565b680755bf798b4a1bf1e58212612e88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4558505f4f564552464c4f5700000000000000000000000000000000000000006044820152606401610824565b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b39881029093037fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a550481018102606090811d6d0277594991cfc85f6e2461837cd9018202811d7fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d7ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084017ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e010290911d6e0587f503bb6ea29d25fcb7401964500190910279d835ebba824c98fb31b83b2ca45c000000000000000000000000010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b80516060908067ffffffffffffffff81111561304257613042614529565b60405190808252806020026020018201604052801561308757816020015b60408051808201909152606080825260208201528152602001906001900390816130605790505b50915060005b818110156131095760405180604001604052808583815181106130b2576130b2615092565b602002602001015181526020016130e18684815181106130d4576130d4615092565b60200260200101516134dc565b8152508382815181106130f6576130f6615092565b602090810291909101015260010161308d565b5050919050565b606080604051905082518060011b603f8101601f1916830160405280835250602084016020830160005b83811015613168578060011b82018184015160001a8060041c8253600f81166001830153505060010161313a565b509295945050505050565b60606000806000613183856134ef565b91945092509050600081600181111561319e5761319e615106565b1461322b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f524c505265616465723a206465636f646564206974656d207479706520666f7260448201527f206279746573206973206e6f7420612064617461206974656d000000000000006064820152608401610824565b6132358284614f7e565b8551146132c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f524c505265616465723a2062797465732076616c756520636f6e7461696e732060448201527f616e20696e76616c69642072656d61696e6465720000000000000000000000006064820152608401610824565b6120ac85602001518484613f5c565b606060208260000151106132ef576132ea82613173565b610e75565b610e7582613ff0565b6060610e7561331783602001516000815181106124d5576124d5615092565b613110565b60608251821061333b5750604080516020810190915260008152610e75565b611fb2838384865161334d9190614c84565b614006565b6000808251845110613365578251613368565b83515b90505b80821080156133ef575082828151811061338757613387615092565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168483815181106133c6576133c6615092565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016145b156133ff5781600101915061336b565b5092915050565b6000808211613471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f554e444546494e454400000000000000000000000000000000000000000000006044820152606401610824565b5060016fffffffffffffffffffffffffffffffff821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110821b1791821c111790565b6060610e756134ea836141de565b6142c7565b6000806000808460000151116135ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620616e20524c50206974656d60448201527f206d7573742062652067726561746572207468616e207a65726f20746f20626560648201527f206465636f6461626c6500000000000000000000000000000000000000000000608482015260a401610824565b6020840151805160001a607f81116135d2576000600160009450945094505050613f55565b60b781116137e05760006135e7608083614c84565b9050808760000151116136a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604e60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20737472696e67206c656e6774682060648201527f2873686f727420737472696e6729000000000000000000000000000000000000608482015260a401610824565b6001838101517fff0000000000000000000000000000000000000000000000000000000000000016908214158061371b57507f80000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821610155b6137cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f524c505265616465723a20696e76616c6964207072656669782c2073696e676c60448201527f652062797465203c203078383020617265206e6f74207072656669786564202860648201527f73686f727420737472696e672900000000000000000000000000000000000000608482015260a401610824565b5060019550935060009250613f55915050565b60bf8111613b2e5760006137f560b783614c84565b9050808760000151116138b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605160248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206265203e207468616e206c656e677468206f6620737472696e67206c656e60648201527f67746820286c6f6e6720737472696e6729000000000000000000000000000000608482015260a401610824565b60018301517fff0000000000000000000000000000000000000000000000000000000000000016600081900361398e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206e6f74206861766520616e79206c656164696e67207a65726f7320286c6f60648201527f6e6720737472696e672900000000000000000000000000000000000000000000608482015260a401610824565b600184015160088302610100031c60378111613a52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20353520627974657320286c6f6e6760648201527f20737472696e6729000000000000000000000000000000000000000000000000608482015260a401610824565b613a5c8184614f7e565b895111613b11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20746f74616c206c656e677468202860648201527f6c6f6e6720737472696e67290000000000000000000000000000000000000000608482015260a401610824565b613b1c836001614f7e565b9750955060009450613f559350505050565b60f78111613c0f576000613b4360c083614c84565b905080876000015111613bfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e206c697374206c656e67746820287360648201527f686f7274206c6973742900000000000000000000000000000000000000000000608482015260a401610824565b600195509350849250613f55915050565b6000613c1c60f783614c84565b905080876000015111613cd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206265203e207468616e206c656e677468206f66206c697374206c656e677460648201527f6820286c6f6e67206c6973742900000000000000000000000000000000000000608482015260a401610824565b60018301517fff00000000000000000000000000000000000000000000000000000000000000166000819003613db5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206e6f74206861766520616e79206c656164696e67207a65726f7320286c6f60648201527f6e67206c69737429000000000000000000000000000000000000000000000000608482015260a401610824565b600184015160088302610100031c60378111613e79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604660248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20353520627974657320286c6f6e6760648201527f206c697374290000000000000000000000000000000000000000000000000000608482015260a401610824565b613e838184614f7e565b895111613f38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20746f74616c206c656e677468202860648201527f6c6f6e67206c6973742900000000000000000000000000000000000000000000608482015260a401610824565b613f43836001614f7e565b9750955060019450613f559350505050565b9193909250565b60608167ffffffffffffffff811115613f7757613f77614529565b6040519080825280601f01601f191660200182016040528015613fa1576020820181803683370190505b5090508115611fb2576000613fb68486614f7e565b90506020820160005b84811015613fd7578281015182820152602001613fbf565b84811115613fe6576000858301525b5050509392505050565b6060610e75826020015160008460000151613f5c565b60608182601f011015614075576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610824565b8282840110156140e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610824565b8183018451101561414e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401610824565b60608215801561416d57604051915060008252602082016040526141d5565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156141a657805183526020928301920161418e565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b604080518082019091526000808252602082015260008251116142a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620616e20524c50206974656d60448201527f206d7573742062652067726561746572207468616e207a65726f20746f20626560648201527f206465636f6461626c6500000000000000000000000000000000000000000000608482015260a401610824565b50604080518082019091528151815260209182019181019190915290565b606060008060006142d7856134ef565b9194509250905060018160018111156142f2576142f2615106565b1461437f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f524c505265616465723a206465636f646564206974656d207479706520666f7260448201527f206c697374206973206e6f742061206c697374206974656d00000000000000006064820152608401610824565b845161438b8385614f7e565b14614418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f524c505265616465723a206c697374206974656d2068617320616e20696e766160448201527f6c696420646174612072656d61696e64657200000000000000000000000000006064820152608401610824565b604080516020808252610420820190925290816020015b604080518082019091526000808252602082015281526020019060019003908161442f5790505093506000835b865181101561451d576000806144a26040518060400160405280858c600001516144869190614c84565b8152602001858c6020015161449b9190614f7e565b90526134ef565b5091509150604051806040016040528083836144be9190614f7e565b8152602001848b602001516144d39190614f7e565b8152508885815181106144e8576144e8615092565b60209081029190910101526144fe600185614f7e565b935061450a8183614f7e565b6145149084614f7e565b9250505061445c565b50845250919392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561459f5761459f614529565b604052919050565b73ffffffffffffffffffffffffffffffffffffffff811681146145c957600080fd5b50565b600082601f8301126145dd57600080fd5b813567ffffffffffffffff8111156145f7576145f7614529565b61462860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601614558565b81815284602083860101111561463d57600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561466c57600080fd5b60405160c0810167ffffffffffffffff828210818311171561469057614690614529565b8160405282935084358352602085013591506146ab826145a7565b816020840152604085013591506146c1826145a7565b816040840152606085013560608401526080850135608084015260a08501359150808211156146ef57600080fd5b506146fc858286016145cc565b60a0830152505092915050565b600080600080600085870360e081121561472257600080fd5b863567ffffffffffffffff8082111561473a57600080fd5b6147468a838b0161465a565b97506020890135965060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08401121561477f57600080fd5b60408901955060c089013592508083111561479957600080fd5b828901925089601f8401126147ad57600080fd5b82359150808211156147be57600080fd5b508860208260051b84010111156147d457600080fd5b959894975092955050506020019190565b60005b838110156148005781810151838201526020016147e8565b838111156119195750506000910152565b600081518084526148298160208601602086016147e5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611fb26020830184614811565b60006020828403121561488057600080fd5b5035919050565b60006020828403121561489957600080fd5b813567ffffffffffffffff8111156148b057600080fd5b6148bc8482850161465a565b949350505050565b803567ffffffffffffffff811681146148dc57600080fd5b919050565b6000602082840312156148f357600080fd5b611fb2826148c4565b60008060006060848603121561491157600080fd5b833561491c816145a7565b9250602084013561492c816145a7565b9150604084013561493c816145a7565b809150509250925092565b80151581146145c957600080fd5b600080600080600060a0868803121561496d57600080fd5b8535614978816145a7565b94506020860135935061498d604087016148c4565b9250606086013561499d81614947565b9150608086013567ffffffffffffffff8111156149b957600080fd5b6149c5888289016145cc565b9150509295509295909350565b8581528460208201527fffffffffffffffff0000000000000000000000000000000000000000000000008460c01b16604082015282151560f81b604882015260008251614a268160498501602087016147e5565b919091016049019695505050505050565b600060208284031215614a4957600080fd5b8151611fb2816145a7565b80516fffffffffffffffffffffffffffffffff811681146148dc57600080fd5b600060608284031215614a8657600080fd5b6040516060810181811067ffffffffffffffff82111715614aa957614aa9614529565b60405282518152614abc60208401614a54565b6020820152614acd60408401614a54565b60408201529392505050565b600060808284031215614aeb57600080fd5b6040516080810181811067ffffffffffffffff82111715614b0e57614b0e614529565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b600067ffffffffffffffff80841115614b5a57614b5a614529565b8360051b6020614b6b818301614558565b868152918501918181019036841115614b8357600080fd5b865b84811015614bb757803586811115614b9d5760008081fd5b614ba936828b016145cc565b845250918301918301614b85565b50979650505050505050565b600060208284031215614bd557600080fd5b8151611fb281614947565b600060208284031215614bf257600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff80831681851681830481118215151615614c4f57614c4f614bf9565b02949350505050565b600067ffffffffffffffff808316818516808303821115614c7b57614c7b614bf9565b01949350505050565b600082821015614c9657614c96614bf9565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082614cd957614cd9614c9b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f800000000000000000000000000000000000000000000000000000000000000083141615614d2d57614d2d614bf9565b500590565b6000808312837f800000000000000000000000000000000000000000000000000000000000000001831281151615614d6c57614d6c614bf9565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615614da057614da0614bf9565b50500390565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600084136000841385830485118282161615614de757614de7614bf9565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615614e2257614e22614bf9565b60008712925087820587128484161615614e3e57614e3e614bf9565b87850587128184161615614e5457614e54614bf9565b505050929093029392505050565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03841381151615614e9c57614e9c614bf9565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615614ed057614ed0614bf9565b50500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614f0e57614f0e614bf9565b500290565b600082614f2257614f22614c9b565b500490565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a0830152614f7260c0830184614811565b98975050505050505050565b60008219821115614f9157614f91614bf9565b500190565b805163ffffffff811681146148dc57600080fd5b805160ff811681146148dc57600080fd5b600060c08284031215614fcd57600080fd5b60405160c0810181811067ffffffffffffffff82111715614ff057614ff0614529565b604052614ffc83614f96565b815261500a60208401614faa565b602082015261501b60408401614faa565b604082015261502c60608401614f96565b606082015261503d60808401614f96565b608082015261504e60a08401614a54565b60a08201529392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361508b5761508b614bf9565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff8316806150d4576150d4614c9b565b8060ff84160691505092915050565b600060ff821660ff8416808210156150fd576150fd614bf9565b90039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea164736f6c634300080f000a",
    "sourceMap": "1240:19301:81:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7115:86;7134:10;7146:9;1971:7;7184:5;7191:9;;;;;;;;;;;;7115:18;:86::i;:::-;1240:19301;;;;;2983:32;;;;;;;;;;-1:-1:-1;2983:32:81;;;;;;;;;;;212:42:144;200:55;;;182:74;;170:2;155:18;2983:32:81;;;;;;;;2739:40;;;;;;;;;;-1:-1:-1;2739:40:81;;;;;;;;;;;5757:101;;;;;;;;;;;;;:::i;8288:3825::-;;;;;;;;;;-1:-1:-1;8288:3825:81;;;;;:::i;:::-;;:::i;4530:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5981:105::-;;;;;;;;;;;;;:::i;:::-;;;5226:14:144;;5219:22;5201:41;;5189:2;5174:18;5981:105:81;5061:187:144;19926:180:81;;;;;;;;;;-1:-1:-1;19926:180:81;;;;;:::i;:::-;;:::i;12226:4818::-;;;;;;;;;;-1:-1:-1;12226:4818:81;;;;;:::i;:::-;;:::i;2867:30::-;;;;;;;;;;-1:-1:-1;2867:30:81;;;;;;;;2234:23;;;;;;;;;;-1:-1:-1;2234:23:81;;;;;;;;2348:52;;;;;;;;;;-1:-1:-1;2348:52:81;;;;;:::i;:::-;;;;;;;;;;;;;;;;6579:120;;;;;;;;;;-1:-1:-1;6579:120:81;;;;;:::i;:::-;;:::i;:::-;;;6796:18:144;6784:31;;;6766:50;;6754:2;6739:18;6579:120:81;6622:200:144;5069:435:81;;;;;;;;;;-1:-1:-1;5069:435:81;;;;;:::i;:::-;;:::i;3093:28:84:-;;;;;;;;;;-1:-1:-1;3093:28:84;;;;;;;;;;;;;;;;;;;;;;;;;7661:34:144;7649:47;;;7631:66;;7716:18;7770:15;;;7765:2;7750:18;;7743:43;7822:15;;7802:18;;;7795:43;7619:2;7604:18;3093:28:84;7433:411:144;2482:61:81;;;;;;;;;;-1:-1:-1;2482:61:81;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8051:25:144;;;8095:34;8165:15;;;8160:2;8145:18;;8138:43;8217:15;;8197:18;;;8190:43;8039:2;8024:18;2482:61:81;7849:390:144;17774:1855:81;;;;;;:::i;:::-;17980:9;3511:18:84;3532:9;3511:30;;18134:11:81::1;:32;;;;-1:-1:-1::0;18149:17:81::1;::::0;::::1;::::0;::::1;18134:32;18130:56;;;18175:11;;;;;;;;;;;;;;18130:56;18350:37;18373:5;:12;18350:15;:37::i;:::-;18338:49;;:9;:49;;;18334:77;;;18396:15;;;;;;;;;;;;;;18334:77;18801:7;18786:5;:12;:22;18782:50;;;18817:15;;;;;;;;;;;;;;18782:50;18938:10;18976:9;18962:23:::0;::::1;18958:108;;-1:-1:-1::0;19044:10:81::1;741:42:141::0;1213:27;18958:108:81::1;19323:23;19366:9;19377:6;19385:9;19396:11;19409:5;19349:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;19323:92;;1821:1;19589:3;19562:60;;19583:4;19562:60;;;19611:10;19562:60;;;;;;:::i;:::-;;;;;;;;17995:1634;;3642:29:84::0;3651:7;3660:10;3642:8;:29::i;:::-;3433:245;17774:1855:81;;;;;;:::o;5757:101::-;5798:7;5824:16;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5817:34;;5757:101;:::o;8288:3825::-;4414:8;:6;:8::i;:::-;4410:33;;;4431:12;;;;;;;;;;;;;;4410:33;8820:4:::1;8798:27;;:3;:10;;;:27;;::::0;8790:103:::1;;;::::0;::::1;::::0;;10432:2:144;8790:103:81::1;::::0;::::1;10414:21:144::0;10471:2;10451:18;;;10444:30;10510:34;10490:18;;;10483:62;10581:33;10561:18;;;10554:61;10632:19;;8790:103:81::1;;;;;;;;;9091:8;::::0;:36:::1;::::0;;;;::::1;::::0;::::1;10808:25:144::0;;;9070:18:81::1;::::0;9091:8:::1;;::::0;:20:::1;::::0;10781:18:144;;9091:36:81::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47:::0;;-1:-1:-1;9272:45:81::1;;;::::0;;::::1;::::0;::::1;9300:16:::0;9272:45:::1;:::i;:::-;:27;:45::i;:::-;9258:10;:59;9237:135;;;::::0;::::1;::::0;;12516:2:144;9237:135:81::1;::::0;::::1;12498:21:144::0;12555:2;12535:18;;;12528:30;12594:34;12574:18;;;12567:62;12665:11;12645:18;;;12638:39;12694:19;;9237:135:81::1;12314:405:144::0;9237:135:81::1;9483:22;9508:27;9531:3;9508:22;:27::i;:::-;9545:40;9588:33:::0;;;:17:::1;:33;::::0;;;;;;;;9545:76;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;::::1;;::::0;;;;;;;9483:52;;-1:-1:-1;9545:76:81;10175:31;;:145:::1;;-1:-1:-1::0;10293:27:81;;10226:8:::1;::::0;10247:30:::1;::::0;;::::1;::::0;10226:52;;;;;12900:34:144;12888:47;;;10226:52:81::1;::::0;::::1;12870:66:144::0;10226:8:81::1;::::0;;::::1;::::0;:20:::1;::::0;12843:18:144;;10226:52:81::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63:::0;:94:::1;;10175:145;10154:247;;;::::0;::::1;::::0;;13149:2:144;10154:247:81::1;::::0;::::1;13131:21:144::0;13188:2;13168:18;;;13161:30;13227:34;13207:18;;;13200:62;13298:25;13278:18;;;13271:53;13341:19;;10154:247:81::1;12947:419:144::0;10154:247:81::1;10681:147;::::0;;::::1;::::0;::::1;13545:25:144::0;;;10637:18:81::1;13586::144::0;;;13579:34;;;13518:18;;10681:147:81::1;::::0;;;;;::::1;::::0;;;;;;10658:180;;10681:147:::1;10658:180:::0;;::::1;::::0;11253:22;;::::1;10808:25:144::0;;;10658:180:81;-1:-1:-1;11191:240:81::1;::::0;10781:18:144;11253:22:81::1;::::0;;;;;::::1;::::0;;;11191:240;;::::1;::::0;;;::::1;::::0;;::::1;11253:22;11191:240:::0;::::1;::::0;11253:22;11191:240:::1;11334:16:::0;;11191:240:::1;:::i;:::-;11375:16;:41;;;11191:37;:240::i;:::-;11170:337;;;::::0;::::1;::::0;;14947:2:144;11170:337:81::1;::::0;::::1;14929:21:144::0;14986:2;14966:18;;;14959:30;15025:34;15005:18;;;14998:62;15096:20;15076:18;;;15069:48;15134:19;;11170:337:81::1;14745:414:144::0;11170:337:81::1;11825:165;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;11911:15;11825:165:::0;::::1;;::::0;;::::1;::::0;;;;;::::1;::::0;;;;;;-1:-1:-1;11789:33:81;;;:17:::1;:33:::0;;;;;:201;;;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;;::::0;;::::1;::::0;;;;12095:10;;::::1;::::0;12083;;::::1;::::0;12050:56;;::::1;::::0;;::::1;::::0;;;::::1;::::0;11807:14;;12050:56:::1;::::0;-1:-1:-1;12050:56:81::1;8553:3560;;;;8288:3825:::0;;;;;:::o;5981:105::-;6020:12;6054:16;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19926:180::-;20052:8;;:36;;;;;;;;10808:25:144;;;20000:4:81;;20023:76;;20052:8;;;;;:20;;10781:18:144;;20052:36:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;;20023:76;;:28;:76::i;:::-;20016:83;19926:180;-1:-1:-1;;19926:180:81:o;7422:77::-;:::o;12226:4818::-;4414:8;:6;:8::i;:::-;4410:33;;;4431:12;;;;;;;;;;;;;;4410:33;12594:8:::1;::::0;:39:::1;:8;1338:42:118;12594:39:81;12573:137;;;::::0;::::1;::::0;;15616:2:144;12573:137:81::1;::::0;::::1;15598:21:144::0;15655:2;15635:18;;;15628:30;15694:34;15674:18;;;15667:62;15765:33;15745:18;;;15738:61;15816:19;;12573:137:81::1;15414:427:144::0;12573:137:81::1;12793:22;12818:27;12841:3;12818:22;:27::i;:::-;12855:40;12898:33:::0;;;:17:::1;:33;::::0;;;;;;;12855:76;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;::::1;;::::0;;;;;;;12793:52;;-1:-1:-1;13181:31:81;;13173:94:::1;;;::::0;::::1;::::0;;16048:2:144;13173:94:81::1;::::0;::::1;16030:21:144::0;16087:2;16067:18;;;16060:30;16126:34;16106:18;;;16099:62;16197:20;16177:18;;;16170:48;16235:19;;13173:94:81::1;15846:414:144::0;13173:94:81::1;13584:8;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13554:16;:26;;;:58;;;;13533:180;;;::::0;::::1;::::0;;16656:2:144;13533:180:81::1;::::0;::::1;16638:21:144::0;16695:2;16675:18;;;16668:30;16734:34;16714:18;;;16707:62;16805:34;16785:18;;;16778:62;16877:13;16856:19;;;16849:42;16908:19;;13533:180:81::1;16454:479:144::0;13533:180:81::1;14103:56;14132:16;:26;;;14103:56;;:28;:56::i;:::-;14082:172;;;::::0;::::1;::::0;;17140:2:144;14082:172:81::1;::::0;::::1;17122:21:144::0;17179:2;17159:18;;;17152:30;17218:34;17198:18;;;17191:62;17289:34;17269:18;;;17262:62;17361:7;17340:19;;;17333:36;17386:19;;14082:172:81::1;16938:473:144::0;14082:172:81::1;14464:8;::::0;14485:30:::1;::::0;;::::1;::::0;14464:52;;;;;12900:34:144;12888:47;;;14464:52:81::1;::::0;::::1;12870:66:144::0;14425:36:81::1;::::0;14464:8:::1;;::::0;:20:::1;::::0;12843:18:144;;14464:52:81::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14827:27:::0;;14804:19;;14425:91;;-1:-1:-1;14804:50:81::1;14783:170;;;::::0;::::1;::::0;;17618:2:144;14783:170:81::1;::::0;::::1;17600:21:144::0;17657:2;17637:18;;;17630:30;17696:34;17676:18;;;17669:62;17767:34;17747:18;;;17740:62;17839:11;17818:19;;;17811:40;17868:19;;14783:170:81::1;17416:477:144::0;14783:170:81::1;15052:48;15081:8;:18;;;15052:48;;:28;:48::i;:::-;15031:162;;;::::0;::::1;::::0;;18100:2:144;15031:162:81::1;::::0;::::1;18082:21:144::0;18139:2;18119:18;;;18112:30;18178:34;18158:18;;;18151:62;18249:34;18229:18;;;18222:62;18321:5;18300:19;;;18293:34;18344:19;;15031:162:81::1;17898:471:144::0;15031:162:81::1;15309:36;::::0;;;:20:::1;:36;::::0;;;;;::::1;;:45;15301:111;;;::::0;::::1;::::0;;18576:2:144;15301:111:81::1;::::0;::::1;18558:21:144::0;18615:2;18595:18;;;18588:30;18654:34;18634:18;;;18627:62;18725:23;18705:18;;;18698:51;18766:19;;15301:111:81::1;18374:417:144::0;15301:111:81::1;15492:36;::::0;;;:20:::1;:36;::::0;;;;;;;:43;;;::::1;15531:4;15492:43;::::0;;15640:10;;::::1;::::0;15629:8:::1;:21:::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;16309:10;::::1;::::0;16321:12:::1;::::0;::::1;::::0;16335:9:::1;::::0;::::1;::::0;16346:8:::1;::::0;::::1;::::0;16285:70:::1;::::0;16309:10;16321:12;16335:9;16285:23:::1;:70::i;:::-;16423:8;:38:::0;;;::::1;1338:42:118;16423:38:81;::::0;;16620:44:::1;::::0;16270:85;;-1:-1:-1;16640:14:81;;16620:44:::1;::::0;::::1;::::0;16270:85;5226:14:144;5219:22;5201:41;;5189:2;5174:18;;5061:187;16620:44:81::1;;;;;;;;16928:16:::0;::::1;::::0;::::1;:61;;-1:-1:-1::0;16948:9:81::1;1016:1:118;16948:41:81;16928:61;16924:114;;;17012:15;;;;;;;;;;;;;;16924:114;12328:4716;;;;12226:4818:::0;:::o;6579:120::-;6644:6;6669:15;:10;6682:2;6669:15;:::i;:::-;:23;;6687:5;6669:23;:::i;5069:435::-;3100:19:25;3123:13;;;;;;3122:14;;3168:34;;;;-1:-1:-1;3186:12:25;;3201:1;3186:12;;;;:16;3168:34;3167:97;;;-1:-1:-1;3236:4:25;1465:19:33;:23;;;3208:55:25;;-1:-1:-1;3246:12:25;;;;;:17;3208:55;3146:190;;;;;;;19703:2:144;3146:190:25;;;19685:21:144;19742:2;19722:18;;;19715:30;19781:34;19761:18;;;19754:62;19852:16;19832:18;;;19825:44;19886:19;;3146:190:25;19501:410:144;3146:190:25;3346:12;:16;;;;3361:1;3346:16;;;3372:65;;;;3406:13;:20;;;;;;;;3372:65;5258:8:81::1;:20:::0;;;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;5288:12:::1;:28:::0;;;;::::1;::::0;;::::1;;::::0;;5326:16:::1;:36:::0;;;::::1;5258:20;5326:36:::0;;::::1;;;::::0;;5376:8:::1;::::0;::::1;5372:91;;5414:8;:38:::0;;;::::1;1338:42:118;5414:38:81;::::0;;5372:91:::1;5472:25;:23;:25::i;:::-;3461:14:25::0;3457:99;;;3507:5;3491:21;;;;;;3531:14;;-1:-1:-1;20068:36:144;;3531:14:25;;20056:2:144;20041:18;3531:14:25;;;;;;;3457:99;3090:472;5069:435:81;;;:::o;1175:320:33:-;1465:19;;;:23;;;1175:320::o;3911:3974:84:-;4078:6;:19;4043:17;;4063:34;;4078:19;;;;;4063:12;:34;:::i;:::-;4043:54;;4108:28;4139:17;:15;:17::i;:::-;4108:48;;4166:26;4265:6;:27;;;4257:36;;4222:6;:23;;;4214:32;;4207:87;;;;:::i;:::-;4166:128;-1:-1:-1;4309:13:84;;4305:2229;;4666:6;:20;4629:19;;4651:59;;4691:19;;4666:20;;;;;4651:59;:::i;:::-;4629:81;;4724:19;4855:6;:34;;;4847:43;;4818:19;:73;;;;:::i;:::-;4762:6;:18;4747:50;;4785:12;;4762:18;;4747:50;:::i;:::-;4746:146;;;;:::i;:::-;5111:6;:18;4724:168;;-1:-1:-1;5033:17:84;;5053:232;;5096:50;;4724:168;;5111:18;;5096:50;:::i;:::-;5185:6;:21;;;5177:30;;5247:6;:21;;;5239:30;;5053:16;:232::i;:::-;5033:252;;5562:1;5550:9;:13;5546:741;;;5835:437;5882:239;5939:10;6004:6;:34;;;5996:43;;6096:1;6084:9;:13;;;;:::i;:::-;5882:16;:239::i;5835:437::-;5822:450;;5546:741;6380:49;;6481:42;6443:24;6510:12;6481:42;;;6380:6;6481:42;-1:-1:-1;;4305:2229:84;6628:6;:31;;6652:7;;6628:6;:20;;:31;;6652:7;;6628:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6728:6;:23;;;6720:32;;6688:6;:20;;;;;;;;;;;;6680:29;;6673:80;6669:128;;;6776:10;;;;;;;;;;;;;;6669:128;6908:6;:18;6858:20;;6881:46;;6908:18;;6881:16;;;:46;:::i;:::-;6858:69;;7409:15;7442:31;7451:13;7466:6;7442:8;:31::i;:::-;7427:46;;:12;:46;:::i;:::-;7409:64;;7753:15;7785:9;7771:23;;:11;:23;:::i;:::-;7753:41;;7818:7;7808;:17;7804:75;;;7841:27;7850:17;7860:7;7850;:17;:::i;:::-;7841:8;:27::i;:::-;3975:3910;;;;;;3911:3974;;:::o;4961:384:120:-;5060:7;5137:16;:24;;;5179:16;:26;;;5223:16;:41;;;5282:16;:32;;;5109:219;;;;;;;;;;22742:25:144;;;22798:2;22783:18;;22776:34;;;;22841:2;22826:18;;22819:34;22884:2;22869:18;;22862:34;22729:3;22714:19;;22511:391;5109:219:120;;;;;;;;;;;;;5086:252;;;;;;5079:259;;4961:384;;;:::o;4456:211::-;4590:9;;4601:10;;;;;4613;;;;;4625:9;;;;4636:12;;;;4650:8;;;;4579:80;;4543:7;;4579:80;;4590:9;;4601:10;4650:8;4579:80;;:::i;1041:343:129:-;1234:11;1261:16;1280:19;1294:4;1280:13;:19::i;:::-;1261:38;;1318:59;1350:3;1355:6;1363;1371:5;1318:31;:59::i;:::-;1309:68;1041:343;-1:-1:-1;;;;;;1041:343:129:o;20359:180:81:-;20494:8;;:38;;;;;;;;20440:4;;20494:8;;;:36;;:38;;;;;;;;;;;;;;:8;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20481:51;;:10;:51;:::i;:::-;20463:15;:69;;20359:180;-1:-1:-1;;20359:180:81:o;4419:2320:123:-;4589:4;4609:13;4632:15;4650:21;4660:7;4669:1;4650:9;:21::i;:::-;4632:39;;4782:10;4772:1146;;4894:10;4891:1;4884:21;5009:2;5005;4998:14;5747:56;5743:2;5736:68;5900:3;5896:2;5889:15;4772:1146;6666:4;6630;6589:9;6583:16;6549:2;6538:9;6534:18;6491:6;6449:7;6415:5;6389:309;6361:337;4419:2320;-1:-1:-1;;;;;;;4419:2320:123:o;8340:234:84:-;4888:13:25;;;;;;;4880:69;;;;;;;23903:2:144;4880:69:25;;;23885:21:144;23942:2;23922:18;;;23915:30;23981:34;23961:18;;;23954:62;24052:13;24032:18;;;24025:41;24083:19;;4880:69:25;23701:407:144;4880:69:25;8415:6:84::1;:19:::0;;;::::1;;;;:24:::0;8411:157:::1;;8464:93;::::0;;::::1;::::0;::::1;::::0;;8494:6:::1;8464:93:::0;;;-1:-1:-1;8464:93:84::1;::::0;::::1;::::0;8541:12:::1;8464:93;;::::0;;;;;;;8455:102;::::1;;:6;:102:::0;8340:234::o;7748:152:81:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7864:12:81;;:29;;;;;;;-1:-1:-1;;7864:12:81;;;;;:27;;:29;;;;;-1:-1:-1;;7864:29:81;;;;;;:12;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;537:161:115:-;616:6;641:50;656:28;671:6;679:4;656:14;:28::i;:::-;686:4;641:14;:50::i;:::-;634:57;;537:161;;;;;;:::o;1040:228::-;1138:6;1257:4;1180:72;1213:19;1220:12;1257:4;1213:19;:::i;:::-;1205:28;;:4;:28;:::i;:::-;1235:16;:9;1247:4;1235:16;:::i;:::-;1180:24;:72::i;:::-;1164:89;;:12;:89;:::i;:::-;1163:98;;;;:::i;413:105:37:-;471:7;502:1;497;:6;;:14;;510:1;497:14;;;-1:-1:-1;506:1:37;;490:21;-1:-1:-1;413:105:37:o;407:192:116:-;461:9;484:18;505:9;484:30;;524:69;556:7;544:9;531:22;;:10;:22;:::i;:::-;:32;524:69;;;579:3;;;:::i;:::-;;;524:69;;;451:148;;407:192;:::o;2052:142:129:-;2116:18;2181:4;2171:15;;;;;;2154:33;;;;;;25672:19:144;;25716:2;25707:12;;25543:182;2154:33:129;;;;;;;;;;;;;2146:41;;2052:142;;;:::o;2253:281:128:-;2446:11;2482:45;2494:6;2502:24;2506:4;2512:6;2520:5;2502:3;:24::i;:::-;6693:17:117;;;;;;;6672;;;;;;;;;;:38;;6569:148;2482:45:128;2473:54;2253:281;-1:-1:-1;;;;;2253:281:128:o;3615:365:123:-;3696:4;3712:15;3931:2;3916:12;3909:5;3905:24;3901:33;3896:2;3887:7;3883:16;3879:56;3874:2;3867:5;3863:14;3860:76;3853:84;;3615:365;-1:-1:-1;;;;3615:365:123:o;311:102:38:-;367:6;397:1;392;:6;;:14;;405:1;392:14;;491:101;547:6;576:1;572;:5;:13;;584:1;572:13;;1208:273:62;1267:6;1391:36;491:4;1410:1;1399:8;1405:1;1399:5;:8::i;:::-;:12;;;;:::i;:::-;1398:28;;;;:::i;:::-;1391:6;:36::i;2830:6314:128:-;2923:19;2976:1;2962:4;:11;:15;2954:49;;;;;;;25932:2:144;2954:49:128;;;25914:21:144;25971:2;25951:18;;;25944:30;26010:23;25990:18;;;25983:51;26051:18;;2954:49:128;25730:345:144;2954:49:128;3014:23;3040:19;3052:6;3040:11;:19::i;:::-;3014:45;;3069:16;3088:21;3104:4;3088:15;:21::i;:::-;3069:40;;3119:26;3165:5;3148:23;;;;;;25672:19:144;;25716:2;25707:12;;25543:182;3148:23:128;;;;;;;;;;;;;3119:52;;3181:23;3295:9;3290:5790;3314:5;:12;3310:1;:16;3290:5790;;;3347:27;3377:5;3383:1;3377:8;;;;;;;;:::i;:::-;;;;;;;3347:38;;3516:3;:10;3497:15;:29;;3489:88;;;;;;;26471:2:144;3489:88:128;;;26453:21:144;26510:2;26490:18;;;26483:30;26549:34;26529:18;;;26522:62;26620:16;26600:18;;;26593:44;26654:19;;3489:88:128;26269:410:144;3489:88:128;3596:15;3615:1;3596:20;3592:837;;3768:19;;3758:30;;;;;;;3741:48;;3729:76;;3741:48;;3758:30;3741:48;25672:19:144;;;25716:2;25707:12;;25543:182;3741:48:128;;;;;;;;;;;;;3791:13;6693:17:117;;;;;;;6672;;;;;;;;;;:38;;6569:148;3729:76:128;3700:176;;;;;;;26886:2:144;3700:176:128;;;26868:21:144;26925:2;26905:18;;;26898:30;26964:31;26944:18;;;26937:59;27013:18;;3700:176:128;26684:353:144;3700:176:128;3592:837;;;3901:19;;:26;3931:2;-1:-1:-1;3897:532:128;;4097:19;;4087:30;;;;;;;4070:48;;4058:76;;4070:48;;4087:30;4070:48;25672:19:144;;;25716:2;25707:12;;25543:182;4058:76:128;4029:186;;;;;;;27244:2:144;4029:186:128;;;27226:21:144;27283:2;27263:18;;;27256:30;27322:34;27302:18;;;27295:62;27393:9;27373:18;;;27366:37;27420:19;;4029:186:128;27042:403:144;3897:532:128;4336:19;;6693:17:117;;;;;;;;;;6672;;;;;;;:38;4316:98:128;;;;;;;27652:2:144;4316:98:128;;;27634:21:144;27691:2;27671:18;;;27664:30;27730:34;27710:18;;;27703:62;27801:8;27781:18;;;27774:36;27827:19;;4316:98:128;27450:402:144;4316:98:128;936:14;803:2;949:1;936:14;:::i;:::-;4447:11;:19;;;:26;:48;4443:4627;;4538:3;:10;4519:15;:29;4515:1346;;5047:52;5067:11;:19;;;803:2;5067:31;;;;;;;;:::i;:::-;;;;;;;5047:19;:52::i;:::-;5038:61;;5145:1;5129:6;:13;:17;5121:89;;;;;;;28059:2:144;5121:89:128;;;28041:21:144;28098:2;28078:18;;;28071:30;28137:34;28117:18;;;28110:62;28208:29;28188:18;;;28181:57;28255:19;;5121:89:128;27857:423:144;5121:89:128;5322:1;5307:5;:12;:16;;;;:::i;:::-;5302:1;:21;5294:92;;;;;;;28487:2:144;5294:92:128;;;28469:21:144;28526:2;28506:18;;;28499:30;28565:34;28545:18;;;28538:62;28636:28;28616:18;;;28609:56;28682:19;;5294:92:128;28285:422:144;5294:92:128;5409:13;;;;;;;;4515:1346;5609:15;5633:3;5637:15;5633:20;;;;;;;;:::i;:::-;;;;;;;;;5627:27;;5609:45;;5676:33;5712:11;:19;;;5732:9;5712:30;;;;;;;;;;:::i;:::-;;;;;;;5676:66;;5780:20;5791:8;5780:10;:20::i;:::-;5764:36;-1:-1:-1;5822:20:128;5841:1;5822:20;;:::i;:::-;;;5447:414;;4443:4627;;;1105:1;5885:11;:19;;;:26;:59;5881:3189;;5964:17;5984:25;5997:11;5984:12;:25::i;:::-;5964:45;;6027:12;6048:4;6053:1;6048:7;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;6074:12:128;6094:10;6103:1;6048:7;6094:10;:::i;:::-;6089:16;;:1;:16;:::i;:::-;6074:31;;6123:26;6152:25;6164:4;6170:6;6152:25;;:11;:25::i;:::-;6123:54;;6195:25;6223:33;6235:3;6240:15;6223:11;:33::i;:::-;6195:61;;6274:26;6303:51;6326:13;6341:12;6303:22;:51::i;:::-;6274:80;;6661:18;6637:13;:20;:42;6608:171;;;;;;;29276:2:144;6608:171:128;;;29258:21:144;29315:2;29295:18;;;29288:30;29354:34;29334:18;;;29327:62;29425:28;29405:18;;;29398:56;29471:19;;6608:171:128;29074:422:144;6608:171:128;6802:26;;;1447:1;6802:26;;:55;;-1:-1:-1;6832:25:128;;;1553:1;6832:25;6802:55;6798:2169;;;7498:18;7475:12;:19;:41;7442:185;;;;;;;29703:2:144;7442:185:128;;;29685:21:144;29742:2;29722:18;;;29715:30;29781:34;29761:18;;;29754:62;29852:31;29832:18;;;29825:59;29901:19;;7442:185:128;29501:425:144;7442:185:128;7985:43;8005:11;:19;;;8025:1;8005:22;;;;;;;;:::i;7985:43::-;7976:52;;8074:1;8058:6;:13;:17;8050:87;;;;;;;30133:2:144;8050:87:128;;;30115:21:144;30172:2;30152:18;;;30145:30;30211:34;30191:18;;;30184:62;30282:27;30262:18;;;30255:55;30327:19;;8050:87:128;29931:421:144;8050:87:128;8249:1;8234:5;:12;:16;;;;:::i;:::-;8229:1;:21;8221:90;;;;;;;30559:2:144;8221:90:128;;;30541:21:144;30598:2;30578:18;;;30571:30;30637:34;30617:18;;;30610:62;30708:26;30688:18;;;30681:54;30752:19;;8221:90:128;30357:420:144;8221:90:128;8334:13;;;;;;;;;;;;;;6798:2169;8376:31;;;;;:65;;-1:-1:-1;8411:30:128;;;1339:1;8411:30;8376:65;8372:595;;;8748:34;8759:11;:19;;;8779:1;8759:22;;;;;;;;:::i;:::-;;;;;;;8748:10;:34::i;:::-;8732:50;-1:-1:-1;8804:37:128;8823:18;8804:37;;:::i;:::-;;;8372:595;;;8888:60;;;;;30984:2:144;8888:60:128;;;30966:21:144;31023:2;31003:18;;;30996:30;31062:34;31042:18;;;31035:62;31133:20;31113:18;;;31106:48;31171:19;;8888:60:128;30782:414:144;8372:595:128;5946:3035;;;;;;5881:3189;;;9005:50;;;;;31403:2:144;9005:50:128;;;31385:21:144;31442:2;31422:18;;;31415:30;31481:34;31461:18;;;31454:62;31552:10;31532:18;;;31525:38;31580:19;;9005:50:128;31201:404:144;5881:3189:128;-1:-1:-1;3328:3:128;;;;:::i;:::-;;;;3290:5790;;;-1:-1:-1;9090:47:128;;;;;31812:2:144;9090:47:128;;;31794:21:144;31851:2;31831:18;;;31824:30;31890:34;31870:18;;;31863:62;31961:7;31941:18;;;31934:35;31986:19;;9090:47:128;31610:401:144;4596:2947:62;4644:8;4700:1;4696;:5;4688:27;;;;;;;32218:2:144;4688:27:62;;;32200:21:144;32257:1;32237:18;;;32230:29;32295:11;32275:18;;;32268:39;32324:18;;4688:27:62;32016:332:144;4688:27:62;5107:8;5145:2;5125:16;5138:1;5125:4;:16::i;:::-;5118:29;5175:3;:7;;;5161:22;;;;5208:17;;;6001:31;5997:35;;6052:5;;5459:2;6051:13;;;6068:32;6050:50;6120:5;;6119:13;;6136:33;6118:51;6189:5;;6188:13;;6205:33;6187:51;6258:5;;6257:13;;6274:33;6256:51;6327:5;;6326:13;;6343:32;6325:50;6395:5;;6394:13;;6411:30;6393:48;5398:31;5394:35;;5449:5;;5448:13;;5465:32;5447:50;5517:5;;5516:13;;5533:32;5515:50;5585:5;;5584:13;;5583:50;;5653:5;;5652:13;;5651:50;;5721:5;;5720:13;;;5719:50;;5787:5;;;:46;;6735:10;7125:43;7120:48;7232:71;:75;;;;7227:80;;;;7380:72;7375:77;7523:3;7517:9;;;-1:-1:-1;;4596:2947:62:o;1487:3103::-;1536:8;1718:21;1713:1;:26;1709:40;;-1:-1:-1;1748:1:62;;1487:3103;-1:-1:-1;1487:3103:62:o;1709:40::-;1948:21;1943:1;:26;1939:54;;1971:22;;;;;32555:2:144;1971:22:62;;;32537:21:144;32594:2;32574:18;;;32567:30;32633:14;32613:18;;;32606:42;32665:18;;1971:22:62;32353:336:144;1939:54:62;2266:5;2260:2;2255:7;;;2254:17;;-1:-1:-1;2535:8:62;2601:2;2559:29;2548:7;;;2547:41;2591:5;2547:49;2546:57;;2629:29;2625:33;;2621:37;;;3300:35;;;3355:5;;2935:2;3354:13;;;3371:32;3353:50;3423:5;;3422:13;;3421:51;;3492:5;;3491:13;;3508:34;3490:52;3562:5;;3561:13;;3560:53;;3633:5;;3632:13;;3649:35;3631:53;2941:32;2874:31;2870:35;;2925:5;;2924:13;;2923:50;;;2998:5;;;:40;;3058:5;3057:13;;;3074:35;3056:53;3127:5;;;3136:40;3127:50;4002:10;4502:49;4489:62;4564:3;:7;;;;4488:84;;;;;;-1:-1:-1;;1487:3103:62:o;9434:390:128:-;9553:13;;9500:24;;9553:13;9585:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9585:22:128;;;;;;;;;;;;;;;;9576:31;;9622:9;9617:201;9641:6;9637:1;:10;9617:201;;;9676:72;;;;;;;;9696:6;9703:1;9696:9;;;;;;;;:::i;:::-;;;;;;;9676:72;;;;9716:29;9735:6;9742:1;9735:9;;;;;;;;:::i;:::-;;;;;;;9716:18;:29::i;:::-;9676:72;;;9664:6;9671:1;9664:9;;;;;;;;:::i;:::-;;;;;;;;;;:84;9790:3;;9617:201;;;;9526:298;9434:390;;;:::o;4332:1978:117:-;4395:12;4419:21;4550:4;4544:11;4532:23;;4663:6;4657:13;4836:11;4830:4;4826:22;5195:4;5180:13;5176:24;5169:4;5165:9;5161:40;5151:8;5147:55;5141:4;5134:69;5293:13;5283:8;5276:31;;5434:4;5426:6;5422:17;5571:4;5561:8;5557:19;5662:4;5647:622;5675:11;5672:1;5669:18;5647:622;;;5854:1;5848:4;5844:12;5830;5826:31;5996:1;5984:10;5980:18;5974:25;5968:4;5963:37;6119:1;6113:4;6109:12;6101:6;6093:29;6249:4;6246:1;6242:12;6235:4;6227:6;6223:17;6215:40;-1:-1:-1;;5702:4:117;5695:12;5647:622;;;-1:-1:-1;6295:8:117;;4332:1978;-1:-1:-1;;;;;4332:1978:117:o;3993:464:126:-;4055:17;4085:18;4105;4125:20;4149:18;4163:3;4149:13;:18::i;:::-;4084:83;;-1:-1:-1;4084:83:126;-1:-1:-1;4084:83:126;-1:-1:-1;4198:21:126;4186:8;:33;;;;;;;;:::i;:::-;;4178:103;;;;;;;33085:2:144;4178:103:126;;;33067:21:144;33124:2;33104:18;;;33097:30;33163:34;33143:18;;;33136:62;33234:27;33214:18;;;33207:55;33279:19;;4178:103:126;32883:421:144;4178:103:126;4314:23;4327:10;4314;:23;:::i;:::-;4300:10;;:37;4292:102;;;;;;;33511:2:144;4292:102:126;;;33493:21:144;33550:2;33530:18;;;33523:30;33589:34;33569:18;;;33562:62;33660:22;33640:18;;;33633:50;33700:19;;4292:102:126;33309:416:144;4292:102:126;4412:38;4418:3;:7;;;4427:10;4439;4412:5;:38::i;10121:193:128:-;10195:16;10244:2;10229:5;:12;;;:17;:78;;10281:26;10301:5;10281:19;:26::i;:::-;10229:78;;;10249:29;10272:5;10249:22;:29::i;10495:172::-;10562:21;10606:54;10622:37;10642:5;:13;;;10656:1;10642:16;;;;;;;;:::i;10622:37::-;10606:15;:54::i;3805:237:117:-;3880:12;3918:6;:13;3908:6;:23;3904:70;;-1:-1:-1;3954:9:117;;;;;;;;;-1:-1:-1;3954:9:117;;3947:16;;3904:70;3990:45;3996:6;4004;4028;4012;:13;:22;;;;:::i;:::-;3990:5;:45::i;10892:321:128:-;10980:15;11007:11;11034:2;:9;11022:2;:9;:21;11021:47;;11059:2;:9;11021:47;;;11047:2;:9;11021:47;11007:61;;11078:129;11095:3;11085:7;:13;:43;;;;;11117:2;11120:7;11117:11;;;;;;;;:::i;:::-;;;;;;;;;11102:26;;;:2;11105:7;11102:11;;;;;;;;:::i;:::-;;;;;;;:26;11085:43;11078:129;;;11173:9;;;;;11078:129;;;10997:216;10892:321;;;;:::o;15328:575:62:-;15376:9;15409:1;15405;:5;15397:27;;;;;;;32218:2:144;15397:27:62;;;32200:21:144;32257:1;32237:18;;;32230:29;32295:11;32275:18;;;32268:39;32324:18;;15397:27:62;32016:332:144;15397:27:62;-1:-1:-1;15821:1:62;15473:34;-1:-1:-1;;15467:1:62;15463:49;15566:9;;;15546:18;15543:33;15540:1;15536:41;15530:48;15624:9;;;15612:10;15609:25;15606:1;15602:33;15596:40;15678:9;;;15670:6;15667:21;15664:1;15660:29;15654:36;15730:9;;;15724:4;15721:19;15718:1;15714:27;;;15708:34;;;15781:9;;;15776:3;15773:18;15770:1;15766:26;15760:33;15832:9;;;15824:18;;;15817:26;;15811:33;15876:9;;;-1:-1:-1;15862:25:62;;15328:575::o;3732:130:126:-;3791:21;3831:24;3840:14;3850:3;3840:9;:14::i;:::-;3831:8;:24::i;5246:4079::-;5335:15;5352;5369:17;5705:1;5692:3;:10;;;:14;5684:101;;;;;;;33932:2:144;5684:101:126;;;33914:21:144;33971:2;33951:18;;;33944:30;34010:34;33990:18;;;33983:62;34081:34;34061:18;;;34054:62;34153:12;34132:19;;;34125:41;34183:19;;5684:101:126;33730:478:144;5684:101:126;5816:7;;;;5898:10;;5796:17;5890:19;5943:4;5933:14;;5929:3390;;5999:1;6002;6005:21;5991:36;;;;;;;;;;5929:3390;6058:4;6048:6;:14;6044:3275;;6164:14;6181:13;6190:4;6181:6;:13;:::i;:::-;6164:30;;6247:6;6234:3;:10;;;:19;6209:140;;;;;;;34415:2:144;6209:140:126;;;34397:21:144;34454:2;34434:18;;;34427:30;34493:34;34473:18;;;34466:62;34564:34;34544:18;;;34537:62;34636:16;34615:19;;;34608:45;34670:19;;6209:140:126;34213:482:144;6209:140:126;6471:1;6462:11;;;6456:18;6476:14;6452:39;;6544:11;;;;:41;;-1:-1:-1;6559:26:126;;;;;;6544:41;6519:177;;;;;;;34902:2:144;6519:177:126;;;34884:21:144;34941:2;34921:18;;;34914:30;34980:34;34960:18;;;34953:62;35051:34;35031:18;;;35024:62;35123:15;35102:19;;;35095:44;35156:19;;6519:177:126;34700:481:144;6519:177:126;-1:-1:-1;6719:1:126;;-1:-1:-1;6722:6:126;-1:-1:-1;6730:21:126;;-1:-1:-1;6711:41:126;;-1:-1:-1;;6711:41:126;6044:3275;6783:4;6773:6;:14;6769:2550;;6831:19;6853:13;6862:4;6853:6;:13;:::i;:::-;6831:35;;6919:11;6906:3;:10;;;:24;6881:164;;;;;;;35388:2:144;6881:164:126;;;35370:21:144;35427:2;35407:18;;;35400:30;35466:34;35446:18;;;35439:62;35537:34;35517:18;;;35510:62;35609:19;35588;;;35581:48;35646:19;;6881:164:126;35186:485:144;6881:164:126;7167:1;7158:11;;7152:18;7172:14;7148:39;7060:25;7240:26;;;7215:143;;;;;;;35878:2:144;7215:143:126;;;35860:21:144;35917:2;35897:18;;;35890:30;35956:34;35936:18;;;35929:62;36027:34;36007:18;;;36000:62;36099:12;36078:19;;;36071:41;36129:19;;7215:143:126;35676:478:144;7215:143:126;7488:1;7479:11;;7473:18;7455:1;7451:19;;7446:3;7442:29;7438:54;7537:2;7528:11;;7520:96;;;;;;;36361:2:144;7520:96:126;;;36343:21:144;36400:2;36380:18;;;36373:30;36439:34;36419:18;;;36412:62;36510:34;36490:18;;;36483:62;36582:10;36561:19;;;36554:39;36610:19;;7520:96:126;36159:476:144;7520:96:126;7669:20;7683:6;7669:11;:20;:::i;:::-;7656:10;;:33;7631:168;;;;;;;36842:2:144;7631:168:126;;;36824:21:144;36881:2;36861:18;;;36854:30;36920:34;36900:18;;;36893:62;36991:34;36971:18;;;36964:62;37063:14;37042:19;;;37035:43;37095:19;;7631:168:126;36640:480:144;7631:168:126;7822:15;7826:11;7822:1;:15;:::i;:::-;7814:55;-1:-1:-1;7839:6:126;-1:-1:-1;7847:21:126;;-1:-1:-1;7814:55:126;;-1:-1:-1;;;;7814:55:126;6769:2550;7900:4;7890:6;:14;7886:1433;;8003:15;8021:13;8030:4;8021:6;:13;:::i;:::-;8003:31;;8070:7;8057:3;:10;;;:20;8049:107;;;;;;;37327:2:144;8049:107:126;;;37309:21:144;37366:2;37346:18;;;37339:30;37405:34;37385:18;;;37378:62;37476:34;37456:18;;;37449:62;37548:12;37527:19;;;37520:41;37578:19;;8049:107:126;37125:478:144;8049:107:126;8179:1;;-1:-1:-1;8182:7:126;-1:-1:-1;8179:1:126;;-1:-1:-1;8171:42:126;;-1:-1:-1;;8171:42:126;7886:1433;8270:20;8293:13;8302:4;8293:6;:13;:::i;:::-;8270:36;;8359:12;8346:3;:10;;;:25;8321:161;;;;;;;37810:2:144;8321:161:126;;;37792:21:144;37849:2;37829:18;;;37822:30;37888:34;37868:18;;;37861:62;37959:34;37939:18;;;37932:62;38031:15;38010:19;;;38003:44;38064:19;;8321:161:126;37608:481:144;8321:161:126;8604:1;8595:11;;8589:18;8609:14;8585:39;8497:25;8677:26;;;8652:141;;;;;;;38296:2:144;8652:141:126;;;38278:21:144;38335:2;38315:18;;;38308:30;38374:34;38354:18;;;38347:62;38445:34;38425:18;;;38418:62;38517:10;38496:19;;;38489:39;38545:19;;8652:141:126;38094:476:144;8652:141:126;8926:1;8917:11;;8911:18;8892:1;8888:20;;8883:3;8879:30;8875:55;8976:2;8966:12;;8958:95;;;;;;;38777:2:144;8958:95:126;;;38759:21:144;38816:2;38796:18;;;38789:30;38855:34;38835:18;;;38828:62;38926:34;38906:18;;;38899:62;38998:8;38977:19;;;38970:37;39024:19;;8958:95:126;38575:474:144;8958:95:126;9106:22;9121:7;9106:12;:22;:::i;:::-;9093:10;;:35;9068:168;;;;;;;39256:2:144;9068:168:126;;;39238:21:144;39295:2;39275:18;;;39268:30;39334:34;39314:18;;;39307:62;39405:34;39385:18;;;39378:62;39477:12;39456:19;;;39449:41;39507:19;;9068:168:126;39054:478:144;9068:168:126;9259:16;9263:12;9259:1;:16;:::i;:::-;9251:57;-1:-1:-1;9277:7:126;-1:-1:-1;9286:21:126;;-1:-1:-1;9251:57:126;;-1:-1:-1;;;;9251:57:126;5246:4079;;;;;;:::o;9585:737::-;9676:17;9722:7;9712:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9712:18:126;-1:-1:-1;9705:25:126;-1:-1:-1;9740:54:126;;9772:11;9740:54;10010:11;10024:36;10053:7;10045:4;10024:36;:::i;:::-;10010:50;;10115:2;10109:4;10105:13;10140:1;10154:87;10168:7;10165:1;10162:14;10154:87;;;10226:11;;;10220:18;10206:12;;;10199:40;10191:2;10184:10;10154:87;;;10264:7;10261:1;10258:14;10255:51;;;10302:1;10292:7;10286:4;10282:18;10275:29;10255:51;;;10079:237;9585:737;;;;;:::o;4847:137::-;4912:17;4948:29;4954:3;:7;;;4963:1;4966:3;:10;;;4948:5;:29::i;660:2816:117:-;752:12;824:7;808;818:2;808:12;:23;;800:50;;;;;;;39739:2:144;800:50:117;;;39721:21:144;39778:2;39758:18;;;39751:30;39817:16;39797:18;;;39790:44;39851:18;;800:50:117;39537:338:144;800:50:117;892:6;881:7;872:6;:16;:26;;864:53;;;;;;;39739:2:144;864:53:117;;;39721:21:144;39778:2;39758:18;;;39751:30;39817:16;39797:18;;;39790:44;39851:18;;864:53:117;39537:338:144;864:53:117;965:7;956:6;:16;939:6;:13;:33;;931:63;;;;;;;40082:2:144;931:63:117;;;40064:21:144;40121:2;40101:18;;;40094:30;40160:19;40140:18;;;40133:47;40197:18;;931:63:117;39880:341:144;931:63:117;1015:22;1078:15;;1106:1931;;;;3178:4;3172:11;3159:24;;3365:1;3354:9;3347:20;3413:4;3402:9;3398:20;3392:4;3385:34;1071:2362;;1106:1931;1288:4;1282:11;1269:24;;1947:2;1938:7;1934:16;2329:9;2322:17;2316:4;2312:28;2300:9;2289;2285:25;2281:60;2377:7;2373:2;2369:16;2629:6;2615:9;2608:17;2602:4;2598:28;2586:9;2578:6;2574:22;2570:57;2566:70;2403:389;2662:3;2658:2;2655:11;2403:389;;;2780:9;;2769:21;;2703:4;2695:13;;;;2735;2403:389;;;-1:-1:-1;;2810:26:117;;;3018:2;3001:11;3014:7;2997:25;2991:4;2984:39;-1:-1:-1;1071:2362:117;-1:-1:-1;3460:9:117;660:2816;-1:-1:-1;;;;660:2816:117:o;1298:390:126:-;-1:-1:-1;;;;;;;;;;;;;;;;;1453:1:126;1440:3;:10;:14;1432:101;;;;;;;33932:2:144;1432:101:126;;;33914:21:144;33971:2;33951:18;;;33944:30;34010:34;33990:18;;;33983:62;34081:34;34061:18;;;34054:62;34153:12;34132:19;;;34125:41;34183:19;;1432:101:126;33730:478:144;1432:101:126;-1:-1:-1;1640:41:126;;;;;;;;;1658:10;;1640:41;;1610:2;1601:12;;;1640:41;;;;;;;;1298:390::o;1840:1740::-;1901:21;1935:18;1955;1975:20;1999:18;2013:3;1999:13;:18::i;:::-;1934:83;;-1:-1:-1;1934:83:126;-1:-1:-1;1934:83:126;-1:-1:-1;2048:21:126;2036:8;:33;;;;;;;;:::i;:::-;;2028:102;;;;;;;40428:2:144;2028:102:126;;;40410:21:144;40467:2;40447:18;;;40440:30;40506:34;40486:18;;;40479:62;40577:26;40557:18;;;40550:54;40621:19;;2028:102:126;40226:420:144;2028:102:126;2176:10;;2149:23;2162:10;2149;:23;:::i;:::-;:37;2141:100;;;;;;;40853:2:144;2141:100:126;;;40835:21:144;40892:2;40872:18;;;40865:30;40931:34;40911:18;;;40904:62;41002:20;40982:18;;;40975:48;41040:19;;2141:100:126;40651:414:144;2141:100:126;2651:30;;;1123:2;2651:30;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2651:30:126;;;;;;;;;;;;;;-1:-1:-1;2644:37:126;-1:-1:-1;2692:17:126;2740:10;2760:681;2776:10;;2767:19;;2760:681;;;2803:18;2823;2846:150;2877:105;;;;;;;;2908:6;2895:3;:10;;;:19;;;;:::i;:::-;2877:105;;;;2972:6;2961:3;:7;;;2940:38;;;;:::i;:::-;2877:105;;2846:13;:150::i;:::-;2802:194;;;;;3201:153;;;;;;;;3248:10;3235;:23;;;;:::i;:::-;3201:153;;;;3332:6;3321:3;:7;;;3300:38;;;;:::i;:::-;3201:153;;;3183:4;3188:9;3183:15;;;;;;;;:::i;:::-;;;;;;;;;;:171;3369:14;3382:1;3369:14;;:::i;:::-;;-1:-1:-1;3407:23:126;3420:10;3407;:23;:::i;:::-;3397:33;;;;:::i;:::-;;;2788:653;;2760:681;;;-1:-1:-1;3541:23:126;;-1:-1:-1;3548:4:126;;1840:1740;-1:-1:-1;;;1840:1740:126:o;755:184:144:-;807:77;804:1;797:88;904:4;901:1;894:15;928:4;925:1;918:15;944:334;1015:2;1009:9;1071:2;1061:13;;1076:66;1057:86;1045:99;;1174:18;1159:34;;1195:22;;;1156:62;1153:88;;;1221:18;;:::i;:::-;1257:2;1250:22;944:334;;-1:-1:-1;944:334:144:o;1283:154::-;1369:42;1362:5;1358:54;1351:5;1348:65;1338:93;;1427:1;1424;1417:12;1338:93;1283:154;:::o;1442:589::-;1484:5;1537:3;1530:4;1522:6;1518:17;1514:27;1504:55;;1555:1;1552;1545:12;1504:55;1591:6;1578:20;1617:18;1613:2;1610:26;1607:52;;;1639:18;;:::i;:::-;1683:114;1791:4;1722:66;1715:4;1711:2;1707:13;1703:86;1699:97;1683:114;:::i;:::-;1822:2;1813:7;1806:19;1868:3;1861:4;1856:2;1848:6;1844:15;1840:26;1837:35;1834:55;;;1885:1;1882;1875:12;1834:55;1950:2;1943:4;1935:6;1931:17;1924:4;1915:7;1911:18;1898:55;1998:1;1973:16;;;1991:4;1969:27;1962:38;;;;1977:7;1442:589;-1:-1:-1;;;1442:589:144:o;2036:1032::-;2104:5;2152:4;2140:9;2135:3;2131:19;2127:30;2124:50;;;2170:1;2167;2160:12;2124:50;2203:2;2197:9;2245:4;2237:6;2233:17;2269:18;2337:6;2325:10;2322:22;2317:2;2305:10;2302:18;2299:46;2296:72;;;2348:18;;:::i;:::-;2388:10;2384:2;2377:22;2417:6;2408:15;;2460:9;2447:23;2439:6;2432:39;2523:2;2512:9;2508:18;2495:32;2480:47;;2536:33;2561:7;2536:33;:::i;:::-;2602:7;2597:2;2589:6;2585:15;2578:32;2662:2;2651:9;2647:18;2634:32;2619:47;;2675:33;2700:7;2675:33;:::i;:::-;2741:7;2736:2;2728:6;2724:15;2717:32;2810:2;2799:9;2795:18;2782:32;2777:2;2769:6;2765:15;2758:57;2877:3;2866:9;2862:19;2849:33;2843:3;2835:6;2831:16;2824:59;2934:3;2923:9;2919:19;2906:33;2892:47;;2962:2;2954:6;2951:14;2948:34;;;2978:1;2975;2968:12;2948:34;;3016:45;3057:3;3048:6;3037:9;3033:22;3016:45;:::i;:::-;3010:3;3002:6;2998:16;2991:71;;;2036:1032;;;;:::o;3073:1173::-;3273:6;3281;3289;3297;3305;3349:9;3340:7;3336:23;3379:3;3375:2;3371:12;3368:32;;;3396:1;3393;3386:12;3368:32;3436:9;3423:23;3465:18;3506:2;3498:6;3495:14;3492:34;;;3522:1;3519;3512:12;3492:34;3545:72;3609:7;3600:6;3589:9;3585:22;3545:72;:::i;:::-;3535:82;;3664:2;3653:9;3649:18;3636:32;3626:42;;3761:3;3692:66;3688:2;3684:75;3680:85;3677:105;;;3778:1;3775;3768:12;3677:105;3816:2;3805:9;3801:18;3791:28;;3872:3;3861:9;3857:19;3844:33;3828:49;;3902:2;3892:8;3889:16;3886:36;;;3918:1;3915;3908:12;3886:36;3956:8;3945:9;3941:24;3931:34;;4003:7;3996:4;3992:2;3988:13;3984:27;3974:55;;4025:1;4022;4015:12;3974:55;4065:2;4052:16;4038:30;;4091:2;4083:6;4080:14;4077:34;;;4107:1;4104;4097:12;4077:34;;4160:7;4155:2;4145:6;4142:1;4138:14;4134:2;4130:23;4126:32;4123:45;4120:65;;;4181:1;4178;4171:12;4120:65;3073:1173;;;;-1:-1:-1;3073:1173:144;;-1:-1:-1;;;4212:2:144;4204:11;;4234:6;3073:1173::o;4251:258::-;4323:1;4333:113;4347:6;4344:1;4341:13;4333:113;;;4423:11;;;4417:18;4404:11;;;4397:39;4369:2;4362:10;4333:113;;;4464:6;4461:1;4458:13;4455:48;;;-1:-1:-1;;4499:1:144;4481:16;;4474:27;4251:258::o;4514:317::-;4556:3;4594:5;4588:12;4621:6;4616:3;4609:19;4637:63;4693:6;4686:4;4681:3;4677:14;4670:4;4663:5;4659:16;4637:63;:::i;:::-;4745:2;4733:15;4750:66;4729:88;4720:98;;;;4820:4;4716:109;;4514:317;-1:-1:-1;;4514:317:144:o;4836:220::-;4985:2;4974:9;4967:21;4948:4;5005:45;5046:2;5035:9;5031:18;5023:6;5005:45;:::i;5253:180::-;5312:6;5365:2;5353:9;5344:7;5340:23;5336:32;5333:52;;;5381:1;5378;5371:12;5333:52;-1:-1:-1;5404:23:144;;5253:180;-1:-1:-1;5253:180:144:o;5438:374::-;5537:6;5590:2;5578:9;5569:7;5565:23;5561:32;5558:52;;;5606:1;5603;5596:12;5558:52;5646:9;5633:23;5679:18;5671:6;5668:30;5665:50;;;5711:1;5708;5701:12;5665:50;5734:72;5798:7;5789:6;5778:9;5774:22;5734:72;:::i;:::-;5724:82;5438:374;-1:-1:-1;;;;5438:374:144:o;6257:171::-;6324:20;;6384:18;6373:30;;6363:41;;6353:69;;6418:1;6415;6408:12;6353:69;6257:171;;;:::o;6433:184::-;6491:6;6544:2;6532:9;6523:7;6519:23;6515:32;6512:52;;;6560:1;6557;6550:12;6512:52;6583:28;6601:9;6583:28;:::i;6827:601::-;6976:6;6984;6992;7045:2;7033:9;7024:7;7020:23;7016:32;7013:52;;;7061:1;7058;7051:12;7013:52;7100:9;7087:23;7119:31;7144:5;7119:31;:::i;:::-;7169:5;-1:-1:-1;7226:2:144;7211:18;;7198:32;7239:33;7198:32;7239:33;:::i;:::-;7291:7;-1:-1:-1;7350:2:144;7335:18;;7322:32;7363:33;7322:32;7363:33;:::i;:::-;7415:7;7405:17;;;6827:601;;;;;:::o;8244:118::-;8330:5;8323:13;8316:21;8309:5;8306:32;8296:60;;8352:1;8349;8342:12;8367:732;8467:6;8475;8483;8491;8499;8552:3;8540:9;8531:7;8527:23;8523:33;8520:53;;;8569:1;8566;8559:12;8520:53;8608:9;8595:23;8627:31;8652:5;8627:31;:::i;:::-;8677:5;-1:-1:-1;8729:2:144;8714:18;;8701:32;;-1:-1:-1;8752:37:144;8785:2;8770:18;;8752:37;:::i;:::-;8742:47;;8841:2;8830:9;8826:18;8813:32;8854:30;8876:7;8854:30;:::i;:::-;8903:7;-1:-1:-1;8961:3:144;8946:19;;8933:33;8989:18;8978:30;;8975:50;;;9021:1;9018;9011:12;8975:50;9044:49;9085:7;9076:6;9065:9;9061:22;9044:49;:::i;:::-;9034:59;;;8367:732;;;;;;;;:::o;9104:642::-;9367:6;9362:3;9355:19;9404:6;9399:2;9394:3;9390:12;9383:28;9463:66;9454:6;9449:3;9445:16;9441:89;9436:2;9431:3;9427:12;9420:111;9584:6;9577:14;9570:22;9565:3;9561:32;9556:2;9551:3;9547:12;9540:54;9337:3;9623:6;9617:13;9639:60;9692:6;9687:2;9682:3;9678:12;9673:2;9665:6;9661:15;9639:60;:::i;:::-;9719:16;;;;9737:2;9715:25;;9104:642;-1:-1:-1;;;;;;9104:642:144:o;9974:251::-;10044:6;10097:2;10085:9;10076:7;10072:23;10068:32;10065:52;;;10113:1;10110;10103:12;10065:52;10145:9;10139:16;10164:31;10189:5;10164:31;:::i;10844:192::-;10923:13;;10976:34;10965:46;;10955:57;;10945:85;;11026:1;11023;11016:12;11041:616;11144:6;11197:2;11185:9;11176:7;11172:23;11168:32;11165:52;;;11213:1;11210;11203:12;11165:52;11246:2;11240:9;11288:2;11280:6;11276:15;11357:6;11345:10;11342:22;11321:18;11309:10;11306:34;11303:62;11300:88;;;11368:18;;:::i;:::-;11404:2;11397:22;11443:16;;11428:32;;11493:49;11538:2;11523:18;;11493:49;:::i;:::-;11488:2;11480:6;11476:15;11469:74;11576:49;11621:2;11610:9;11606:18;11576:49;:::i;:::-;11571:2;11559:15;;11552:74;11563:6;11041:616;-1:-1:-1;;;11041:616:144:o;11662:647::-;11755:6;11808:3;11796:9;11787:7;11783:23;11779:33;11776:53;;;11825:1;11822;11815:12;11776:53;11858:2;11852:9;11900:3;11892:6;11888:16;11970:6;11958:10;11955:22;11934:18;11922:10;11919:34;11916:62;11913:88;;;11981:18;;:::i;:::-;12021:10;12017:2;12010:22;;12069:9;12056:23;12048:6;12041:39;12141:2;12130:9;12126:18;12113:32;12108:2;12100:6;12096:15;12089:57;12207:2;12196:9;12192:18;12179:32;12174:2;12166:6;12162:15;12155:57;12273:2;12262:9;12258:18;12245:32;12240:2;12232:6;12228:15;12221:57;12297:6;12287:16;;;11662:647;;;;:::o;13806:934::-;13942:9;13976:18;14017:2;14009:6;14006:14;14003:40;;;14023:18;;:::i;:::-;14069:6;14066:1;14062:14;14095:4;14119:28;14143:2;14139;14135:11;14119:28;:::i;:::-;14181:19;;;14251:14;;;;14216:12;;;;14288:14;14277:26;;14274:46;;;14316:1;14313;14306:12;14274:46;14340:5;14354:353;14370:6;14365:3;14362:15;14354:353;;;14456:3;14443:17;14492:2;14479:11;14476:19;14473:109;;;14536:1;14565:2;14561;14554:14;14473:109;14607:57;14649:14;14635:11;14628:5;14624:23;14607:57;:::i;:::-;14595:70;;-1:-1:-1;14685:12:144;;;;14387;;14354:353;;;-1:-1:-1;14729:5:144;13806:934;-1:-1:-1;;;;;;;13806:934:144:o;15164:245::-;15231:6;15284:2;15272:9;15263:7;15259:23;15255:32;15252:52;;;15300:1;15297;15290:12;15252:52;15332:9;15326:16;15351:28;15373:5;15351:28;:::i;16265:184::-;16335:6;16388:2;16376:9;16367:7;16363:23;16359:32;16356:52;;;16404:1;16401;16394:12;16356:52;-1:-1:-1;16427:16:144;;16265:184;-1:-1:-1;16265:184:144:o;18796:::-;18848:77;18845:1;18838:88;18945:4;18942:1;18935:15;18969:4;18966:1;18959:15;18985:270;19024:7;19056:18;19101:2;19098:1;19094:10;19131:2;19128:1;19124:10;19187:3;19183:2;19179:12;19174:3;19171:21;19164:3;19157:11;19150:19;19146:47;19143:73;;;19196:18;;:::i;:::-;19236:13;;18985:270;-1:-1:-1;;;;18985:270:144:o;19260:236::-;19299:3;19327:18;19372:2;19369:1;19365:10;19402:2;19399:1;19395:10;19433:3;19429:2;19425:12;19420:3;19417:21;19414:47;;;19441:18;;:::i;:::-;19477:13;;19260:236;-1:-1:-1;;;;19260:236:144:o;20115:125::-;20155:4;20183:1;20180;20177:8;20174:34;;;20188:18;;:::i;:::-;-1:-1:-1;20225:9:144;;20115:125::o;20245:184::-;20297:77;20294:1;20287:88;20394:4;20391:1;20384:15;20418:4;20415:1;20408:15;20434:308;20473:1;20499;20489:35;;20504:18;;:::i;:::-;20621:66;20618:1;20615:73;20546:66;20543:1;20540:73;20536:153;20533:179;;;20692:18;;:::i;:::-;-1:-1:-1;20726:10:144;;20434:308::o;20747:369::-;20786:4;20822:1;20819;20815:9;20931:1;20863:66;20859:74;20856:1;20852:82;20847:2;20840:10;20836:99;20833:125;;;20938:18;;:::i;:::-;21057:1;20989:66;20985:74;20982:1;20978:82;20974:2;20970:91;20967:117;;;21064:18;;:::i;:::-;-1:-1:-1;;21101:9:144;;20747:369::o;21121:655::-;21160:7;21192:66;21284:1;21281;21277:9;21312:1;21309;21305:9;21357:1;21353:2;21349:10;21346:1;21343:17;21338:2;21334;21330:11;21326:35;21323:61;;;21364:18;;:::i;:::-;21403:66;21495:1;21492;21488:9;21542:1;21538:2;21533:11;21530:1;21526:19;21521:2;21517;21513:11;21509:37;21506:63;;;21549:18;;:::i;:::-;21595:1;21592;21588:9;21578:19;;21642:1;21638:2;21633:11;21630:1;21626:19;21621:2;21617;21613:11;21609:37;21606:63;;;21649:18;;:::i;:::-;21714:1;21710:2;21705:11;21702:1;21698:19;21693:2;21689;21685:11;21681:37;21678:63;;;21721:18;;:::i;:::-;-1:-1:-1;;;21761:9:144;;;;;21121:655;-1:-1:-1;;;21121:655:144:o;21781:367::-;21820:3;21855:1;21852;21848:9;21964:1;21896:66;21892:74;21889:1;21885:82;21880:2;21873:10;21869:99;21866:125;;;21971:18;;:::i;:::-;22090:1;22022:66;22018:74;22015:1;22011:82;22007:2;22003:91;22000:117;;;22097:18;;:::i;:::-;-1:-1:-1;;22133:9:144;;21781:367::o;22153:228::-;22193:7;22319:1;22251:66;22247:74;22244:1;22241:81;22236:1;22229:9;22222:17;22218:105;22215:131;;;22326:18;;:::i;:::-;-1:-1:-1;22366:9:144;;22153:228::o;22386:120::-;22426:1;22452;22442:35;;22457:18;;:::i;:::-;-1:-1:-1;22491:9:144;;22386:120::o;22907:656::-;23194:6;23183:9;23176:25;23157:4;23220:42;23310:2;23302:6;23298:15;23293:2;23282:9;23278:18;23271:43;23362:2;23354:6;23350:15;23345:2;23334:9;23330:18;23323:43;;23402:6;23397:2;23386:9;23382:18;23375:34;23446:6;23440:3;23429:9;23425:19;23418:35;23490:3;23484;23473:9;23469:19;23462:32;23511:46;23552:3;23541:9;23537:19;23529:6;23511:46;:::i;:::-;23503:54;22907:656;-1:-1:-1;;;;;;;;22907:656:144:o;23568:128::-;23608:3;23639:1;23635:6;23632:1;23629:13;23626:39;;;23645:18;;:::i;:::-;-1:-1:-1;23681:9:144;;23568:128::o;24113:167::-;24191:13;;24244:10;24233:22;;24223:33;;24213:61;;24270:1;24267;24260:12;24285:160;24362:13;;24415:4;24404:16;;24394:27;;24384:55;;24435:1;24432;24425:12;24450:888;24553:6;24606:3;24594:9;24585:7;24581:23;24577:33;24574:53;;;24623:1;24620;24613:12;24574:53;24656:2;24650:9;24698:3;24690:6;24686:16;24768:6;24756:10;24753:22;24732:18;24720:10;24717:34;24714:62;24711:88;;;24779:18;;:::i;:::-;24815:2;24808:22;24854:39;24883:9;24854:39;:::i;:::-;24846:6;24839:55;24927:47;24970:2;24959:9;24955:18;24927:47;:::i;:::-;24922:2;24914:6;24910:15;24903:72;25008:47;25051:2;25040:9;25036:18;25008:47;:::i;:::-;25003:2;24995:6;24991:15;24984:72;25089:48;25133:2;25122:9;25118:18;25089:48;:::i;:::-;25084:2;25076:6;25072:15;25065:73;25172:49;25216:3;25205:9;25201:19;25172:49;:::i;:::-;25166:3;25158:6;25154:16;25147:75;25256:50;25301:3;25290:9;25286:19;25256:50;:::i;:::-;25250:3;25238:16;;25231:76;25242:6;24450:888;-1:-1:-1;;;24450:888:144:o;25343:195::-;25382:3;25413:66;25406:5;25403:77;25400:103;;25483:18;;:::i;:::-;-1:-1:-1;25530:1:144;25519:13;;25343:195::o;26080:184::-;26132:77;26129:1;26122:88;26229:4;26226:1;26219:15;26253:4;26250:1;26243:15;28712:157;28742:1;28776:4;28773:1;28769:12;28800:3;28790:37;;28807:18;;:::i;:::-;28859:3;28852:4;28849:1;28845:12;28841:22;28836:27;;;28712:157;;;;:::o;28874:195::-;28912:4;28949;28946:1;28942:12;28981:4;28978:1;28974:12;29006:3;29001;28998:12;28995:38;;;29013:18;;:::i;:::-;29050:13;;;28874:195;-1:-1:-1;;;28874:195:144:o;32694:184::-;32746:77;32743:1;32736:88;32843:4;32840:1;32833:15;32867:4;32864:1;32857:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "depositTransaction(address,uint256,uint64,bool,bytes)": "e9e05c42",
    "donateETH()": "8b4c40b0",
    "finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))": "8c3152e9",
    "finalizedWithdrawals(bytes32)": "a14238e7",
    "guardian()": "452a9320",
    "initialize(address,address,address)": "c0c53b8b",
    "isOutputFinalized(uint256)": "6dbffb78",
    "l2Oracle()": "9b5f694a",
    "l2Sender()": "9bf62d82",
    "minimumGasLimit(uint64)": "a35d99df",
    "params()": "cff0ab96",
    "paused()": "5c975abb",
    "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])": "4870496f",
    "provenWithdrawals(bytes32)": "e965084c",
    "superchainConfig()": "35e80ab3",
    "systemConfig()": "33d7e2bd",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BadTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GasEstimation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LargeCalldata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SmallGasLimit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"opaqueData\",\"type\":\"bytes\"}],\"name\":\"TransactionDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"withdrawalHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"WithdrawalFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"withdrawalHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"WithdrawalProven\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"_isCreation\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"depositTransaction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Types.WithdrawalTransaction\",\"name\":\"_tx\",\"type\":\"tuple\"}],\"name\":\"finalizeWithdrawalTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"finalizedWithdrawals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract L2OutputOracle\",\"name\":\"_l2Oracle\",\"type\":\"address\"},{\"internalType\":\"contract SystemConfig\",\"name\":\"_systemConfig\",\"type\":\"address\"},{\"internalType\":\"contract SuperchainConfig\",\"name\":\"_superchainConfig\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_l2OutputIndex\",\"type\":\"uint256\"}],\"name\":\"isOutputFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Oracle\",\"outputs\":[{\"internalType\":\"contract L2OutputOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Sender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_byteCount\",\"type\":\"uint64\"}],\"name\":\"minimumGasLimit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"prevBaseFee\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"prevBoughtGas\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"prevBlockNum\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Types.WithdrawalTransaction\",\"name\":\"_tx\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_l2OutputIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"messagePasserStorageRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"latestBlockhash\",\"type\":\"bytes32\"}],\"internalType\":\"struct Types.OutputRootProof\",\"name\":\"_outputRootProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes[]\",\"name\":\"_withdrawalProof\",\"type\":\"bytes[]\"}],\"name\":\"proveWithdrawalTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"provenWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"outputRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint128\",\"name\":\"timestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"l2OutputIndex\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainConfig\",\"outputs\":[{\"internalType\":\"contract SuperchainConfig\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemConfig\",\"outputs\":[{\"internalType\":\"contract SystemConfig\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:proxied\":\"@title OptimismPortal\",\"events\":{\"TransactionDeposited(address,address,uint256,bytes)\":{\"params\":{\"from\":\"Address that triggered the deposit transaction.\",\"opaqueData\":\"ABI encoded deposit data to be parsed off-chain.\",\"to\":\"Address that the deposit transaction is directed to.\",\"version\":\"Version of this deposit transaction event.\"}},\"WithdrawalFinalized(bytes32,bool)\":{\"params\":{\"success\":\"Whether the withdrawal transaction was successful.\",\"withdrawalHash\":\"Hash of the withdrawal transaction.\"}},\"WithdrawalProven(bytes32,address,address)\":{\"params\":{\"from\":\"Address that triggered the withdrawal transaction.\",\"to\":\"Address that the withdrawal transaction is directed to.\",\"withdrawalHash\":\"Hash of the withdrawal transaction.\"}}},\"kind\":\"dev\",\"methods\":{\"depositTransaction(address,uint256,uint64,bool,bytes)\":{\"params\":{\"_data\":\"Data to trigger the recipient with.\",\"_gasLimit\":\"Amount of L2 gas to purchase by burning gas on L1.\",\"_isCreation\":\"Whether or not the transaction is a contract creation.\",\"_to\":\"Target address on L2.\",\"_value\":\"ETH value to send to the recipient.\"}},\"finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))\":{\"params\":{\"_tx\":\"Withdrawal transaction to finalize.\"}},\"guardian()\":{\"custom:legacy\":\"\",\"returns\":{\"_0\":\"Address of the guardian.\"}},\"initialize(address,address,address)\":{\"params\":{\"_l2Oracle\":\"Contract of the L2OutputOracle.\",\"_superchainConfig\":\"Contract of the SuperchainConfig.\",\"_systemConfig\":\"Contract of the SystemConfig.\"}},\"isOutputFinalized(uint256)\":{\"params\":{\"_l2OutputIndex\":\"Index of the L2 output to check.\"},\"returns\":{\"_0\":\"Whether or not the output is finalized.\"}},\"minimumGasLimit(uint64)\":{\"params\":{\"_byteCount\":\"Number of bytes in the calldata.\"},\"returns\":{\"_0\":\"The minimum gas limit for a deposit.\"}},\"paused()\":{\"returns\":{\"paused_\":\"Whether or not the contract is paused.\"}},\"proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])\":{\"params\":{\"_l2OutputIndex\":\"L2 output index to prove against.\",\"_outputRootProof\":\"Inclusion proof of the L2ToL1MessagePasser contract's storage root.\",\"_tx\":\"Withdrawal transaction to finalize.\",\"_withdrawalProof\":\"Inclusion proof of the withdrawal in L2ToL1MessagePasser contract.\"}}},\"stateVariables\":{\"l2Oracle\":{\"custom:network-specific\":\"\"},\"spacer_53_0_1\":{\"custom:legacy\":\"@custom:spacer paused\"},\"systemConfig\":{\"custom:network-specific\":\"\"},\"version\":{\"custom:semver\":\"2.6.0\"}},\"version\":1},\"userdoc\":{\"errors\":{\"BadTarget()\":[{\"notice\":\"Error for when a deposit or withdrawal is to a bad target.\"}],\"CallPaused()\":[{\"notice\":\"Error for when a method cannot be called when paused. This could be renamed         to `Paused` in the future, but it collides with the `Paused` event.\"}],\"GasEstimation()\":[{\"notice\":\"Error for special gas estimation.\"}],\"LargeCalldata()\":[{\"notice\":\"Error for when a deposit has too much calldata.\"}],\"OutOfGas()\":[{\"notice\":\"Error returned when too much gas resource is consumed.\"}],\"SmallGasLimit()\":[{\"notice\":\"Error for when a deposit has too small of a gas limit.\"}]},\"events\":{\"TransactionDeposited(address,address,uint256,bytes)\":{\"notice\":\"Emitted when a transaction is deposited from L1 to L2.         The parameters of this event are read by the rollup node and used to derive deposit         transactions on L2.\"},\"WithdrawalFinalized(bytes32,bool)\":{\"notice\":\"Emitted when a withdrawal transaction is finalized.\"},\"WithdrawalProven(bytes32,address,address)\":{\"notice\":\"Emitted when a withdrawal transaction is proven.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs the OptimismPortal contract.\"},\"depositTransaction(address,uint256,uint64,bool,bytes)\":{\"notice\":\"Accepts deposits of ETH and data, and emits a TransactionDeposited event for use in         deriving deposit transactions. Note that if a deposit is made by a contract, its         address will be aliased when retrieved using `tx.origin` or `msg.sender`. Consider         using the CrossDomainMessenger contracts for a simpler developer experience.\"},\"donateETH()\":{\"notice\":\"Accepts ETH value without triggering a deposit to L2.         This function mainly exists for the sake of the migration between the legacy         Optimism system and Bedrock.\"},\"finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))\":{\"notice\":\"Finalizes a withdrawal transaction.\"},\"finalizedWithdrawals(bytes32)\":{\"notice\":\"A list of withdrawal hashes which have been successfully finalized.\"},\"guardian()\":{\"notice\":\"Getter function for the address of the guardian.         Public getter is legacy and will be removed in the future. Use `SuperchainConfig.guardian()` instead.\"},\"initialize(address,address,address)\":{\"notice\":\"Initializer.\"},\"isOutputFinalized(uint256)\":{\"notice\":\"Determine if a given output is finalized.         Reverts if the call to l2Oracle.getL2Output reverts.         Returns a boolean otherwise.\"},\"l2Oracle()\":{\"notice\":\"Contract of the L2OutputOracle.\"},\"l2Sender()\":{\"notice\":\"Address of the L2 account which initiated a withdrawal in this transaction.         If the of this variable is the default L2 sender address, then we are NOT inside of         a call to finalizeWithdrawalTransaction.\"},\"minimumGasLimit(uint64)\":{\"notice\":\"Computes the minimum gas limit for a deposit.         The minimum gas limit linearly increases based on the size of the calldata.         This is to prevent users from creating L2 resource usage without paying for it.         This function can be used when interacting with the portal to ensure forwards         compatibility.\"},\"params()\":{\"notice\":\"EIP-1559 style gas parameters.\"},\"paused()\":{\"notice\":\"Getter for the current paused status.\"},\"proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])\":{\"notice\":\"Proves a withdrawal transaction.\"},\"provenWithdrawals(bytes32)\":{\"notice\":\"A mapping of withdrawal hashes to `ProvenWithdrawal` data.\"},\"superchainConfig()\":{\"notice\":\"Contract of the Superchain Config.\"},\"systemConfig()\":{\"notice\":\"Contract of the SystemConfig.\"},\"version()\":{\"notice\":\"Semantic version.\"}},\"notice\":\"The OptimismPortal is a low-level contract responsible for passing messages between L1         and L2. Messages sent directly to the OptimismPortal have no form of replayability.         Users are encouraged to use the L1CrossDomainMessenger for a higher-level interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L1/OptimismPortal.sol\":\"OptimismPortal\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/solady/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"src/L1/L2OutputOracle.sol\":{\"keccak256\":\"0x342c5084f3c640c90530122bd78372c011d6162e698dd8c8daec9496fef01d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8700a3d486bd62cbb861ff80175b8040336940515791073af6a036db7c2df303\",\"dweb:/ipfs/QmSGKTH84rVHWgMg4d6GQZCmCJ16KuUuTsMwPMDdJxCsww\"]},\"src/L1/OptimismPortal.sol\":{\"keccak256\":\"0xf46a1158e86edcbb157d0b06a32db37867c0bc9d2aeeed6a8110547c7537201a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0aeb33d425db200953063e3576403b78c50e3a5e7b4f56ef4bead28919406ee2\",\"dweb:/ipfs/QmUFb1rEQnCFrGRZQPHgFFWJQ48SR7wodiSFLgQKu8Jx6k\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0xde3ac62c60f27a3f1ba06eec94f4eda45e7ec5544c6a5d6b79543a7184e44408\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://265a2845c4ff0d9076dd0505755cf2bdf799f4fdc09ef016865a26b51f5c3409\",\"dweb:/ipfs/QmRzSdBD8jmQf3U9u2ATRAzzuyo6c5ugz8VA5ZM4vzoGiM\"]},\"src/L1/SuperchainConfig.sol\":{\"keccak256\":\"0x5fab874f980fe3e52c3398ddd25b655c56af0c98c15588b2ad9ebf30671d859d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0aa613d38eceb621f8569fc714f521bc1f2df3d029552186ab3cdf2ee5d53f\",\"dweb:/ipfs/QmZDzFxhTXLW79eohQbr1nghNh3oNC4CUfH7uMX8CsjVAB\"]},\"src/L1/SystemConfig.sol\":{\"keccak256\":\"0x9fc3eea49452ba145bb53cb20e43ab84f5963fc909ca3c2904d1e3642500cf14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dde5981a89741badca37053cdda5bfdbe549e7ada4d983794290d1a80e45071\",\"dweb:/ipfs/QmNo8SHsx89SZrUqLcyUEbgw34SS4LEDZ4qXTZxzhuBV7M\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x91345e053584f82ad04d682ba821cf3ede808304f5b2a88116a894cf692c21db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://005e3c42d2edfca0a506cbda94d3b0104eddf20c00bd1bd25272f53f2ef74c72\",\"dweb:/ipfs/QmdaW6Nge6NKoGvFqRpQjBpM2fXpc5y8WpZyBnDnKicdJq\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Bytes.sol\":{\"keccak256\":\"0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782\",\"dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xe0aeec7d6e5d1e44a11405d3b5bfc384ea092c39bea0b763ab937a26fd427132\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11aa3bff9da26ca2545132ec7994866690446a5321023811c254410d9593bd9b\",\"dweb:/ipfs/QmVxWqadxvdfkqdrhfWisDqeAthibn4HEE1P6o9aFxXLhp\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0x5586d9715d8fbdd48245220f13a96573555fd847a333869e862ae186802e0311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f34dbd5a0a8918120e226f549a8337bd6fc7176653159a85929ce6fe3d66e11\",\"dweb:/ipfs/QmQKnhRPMnhKBRLmV2C1BqAsPpQg8xVFXi7ZLuHU9XQ1BE\"]},\"src/libraries/Hashing.sol\":{\"keccak256\":\"0x89c07a0ca102cbe57b4e082543f2dd6dae0e1fd4a87908a334bd076fc914e7b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69c83489c9544ab442dc244c2feb2c6811b726a5eb5a509b97fc5ccb90b98c12\",\"dweb:/ipfs/QmPGGJeLasc1HWHzd6odvWcNvFPQrbYtDubZcv8yp1HLtF\"]},\"src/libraries/PortalErrors.sol\":{\"keccak256\":\"0x57adcaa45a1ce9c5af04d0fe4ecbc86e6ff3f947f7957ab55bdade129adcf558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf485f11085ad6d1ba1386fdb340f65eb1048187692ad3d9eb8816e290140c1\",\"dweb:/ipfs/Qmb423b45TLV8PdhFa8Hs72eom5D2C5q4gVcYGNzDh4EMU\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/libraries/Storage.sol\":{\"keccak256\":\"0x7ce27a05552aa69afa6b2ab6684dfe99f27366cf8ef2046baeb1fb62fff0022f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a24f3ed56681720707a5ab0372fd67fcb1a4f6fb072c7140cda28bdb70f269\",\"dweb:/ipfs/QmW9uTpUULV4xmP7A7MoBDeDhVfQgmJG5qVUFGtXxWpWWK\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/libraries/rlp/RLPReader.sol\":{\"keccak256\":\"0x99731a39bc10203719d448117b0e6ef47771890440d595d118084d7988d59afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dbeb75d0cc8de58350cc15df8867bf97d8492e0617b1c62733ace6155c6915a\",\"dweb:/ipfs/QmNiXzskPE72h93F8EXT8wAXKzEh2EERLbubdVMfwTQbtj\"]},\"src/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b\",\"dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV\"]},\"src/libraries/trie/MerkleTrie.sol\":{\"keccak256\":\"0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74\",\"dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE\"]},\"src/libraries/trie/SecureMerkleTrie.sol\":{\"keccak256\":\"0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681\",\"dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]},\"src/vendor/AddressAliasHelper.sol\":{\"keccak256\":\"0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88\",\"dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadTarget"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GasEstimation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LargeCalldata"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutOfGas"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SmallGasLimit"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "opaqueData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransactionDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawalProven",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "_gasLimit",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "_isCreation",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositTransaction"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "donateETH"
        },
        {
          "inputs": [
            {
              "internalType": "struct Types.WithdrawalTransaction",
              "name": "_tx",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalizeWithdrawalTransaction"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "finalizedWithdrawals",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "guardian",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract L2OutputOracle",
              "name": "_l2Oracle",
              "type": "address"
            },
            {
              "internalType": "contract SystemConfig",
              "name": "_systemConfig",
              "type": "address"
            },
            {
              "internalType": "contract SuperchainConfig",
              "name": "_superchainConfig",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_l2OutputIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOutputFinalized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l2Oracle",
          "outputs": [
            {
              "internalType": "contract L2OutputOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l2Sender",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_byteCount",
              "type": "uint64"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "minimumGasLimit",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "params",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "prevBaseFee",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "prevBoughtGas",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "prevBlockNum",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "paused_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Types.WithdrawalTransaction",
              "name": "_tx",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "_l2OutputIndex",
              "type": "uint256"
            },
            {
              "internalType": "struct Types.OutputRootProof",
              "name": "_outputRootProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "version",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messagePasserStorageRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "latestBlockhash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes[]",
              "name": "_withdrawalProof",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proveWithdrawalTransaction"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "provenWithdrawals",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "outputRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint128",
              "name": "timestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "l2OutputIndex",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "superchainConfig",
          "outputs": [
            {
              "internalType": "contract SuperchainConfig",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "systemConfig",
          "outputs": [
            {
              "internalType": "contract SystemConfig",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "depositTransaction(address,uint256,uint64,bool,bytes)": {
            "params": {
              "_data": "Data to trigger the recipient with.",
              "_gasLimit": "Amount of L2 gas to purchase by burning gas on L1.",
              "_isCreation": "Whether or not the transaction is a contract creation.",
              "_to": "Target address on L2.",
              "_value": "ETH value to send to the recipient."
            }
          },
          "finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))": {
            "params": {
              "_tx": "Withdrawal transaction to finalize."
            }
          },
          "guardian()": {
            "custom:legacy": "",
            "returns": {
              "_0": "Address of the guardian."
            }
          },
          "initialize(address,address,address)": {
            "params": {
              "_l2Oracle": "Contract of the L2OutputOracle.",
              "_superchainConfig": "Contract of the SuperchainConfig.",
              "_systemConfig": "Contract of the SystemConfig."
            }
          },
          "isOutputFinalized(uint256)": {
            "params": {
              "_l2OutputIndex": "Index of the L2 output to check."
            },
            "returns": {
              "_0": "Whether or not the output is finalized."
            }
          },
          "minimumGasLimit(uint64)": {
            "params": {
              "_byteCount": "Number of bytes in the calldata."
            },
            "returns": {
              "_0": "The minimum gas limit for a deposit."
            }
          },
          "paused()": {
            "returns": {
              "paused_": "Whether or not the contract is paused."
            }
          },
          "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])": {
            "params": {
              "_l2OutputIndex": "L2 output index to prove against.",
              "_outputRootProof": "Inclusion proof of the L2ToL1MessagePasser contract's storage root.",
              "_tx": "Withdrawal transaction to finalize.",
              "_withdrawalProof": "Inclusion proof of the withdrawal in L2ToL1MessagePasser contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructs the OptimismPortal contract."
          },
          "depositTransaction(address,uint256,uint64,bool,bytes)": {
            "notice": "Accepts deposits of ETH and data, and emits a TransactionDeposited event for use in         deriving deposit transactions. Note that if a deposit is made by a contract, its         address will be aliased when retrieved using `tx.origin` or `msg.sender`. Consider         using the CrossDomainMessenger contracts for a simpler developer experience."
          },
          "donateETH()": {
            "notice": "Accepts ETH value without triggering a deposit to L2.         This function mainly exists for the sake of the migration between the legacy         Optimism system and Bedrock."
          },
          "finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))": {
            "notice": "Finalizes a withdrawal transaction."
          },
          "finalizedWithdrawals(bytes32)": {
            "notice": "A list of withdrawal hashes which have been successfully finalized."
          },
          "guardian()": {
            "notice": "Getter function for the address of the guardian.         Public getter is legacy and will be removed in the future. Use `SuperchainConfig.guardian()` instead."
          },
          "initialize(address,address,address)": {
            "notice": "Initializer."
          },
          "isOutputFinalized(uint256)": {
            "notice": "Determine if a given output is finalized.         Reverts if the call to l2Oracle.getL2Output reverts.         Returns a boolean otherwise."
          },
          "l2Oracle()": {
            "notice": "Contract of the L2OutputOracle."
          },
          "l2Sender()": {
            "notice": "Address of the L2 account which initiated a withdrawal in this transaction.         If the of this variable is the default L2 sender address, then we are NOT inside of         a call to finalizeWithdrawalTransaction."
          },
          "minimumGasLimit(uint64)": {
            "notice": "Computes the minimum gas limit for a deposit.         The minimum gas limit linearly increases based on the size of the calldata.         This is to prevent users from creating L2 resource usage without paying for it.         This function can be used when interacting with the portal to ensure forwards         compatibility."
          },
          "params()": {
            "notice": "EIP-1559 style gas parameters."
          },
          "paused()": {
            "notice": "Getter for the current paused status."
          },
          "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])": {
            "notice": "Proves a withdrawal transaction."
          },
          "provenWithdrawals(bytes32)": {
            "notice": "A mapping of withdrawal hashes to `ProvenWithdrawal` data."
          },
          "superchainConfig()": {
            "notice": "Contract of the Superchain Config."
          },
          "systemConfig()": {
            "notice": "Contract of the SystemConfig."
          },
          "version()": {
            "notice": "Semantic version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@lib-keccak/=lib/lib-keccak/contracts/lib/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "@solady-test/=lib/lib-keccak/lib/solady/test/",
        "@solady/=lib/solady/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/",
        "lib-keccak/=lib/lib-keccak/contracts/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solady/=lib/solady/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/L1/OptimismPortal.sol": "OptimismPortal"
      },
      "evmVersion": "london",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "src/L1/L2OutputOracle.sol": {
        "keccak256": "0x342c5084f3c640c90530122bd78372c011d6162e698dd8c8daec9496fef01d42",
        "urls": [
          "bzz-raw://8700a3d486bd62cbb861ff80175b8040336940515791073af6a036db7c2df303",
          "dweb:/ipfs/QmSGKTH84rVHWgMg4d6GQZCmCJ16KuUuTsMwPMDdJxCsww"
        ],
        "license": "MIT"
      },
      "src/L1/OptimismPortal.sol": {
        "keccak256": "0xf46a1158e86edcbb157d0b06a32db37867c0bc9d2aeeed6a8110547c7537201a",
        "urls": [
          "bzz-raw://0aeb33d425db200953063e3576403b78c50e3a5e7b4f56ef4bead28919406ee2",
          "dweb:/ipfs/QmUFb1rEQnCFrGRZQPHgFFWJQ48SR7wodiSFLgQKu8Jx6k"
        ],
        "license": "MIT"
      },
      "src/L1/ResourceMetering.sol": {
        "keccak256": "0xde3ac62c60f27a3f1ba06eec94f4eda45e7ec5544c6a5d6b79543a7184e44408",
        "urls": [
          "bzz-raw://265a2845c4ff0d9076dd0505755cf2bdf799f4fdc09ef016865a26b51f5c3409",
          "dweb:/ipfs/QmRzSdBD8jmQf3U9u2ATRAzzuyo6c5ugz8VA5ZM4vzoGiM"
        ],
        "license": "MIT"
      },
      "src/L1/SuperchainConfig.sol": {
        "keccak256": "0x5fab874f980fe3e52c3398ddd25b655c56af0c98c15588b2ad9ebf30671d859d",
        "urls": [
          "bzz-raw://4e0aa613d38eceb621f8569fc714f521bc1f2df3d029552186ab3cdf2ee5d53f",
          "dweb:/ipfs/QmZDzFxhTXLW79eohQbr1nghNh3oNC4CUfH7uMX8CsjVAB"
        ],
        "license": "MIT"
      },
      "src/L1/SystemConfig.sol": {
        "keccak256": "0x9fc3eea49452ba145bb53cb20e43ab84f5963fc909ca3c2904d1e3642500cf14",
        "urls": [
          "bzz-raw://0dde5981a89741badca37053cdda5bfdbe549e7ada4d983794290d1a80e45071",
          "dweb:/ipfs/QmNo8SHsx89SZrUqLcyUEbgw34SS4LEDZ4qXTZxzhuBV7M"
        ],
        "license": "MIT"
      },
      "src/libraries/Arithmetic.sol": {
        "keccak256": "0x91345e053584f82ad04d682ba821cf3ede808304f5b2a88116a894cf692c21db",
        "urls": [
          "bzz-raw://005e3c42d2edfca0a506cbda94d3b0104eddf20c00bd1bd25272f53f2ef74c72",
          "dweb:/ipfs/QmdaW6Nge6NKoGvFqRpQjBpM2fXpc5y8WpZyBnDnKicdJq"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "src/libraries/Bytes.sol": {
        "keccak256": "0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859",
        "urls": [
          "bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782",
          "dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xe0aeec7d6e5d1e44a11405d3b5bfc384ea092c39bea0b763ab937a26fd427132",
        "urls": [
          "bzz-raw://11aa3bff9da26ca2545132ec7994866690446a5321023811c254410d9593bd9b",
          "dweb:/ipfs/QmVxWqadxvdfkqdrhfWisDqeAthibn4HEE1P6o9aFxXLhp"
        ],
        "license": "MIT"
      },
      "src/libraries/Encoding.sol": {
        "keccak256": "0x5586d9715d8fbdd48245220f13a96573555fd847a333869e862ae186802e0311",
        "urls": [
          "bzz-raw://3f34dbd5a0a8918120e226f549a8337bd6fc7176653159a85929ce6fe3d66e11",
          "dweb:/ipfs/QmQKnhRPMnhKBRLmV2C1BqAsPpQg8xVFXi7ZLuHU9XQ1BE"
        ],
        "license": "MIT"
      },
      "src/libraries/Hashing.sol": {
        "keccak256": "0x89c07a0ca102cbe57b4e082543f2dd6dae0e1fd4a87908a334bd076fc914e7b8",
        "urls": [
          "bzz-raw://69c83489c9544ab442dc244c2feb2c6811b726a5eb5a509b97fc5ccb90b98c12",
          "dweb:/ipfs/QmPGGJeLasc1HWHzd6odvWcNvFPQrbYtDubZcv8yp1HLtF"
        ],
        "license": "MIT"
      },
      "src/libraries/PortalErrors.sol": {
        "keccak256": "0x57adcaa45a1ce9c5af04d0fe4ecbc86e6ff3f947f7957ab55bdade129adcf558",
        "urls": [
          "bzz-raw://3cf485f11085ad6d1ba1386fdb340f65eb1048187692ad3d9eb8816e290140c1",
          "dweb:/ipfs/Qmb423b45TLV8PdhFa8Hs72eom5D2C5q4gVcYGNzDh4EMU"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeCall.sol": {
        "keccak256": "0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f",
        "urls": [
          "bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a",
          "dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"
        ],
        "license": "MIT"
      },
      "src/libraries/Storage.sol": {
        "keccak256": "0x7ce27a05552aa69afa6b2ab6684dfe99f27366cf8ef2046baeb1fb62fff0022f",
        "urls": [
          "bzz-raw://a6a24f3ed56681720707a5ab0372fd67fcb1a4f6fb072c7140cda28bdb70f269",
          "dweb:/ipfs/QmW9uTpUULV4xmP7A7MoBDeDhVfQgmJG5qVUFGtXxWpWWK"
        ],
        "license": "MIT"
      },
      "src/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPReader.sol": {
        "keccak256": "0x99731a39bc10203719d448117b0e6ef47771890440d595d118084d7988d59afb",
        "urls": [
          "bzz-raw://1dbeb75d0cc8de58350cc15df8867bf97d8492e0617b1c62733ace6155c6915a",
          "dweb:/ipfs/QmNiXzskPE72h93F8EXT8wAXKzEh2EERLbubdVMfwTQbtj"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6",
        "urls": [
          "bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b",
          "dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV"
        ],
        "license": "MIT"
      },
      "src/libraries/trie/MerkleTrie.sol": {
        "keccak256": "0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c",
        "urls": [
          "bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74",
          "dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE"
        ],
        "license": "MIT"
      },
      "src/libraries/trie/SecureMerkleTrie.sol": {
        "keccak256": "0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288",
        "urls": [
          "bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681",
          "dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      },
      "src/vendor/AddressAliasHelper.sol": {
        "keccak256": "0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237",
        "urls": [
          "bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88",
          "dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 43796,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 43799,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 68030,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "params",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(ResourceParams)68013_storage"
      },
      {
        "astId": 68035,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "__gap",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 66241,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "l2Sender",
        "offset": 0,
        "slot": "50",
        "type": "t_address"
      },
      {
        "astId": 66246,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "finalizedWithdrawals",
        "offset": 0,
        "slot": "51",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 66252,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "provenWithdrawals",
        "offset": 0,
        "slot": "52",
        "type": "t_mapping(t_bytes32,t_struct(ProvenWithdrawal)66230_storage)"
      },
      {
        "astId": 66255,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "spacer_53_0_1",
        "offset": 0,
        "slot": "53",
        "type": "t_bool"
      },
      {
        "astId": 66259,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "superchainConfig",
        "offset": 1,
        "slot": "53",
        "type": "t_contract(SuperchainConfig)68561"
      },
      {
        "astId": 66263,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "l2Oracle",
        "offset": 0,
        "slot": "54",
        "type": "t_contract(L2OutputOracle)66187"
      },
      {
        "astId": 66267,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "systemConfig",
        "offset": 0,
        "slot": "55",
        "type": "t_contract(SystemConfig)69375"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(L2OutputOracle)66187": {
        "encoding": "inplace",
        "label": "contract L2OutputOracle",
        "numberOfBytes": "20"
      },
      "t_contract(SuperchainConfig)68561": {
        "encoding": "inplace",
        "label": "contract SuperchainConfig",
        "numberOfBytes": "20"
      },
      "t_contract(SystemConfig)69375": {
        "encoding": "inplace",
        "label": "contract SystemConfig",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(ProvenWithdrawal)66230_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal)",
        "numberOfBytes": "32",
        "value": "t_struct(ProvenWithdrawal)66230_storage"
      },
      "t_struct(ProvenWithdrawal)66230_storage": {
        "encoding": "inplace",
        "label": "struct OptimismPortal.ProvenWithdrawal",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 66225,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "outputRoot",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 66227,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint128"
          },
          {
            "astId": 66229,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "l2OutputIndex",
            "offset": 16,
            "slot": "1",
            "type": "t_uint128"
          }
        ]
      },
      "t_struct(ResourceParams)68013_storage": {
        "encoding": "inplace",
        "label": "struct ResourceMetering.ResourceParams",
        "numberOfBytes": "32",
        "members": [
          {
            "astId": 68008,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "prevBaseFee",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 68010,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "prevBoughtGas",
            "offset": 16,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 68012,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "prevBlockNum",
            "offset": 24,
            "slot": "0",
            "type": "t_uint64"
          }
        ]
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructs the OptimismPortal contract."
      },
      "depositTransaction(address,uint256,uint64,bool,bytes)": {
        "notice": "Accepts deposits of ETH and data, and emits a TransactionDeposited event for use in         deriving deposit transactions. Note that if a deposit is made by a contract, its         address will be aliased when retrieved using `tx.origin` or `msg.sender`. Consider         using the CrossDomainMessenger contracts for a simpler developer experience."
      },
      "donateETH()": {
        "notice": "Accepts ETH value without triggering a deposit to L2.         This function mainly exists for the sake of the migration between the legacy         Optimism system and Bedrock."
      },
      "finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))": {
        "notice": "Finalizes a withdrawal transaction."
      },
      "finalizedWithdrawals(bytes32)": {
        "notice": "A list of withdrawal hashes which have been successfully finalized."
      },
      "guardian()": {
        "notice": "Getter function for the address of the guardian.         Public getter is legacy and will be removed in the future. Use `SuperchainConfig.guardian()` instead."
      },
      "initialize(address,address,address)": {
        "notice": "Initializer."
      },
      "isOutputFinalized(uint256)": {
        "notice": "Determine if a given output is finalized.         Reverts if the call to l2Oracle.getL2Output reverts.         Returns a boolean otherwise."
      },
      "l2Oracle()": {
        "notice": "Contract of the L2OutputOracle."
      },
      "l2Sender()": {
        "notice": "Address of the L2 account which initiated a withdrawal in this transaction.         If the of this variable is the default L2 sender address, then we are NOT inside of         a call to finalizeWithdrawalTransaction."
      },
      "minimumGasLimit(uint64)": {
        "notice": "Computes the minimum gas limit for a deposit.         The minimum gas limit linearly increases based on the size of the calldata.         This is to prevent users from creating L2 resource usage without paying for it.         This function can be used when interacting with the portal to ensure forwards         compatibility."
      },
      "params()": {
        "notice": "EIP-1559 style gas parameters."
      },
      "paused()": {
        "notice": "Getter for the current paused status."
      },
      "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])": {
        "notice": "Proves a withdrawal transaction."
      },
      "provenWithdrawals(bytes32)": {
        "notice": "A mapping of withdrawal hashes to `ProvenWithdrawal` data."
      },
      "superchainConfig()": {
        "notice": "Contract of the Superchain Config."
      },
      "systemConfig()": {
        "notice": "Contract of the SystemConfig."
      },
      "version()": {
        "notice": "Semantic version."
      }
    },
    "events": {
      "TransactionDeposited(address,address,uint256,bytes)": {
        "notice": "Emitted when a transaction is deposited from L1 to L2.         The parameters of this event are read by the rollup node and used to derive deposit         transactions on L2."
      },
      "WithdrawalFinalized(bytes32,bool)": {
        "notice": "Emitted when a withdrawal transaction is finalized."
      },
      "WithdrawalProven(bytes32,address,address)": {
        "notice": "Emitted when a withdrawal transaction is proven."
      }
    },
    "errors": {
      "BadTarget()": [
        {
          "notice": "Error for when a deposit or withdrawal is to a bad target."
        }
      ],
      "CallPaused()": [
        {
          "notice": "Error for when a method cannot be called when paused. This could be renamed         to `Paused` in the future, but it collides with the `Paused` event."
        }
      ],
      "GasEstimation()": [
        {
          "notice": "Error for special gas estimation."
        }
      ],
      "LargeCalldata()": [
        {
          "notice": "Error for when a deposit has too much calldata."
        }
      ],
      "OutOfGas()": [
        {
          "notice": "Error returned when too much gas resource is consumed."
        }
      ],
      "SmallGasLimit()": [
        {
          "notice": "Error for when a deposit has too small of a gas limit."
        }
      ]
    },
    "notice": "The OptimismPortal is a low-level contract responsible for passing messages between L1         and L2. Messages sent directly to the OptimismPortal have no form of replayability.         Users are encouraged to use the L1CrossDomainMessenger for a higher-level interface."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "depositTransaction(address,uint256,uint64,bool,bytes)": {
        "params": {
          "_data": "Data to trigger the recipient with.",
          "_gasLimit": "Amount of L2 gas to purchase by burning gas on L1.",
          "_isCreation": "Whether or not the transaction is a contract creation.",
          "_to": "Target address on L2.",
          "_value": "ETH value to send to the recipient."
        }
      },
      "finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))": {
        "params": {
          "_tx": "Withdrawal transaction to finalize."
        }
      },
      "guardian()": {
        "returns": {
          "_0": "Address of the guardian."
        }
      },
      "initialize(address,address,address)": {
        "params": {
          "_l2Oracle": "Contract of the L2OutputOracle.",
          "_superchainConfig": "Contract of the SuperchainConfig.",
          "_systemConfig": "Contract of the SystemConfig."
        }
      },
      "isOutputFinalized(uint256)": {
        "params": {
          "_l2OutputIndex": "Index of the L2 output to check."
        },
        "returns": {
          "_0": "Whether or not the output is finalized."
        }
      },
      "minimumGasLimit(uint64)": {
        "params": {
          "_byteCount": "Number of bytes in the calldata."
        },
        "returns": {
          "_0": "The minimum gas limit for a deposit."
        }
      },
      "paused()": {
        "returns": {
          "paused_": "Whether or not the contract is paused."
        }
      },
      "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])": {
        "params": {
          "_l2OutputIndex": "L2 output index to prove against.",
          "_outputRootProof": "Inclusion proof of the L2ToL1MessagePasser contract's storage root.",
          "_tx": "Withdrawal transaction to finalize.",
          "_withdrawalProof": "Inclusion proof of the withdrawal in L2ToL1MessagePasser contract."
        }
      }
    },
    "events": {
      "TransactionDeposited(address,address,uint256,bytes)": {
        "params": {
          "from": "Address that triggered the deposit transaction.",
          "opaqueData": "ABI encoded deposit data to be parsed off-chain.",
          "to": "Address that the deposit transaction is directed to.",
          "version": "Version of this deposit transaction event."
        }
      },
      "WithdrawalFinalized(bytes32,bool)": {
        "params": {
          "success": "Whether the withdrawal transaction was successful.",
          "withdrawalHash": "Hash of the withdrawal transaction."
        }
      },
      "WithdrawalProven(bytes32,address,address)": {
        "params": {
          "from": "Address that triggered the withdrawal transaction.",
          "to": "Address that the withdrawal transaction is directed to.",
          "withdrawalHash": "Hash of the withdrawal transaction."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "src/L1/OptimismPortal.sol",
    "id": 66857,
    "exportedSymbols": {
      "AddressAliasHelper": [
        85854
      ],
      "BadTarget": [
        80411
      ],
      "CallPaused": [
        80432
      ],
      "Constants": [
        79758
      ],
      "GasEstimation": [
        80435
      ],
      "Hashing": [
        80406
      ],
      "ISemver": [
        83714
      ],
      "Initializable": [
        43940
      ],
      "L2OutputOracle": [
        66187
      ],
      "LargeCalldata": [
        80414
      ],
      "NoValue": [
        80426
      ],
      "OnlyCustomGasToken": [
        80423
      ],
      "OptimismPortal": [
        66856
      ],
      "ResourceMetering": [
        68349
      ],
      "SafeCall": [
        80945
      ],
      "SecureMerkleTrie": [
        82765
      ],
      "SmallGasLimit": [
        80417
      ],
      "SuperchainConfig": [
        68561
      ],
      "SystemConfig": [
        69375
      ],
      "TransferFailed": [
        80420
      ],
      "Types": [
        81081
      ],
      "Unauthorized": [
        80429
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:20510:81",
    "nodes": [
      {
        "id": 66189,
        "nodeType": "PragmaDirective",
        "src": "32:23:81",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 66191,
        "nodeType": "ImportDirective",
        "src": "57:86:81",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 43941,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66190,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43940,
              "src": "66:13:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66193,
        "nodeType": "ImportDirective",
        "src": "144:54:81",
        "nodes": [],
        "absolutePath": "src/libraries/SafeCall.sol",
        "file": "src/libraries/SafeCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 80946,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66192,
              "name": "SafeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 80945,
              "src": "153:8:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66195,
        "nodeType": "ImportDirective",
        "src": "199:59:81",
        "nodes": [],
        "absolutePath": "src/L1/L2OutputOracle.sol",
        "file": "src/L1/L2OutputOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 66188,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66194,
              "name": "L2OutputOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66187,
              "src": "208:14:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66197,
        "nodeType": "ImportDirective",
        "src": "259:55:81",
        "nodes": [],
        "absolutePath": "src/L1/SystemConfig.sol",
        "file": "src/L1/SystemConfig.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 69376,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66196,
              "name": "SystemConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 69375,
              "src": "268:12:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66199,
        "nodeType": "ImportDirective",
        "src": "315:63:81",
        "nodes": [],
        "absolutePath": "src/L1/SuperchainConfig.sol",
        "file": "src/L1/SuperchainConfig.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 68562,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66198,
              "name": "SuperchainConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68561,
              "src": "324:16:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66201,
        "nodeType": "ImportDirective",
        "src": "379:56:81",
        "nodes": [],
        "absolutePath": "src/libraries/Constants.sol",
        "file": "src/libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 79759,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66200,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79758,
              "src": "388:9:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66203,
        "nodeType": "ImportDirective",
        "src": "436:48:81",
        "nodes": [],
        "absolutePath": "src/libraries/Types.sol",
        "file": "src/libraries/Types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 81082,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66202,
              "name": "Types",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 81081,
              "src": "445:5:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66205,
        "nodeType": "ImportDirective",
        "src": "485:52:81",
        "nodes": [],
        "absolutePath": "src/libraries/Hashing.sol",
        "file": "src/libraries/Hashing.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 80407,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66204,
              "name": "Hashing",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 80406,
              "src": "494:7:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66207,
        "nodeType": "ImportDirective",
        "src": "538:75:81",
        "nodes": [],
        "absolutePath": "src/libraries/trie/SecureMerkleTrie.sol",
        "file": "src/libraries/trie/SecureMerkleTrie.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 82766,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66206,
              "name": "SecureMerkleTrie",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 82765,
              "src": "547:16:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66209,
        "nodeType": "ImportDirective",
        "src": "614:71:81",
        "nodes": [],
        "absolutePath": "src/vendor/AddressAliasHelper.sol",
        "file": "src/vendor/AddressAliasHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 85855,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66208,
              "name": "AddressAliasHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 85854,
              "src": "623:18:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66211,
        "nodeType": "ImportDirective",
        "src": "686:63:81",
        "nodes": [],
        "absolutePath": "src/L1/ResourceMetering.sol",
        "file": "src/L1/ResourceMetering.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 68350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66210,
              "name": "ResourceMetering",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68349,
              "src": "695:16:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66213,
        "nodeType": "ImportDirective",
        "src": "750:52:81",
        "nodes": [],
        "absolutePath": "src/universal/ISemver.sol",
        "file": "src/universal/ISemver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 83715,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66212,
              "name": "ISemver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 83714,
              "src": "759:7:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66215,
        "nodeType": "ImportDirective",
        "src": "803:56:81",
        "nodes": [],
        "absolutePath": "src/libraries/Constants.sol",
        "file": "src/libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 79759,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66214,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79758,
              "src": "812:9:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66216,
        "nodeType": "ImportDirective",
        "src": "860:40:81",
        "nodes": [],
        "absolutePath": "src/libraries/PortalErrors.sol",
        "file": "src/libraries/PortalErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66857,
        "sourceUnit": 80436,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 66856,
        "nodeType": "ContractDefinition",
        "src": "1240:19301:81",
        "nodes": [
          {
            "id": 66230,
            "nodeType": "StructDefinition",
            "src": "1608:117:81",
            "nodes": [],
            "canonicalName": "OptimismPortal.ProvenWithdrawal",
            "members": [
              {
                "constant": false,
                "id": 66225,
                "mutability": "mutable",
                "name": "outputRoot",
                "nameLocation": "1650:10:81",
                "nodeType": "VariableDeclaration",
                "scope": 66230,
                "src": "1642:18:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 66224,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1642:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66227,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "1678:9:81",
                "nodeType": "VariableDeclaration",
                "scope": 66230,
                "src": "1670:17:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 66226,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1670:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66229,
                "mutability": "mutable",
                "name": "l2OutputIndex",
                "nameLocation": "1705:13:81",
                "nodeType": "VariableDeclaration",
                "scope": 66230,
                "src": "1697:21:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 66228,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1697:7:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProvenWithdrawal",
            "nameLocation": "1615:16:81",
            "scope": 66856,
            "visibility": "public"
          },
          {
            "id": 66234,
            "nodeType": "VariableDeclaration",
            "src": "1777:45:81",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 66231,
              "nodeType": "StructuredDocumentation",
              "src": "1731:41:81",
              "text": "@notice Version of the deposit event."
            },
            "mutability": "constant",
            "name": "DEPOSIT_VERSION",
            "nameLocation": "1803:15:81",
            "scope": 66856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66232,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1777:7:81",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 66233,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1821:1:81",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 66238,
            "nodeType": "VariableDeclaration",
            "src": "1918:60:81",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 66235,
              "nodeType": "StructuredDocumentation",
              "src": "1829:84:81",
              "text": "@notice The L2 gas limit set when eth is deposited using the receive() function."
            },
            "mutability": "constant",
            "name": "RECEIVE_DEFAULT_GAS_LIMIT",
            "nameLocation": "1943:25:81",
            "scope": 66856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 66236,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1918:6:81",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "3130305f303030",
              "id": 66237,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1971:7:81",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "value": "100_000"
            },
            "visibility": "internal"
          },
          {
            "id": 66241,
            "nodeType": "VariableDeclaration",
            "src": "2234:23:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 66239,
              "nodeType": "StructuredDocumentation",
              "src": "1985:244:81",
              "text": "@notice Address of the L2 account which initiated a withdrawal in this transaction.\n         If the of this variable is the default L2 sender address, then we are NOT inside of\n         a call to finalizeWithdrawalTransaction."
            },
            "functionSelector": "9bf62d82",
            "mutability": "mutable",
            "name": "l2Sender",
            "nameLocation": "2249:8:81",
            "scope": 66856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66240,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2234:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66246,
            "nodeType": "VariableDeclaration",
            "src": "2348:52:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 66242,
              "nodeType": "StructuredDocumentation",
              "src": "2264:79:81",
              "text": "@notice A list of withdrawal hashes which have been successfully finalized."
            },
            "functionSelector": "a14238e7",
            "mutability": "mutable",
            "name": "finalizedWithdrawals",
            "nameLocation": "2380:20:81",
            "scope": 66856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 66245,
              "keyType": {
                "id": 66243,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2356:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2348:24:81",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 66244,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2367:4:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 66252,
            "nodeType": "VariableDeclaration",
            "src": "2482:61:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 66247,
              "nodeType": "StructuredDocumentation",
              "src": "2407:70:81",
              "text": "@notice A mapping of withdrawal hashes to `ProvenWithdrawal` data."
            },
            "functionSelector": "e965084c",
            "mutability": "mutable",
            "name": "provenWithdrawals",
            "nameLocation": "2526:17:81",
            "scope": 66856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProvenWithdrawal_$66230_storage_$",
              "typeString": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal)"
            },
            "typeName": {
              "id": 66251,
              "keyType": {
                "id": 66248,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2490:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2482:36:81",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProvenWithdrawal_$66230_storage_$",
                "typeString": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal)"
              },
              "valueType": {
                "id": 66250,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66249,
                  "name": "ProvenWithdrawal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66230,
                  "src": "2501:16:81"
                },
                "referencedDeclaration": 66230,
                "src": "2501:16:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_storage_ptr",
                  "typeString": "struct OptimismPortal.ProvenWithdrawal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 66255,
            "nodeType": "VariableDeclaration",
            "src": "2655:26:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 66253,
              "nodeType": "StructuredDocumentation",
              "src": "2550:100:81",
              "text": "@custom:legacy\n @custom:spacer paused\n @notice Spacer for backwards compatibility."
            },
            "mutability": "mutable",
            "name": "spacer_53_0_1",
            "nameLocation": "2668:13:81",
            "scope": 66856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 66254,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2655:4:81",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 66259,
            "nodeType": "VariableDeclaration",
            "src": "2739:40:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 66256,
              "nodeType": "StructuredDocumentation",
              "src": "2688:46:81",
              "text": "@notice Contract of the Superchain Config."
            },
            "functionSelector": "35e80ab3",
            "mutability": "mutable",
            "name": "superchainConfig",
            "nameLocation": "2763:16:81",
            "scope": 66856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
              "typeString": "contract SuperchainConfig"
            },
            "typeName": {
              "id": 66258,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 66257,
                "name": "SuperchainConfig",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 68561,
                "src": "2739:16:81"
              },
              "referencedDeclaration": 68561,
              "src": "2739:16:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
                "typeString": "contract SuperchainConfig"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66263,
            "nodeType": "VariableDeclaration",
            "src": "2867:30:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 66260,
              "nodeType": "StructuredDocumentation",
              "src": "2786:76:81",
              "text": "@notice Contract of the L2OutputOracle.\n @custom:network-specific"
            },
            "functionSelector": "9b5f694a",
            "mutability": "mutable",
            "name": "l2Oracle",
            "nameLocation": "2889:8:81",
            "scope": 66856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
              "typeString": "contract L2OutputOracle"
            },
            "typeName": {
              "id": 66262,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 66261,
                "name": "L2OutputOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66187,
                "src": "2867:14:81"
              },
              "referencedDeclaration": 66187,
              "src": "2867:14:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                "typeString": "contract L2OutputOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66267,
            "nodeType": "VariableDeclaration",
            "src": "2983:32:81",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 66264,
              "nodeType": "StructuredDocumentation",
              "src": "2904:74:81",
              "text": "@notice Contract of the SystemConfig.\n @custom:network-specific"
            },
            "functionSelector": "33d7e2bd",
            "mutability": "mutable",
            "name": "systemConfig",
            "nameLocation": "3003:12:81",
            "scope": 66856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SystemConfig_$69375",
              "typeString": "contract SystemConfig"
            },
            "typeName": {
              "id": 66266,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 66265,
                "name": "SystemConfig",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 69375,
                "src": "2983:12:81"
              },
              "referencedDeclaration": 69375,
              "src": "2983:12:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SystemConfig_$69375",
                "typeString": "contract SystemConfig"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66278,
            "nodeType": "EventDefinition",
            "src": "3526:112:81",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66268,
              "nodeType": "StructuredDocumentation",
              "src": "3022:499:81",
              "text": "@notice Emitted when a transaction is deposited from L1 to L2.\n         The parameters of this event are read by the rollup node and used to derive deposit\n         transactions on L2.\n @param from       Address that triggered the deposit transaction.\n @param to         Address that the deposit transaction is directed to.\n @param version    Version of this deposit transaction event.\n @param opaqueData ABI encoded deposit data to be parsed off-chain."
            },
            "eventSelector": "b3813568d9991fc951961fcb4c784893574240a28925604d09fc577c55bb7c32",
            "name": "TransactionDeposited",
            "nameLocation": "3532:20:81",
            "parameters": {
              "id": 66277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66270,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3569:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66278,
                  "src": "3553:20:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3553:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66272,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3591:2:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66278,
                  "src": "3575:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3575:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66274,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "3611:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66278,
                  "src": "3595:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66276,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "opaqueData",
                  "nameLocation": "3626:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66278,
                  "src": "3620:16:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66275,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3620:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3552:85:81"
            }
          },
          {
            "id": 66287,
            "nodeType": "EventDefinition",
            "src": "3942:97:81",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66279,
              "nodeType": "StructuredDocumentation",
              "src": "3644:293:81",
              "text": "@notice Emitted when a withdrawal transaction is proven.\n @param withdrawalHash Hash of the withdrawal transaction.\n @param from           Address that triggered the withdrawal transaction.\n @param to             Address that the withdrawal transaction is directed to."
            },
            "eventSelector": "67a6208cfcc0801d50f6cbe764733f4fddf66ac0b04442061a8a8c0cb6b63f62",
            "name": "WithdrawalProven",
            "nameLocation": "3948:16:81",
            "parameters": {
              "id": 66286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66281,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawalHash",
                  "nameLocation": "3981:14:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66287,
                  "src": "3965:30:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 66280,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3965:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66283,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4013:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66287,
                  "src": "3997:20:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3997:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66285,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4035:2:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66287,
                  "src": "4019:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3964:74:81"
            }
          },
          {
            "id": 66294,
            "nodeType": "EventDefinition",
            "src": "4260:72:81",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66288,
              "nodeType": "StructuredDocumentation",
              "src": "4045:210:81",
              "text": "@notice Emitted when a withdrawal transaction is finalized.\n @param withdrawalHash Hash of the withdrawal transaction.\n @param success        Whether the withdrawal transaction was successful."
            },
            "eventSelector": "db5c7652857aa163daadd670e116628fb42e869d8ac4251ef8971d9e5727df1b",
            "name": "WithdrawalFinalized",
            "nameLocation": "4266:19:81",
            "parameters": {
              "id": 66293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66290,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawalHash",
                  "nameLocation": "4302:14:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66294,
                  "src": "4286:30:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 66289,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4286:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66292,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "4323:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66294,
                  "src": "4318:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4318:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4285:46:81"
            }
          },
          {
            "id": 66305,
            "nodeType": "ModifierDefinition",
            "src": "4375:86:81",
            "nodes": [],
            "body": {
              "id": 66304,
              "nodeType": "Block",
              "src": "4400:61:81",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 66297,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66403,
                      "src": "4414:6:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 66298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4414:8:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66302,
                  "nodeType": "IfStatement",
                  "src": "4410:33:81",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66299,
                        "name": "CallPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80432,
                        "src": "4431:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 66300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4431:12:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66301,
                    "nodeType": "RevertStatement",
                    "src": "4424:19:81"
                  }
                },
                {
                  "id": 66303,
                  "nodeType": "PlaceholderStatement",
                  "src": "4453:1:81"
                }
              ]
            },
            "documentation": {
              "id": 66295,
              "nodeType": "StructuredDocumentation",
              "src": "4338:32:81",
              "text": "@notice Reverts when paused."
            },
            "name": "whenNotPaused",
            "nameLocation": "4384:13:81",
            "parameters": {
              "id": 66296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4397:2:81"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 66309,
            "nodeType": "VariableDeclaration",
            "src": "4530:40:81",
            "nodes": [],
            "baseFunctions": [
              83713
            ],
            "constant": true,
            "documentation": {
              "id": 66306,
              "nodeType": "StructuredDocumentation",
              "src": "4467:58:81",
              "text": "@notice Semantic version.\n @custom:semver 2.6.0"
            },
            "functionSelector": "54fd4d50",
            "mutability": "constant",
            "name": "version",
            "nameLocation": "4553:7:81",
            "scope": 66856,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 66307,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "4530:6:81",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "322e362e30",
              "id": 66308,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4563:7:81",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ad12b1ea91991aacd9b7a7ba82f559ec1ebe6024b70cee19177a7d0d7932dda1",
                "typeString": "literal_string \"2.6.0\""
              },
              "value": "2.6.0"
            },
            "visibility": "public"
          },
          {
            "id": 66335,
            "nodeType": "FunctionDefinition",
            "src": "4633:218:81",
            "nodes": [],
            "body": {
              "id": 66334,
              "nodeType": "Block",
              "src": "4647:204:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 66317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4716:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 66316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4708:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 66315,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4708:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 66318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4708:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66314,
                          "name": "L2OutputOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66187,
                          "src": "4693:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_L2OutputOracle_$66187_$",
                            "typeString": "type(contract L2OutputOracle)"
                          }
                        },
                        "id": 66319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4693:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                          "typeString": "contract L2OutputOracle"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 66323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4769:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 66322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4761:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 66321,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4761:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 66324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4761:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66320,
                          "name": "SystemConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69375,
                          "src": "4748:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SystemConfig_$69375_$",
                            "typeString": "type(contract SystemConfig)"
                          }
                        },
                        "id": 66325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4748:24:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SystemConfig_$69375",
                          "typeString": "contract SystemConfig"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 66329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4830:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 66328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4822:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 66327,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4822:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 66330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4822:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66326,
                          "name": "SuperchainConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68561,
                          "src": "4805:16:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperchainConfig_$68561_$",
                            "typeString": "type(contract SuperchainConfig)"
                          }
                        },
                        "id": 66331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4805:28:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
                          "typeString": "contract SuperchainConfig"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                          "typeString": "contract L2OutputOracle"
                        },
                        {
                          "typeIdentifier": "t_contract$_SystemConfig_$69375",
                          "typeString": "contract SystemConfig"
                        },
                        {
                          "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
                          "typeString": "contract SuperchainConfig"
                        }
                      ],
                      "id": 66313,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66379,
                      "src": "4657:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_L2OutputOracle_$66187_$_t_contract$_SystemConfig_$69375_$_t_contract$_SuperchainConfig_$68561_$returns$__$",
                        "typeString": "function (contract L2OutputOracle,contract SystemConfig,contract SuperchainConfig)"
                      }
                    },
                    "id": 66332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_l2Oracle",
                      "_systemConfig",
                      "_superchainConfig"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4657:187:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66333,
                  "nodeType": "ExpressionStatement",
                  "src": "4657:187:81"
                }
              ]
            },
            "documentation": {
              "id": 66310,
              "nodeType": "StructuredDocumentation",
              "src": "4577:51:81",
              "text": "@notice Constructs the OptimismPortal contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 66311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4644:2:81"
            },
            "returnParameters": {
              "id": 66312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4647:0:81"
            },
            "scope": 66856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66379,
            "nodeType": "FunctionDefinition",
            "src": "5069:435:81",
            "nodes": [],
            "body": {
              "id": 66378,
              "nodeType": "Block",
              "src": "5248:256:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 66352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66350,
                      "name": "l2Oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66263,
                      "src": "5258:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                        "typeString": "contract L2OutputOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66351,
                      "name": "_l2Oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66339,
                      "src": "5269:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                        "typeString": "contract L2OutputOracle"
                      }
                    },
                    "src": "5258:20:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                      "typeString": "contract L2OutputOracle"
                    }
                  },
                  "id": 66353,
                  "nodeType": "ExpressionStatement",
                  "src": "5258:20:81"
                },
                {
                  "expression": {
                    "id": 66356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66354,
                      "name": "systemConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66267,
                      "src": "5288:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SystemConfig_$69375",
                        "typeString": "contract SystemConfig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66355,
                      "name": "_systemConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66342,
                      "src": "5303:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SystemConfig_$69375",
                        "typeString": "contract SystemConfig"
                      }
                    },
                    "src": "5288:28:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SystemConfig_$69375",
                      "typeString": "contract SystemConfig"
                    }
                  },
                  "id": 66357,
                  "nodeType": "ExpressionStatement",
                  "src": "5288:28:81"
                },
                {
                  "expression": {
                    "id": 66360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66358,
                      "name": "superchainConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66259,
                      "src": "5326:16:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
                        "typeString": "contract SuperchainConfig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66359,
                      "name": "_superchainConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66345,
                      "src": "5345:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
                        "typeString": "contract SuperchainConfig"
                      }
                    },
                    "src": "5326:36:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
                      "typeString": "contract SuperchainConfig"
                    }
                  },
                  "id": 66361,
                  "nodeType": "ExpressionStatement",
                  "src": "5326:36:81"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 66367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66362,
                      "name": "l2Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66241,
                      "src": "5376:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 66365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5396:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 66364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5388:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 66363,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5388:7:81",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 66366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5388:10:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5376:22:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66374,
                  "nodeType": "IfStatement",
                  "src": "5372:91:81",
                  "trueBody": {
                    "id": 66373,
                    "nodeType": "Block",
                    "src": "5400:63:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 66371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 66368,
                            "name": "l2Sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66241,
                            "src": "5414:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 66369,
                              "name": "Constants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79758,
                              "src": "5425:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Constants_$79758_$",
                                "typeString": "type(library Constants)"
                              }
                            },
                            "id": 66370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "DEFAULT_L2_SENDER",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79720,
                            "src": "5425:27:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5414:38:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 66372,
                        "nodeType": "ExpressionStatement",
                        "src": "5414:38:81"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 66375,
                      "name": "__ResourceMetering_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68348,
                      "src": "5472:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 66376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5472:25:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66377,
                  "nodeType": "ExpressionStatement",
                  "src": "5472:25:81"
                }
              ]
            },
            "documentation": {
              "id": 66336,
              "nodeType": "StructuredDocumentation",
              "src": "4857:207:81",
              "text": "@notice Initializer.\n @param _l2Oracle Contract of the L2OutputOracle.\n @param _systemConfig Contract of the SystemConfig.\n @param _superchainConfig Contract of the SuperchainConfig."
            },
            "functionSelector": "c0c53b8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66348,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66347,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43860,
                  "src": "5232:11:81"
                },
                "nodeType": "ModifierInvocation",
                "src": "5232:11:81"
              }
            ],
            "name": "initialize",
            "nameLocation": "5078:10:81",
            "parameters": {
              "id": 66346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66339,
                  "mutability": "mutable",
                  "name": "_l2Oracle",
                  "nameLocation": "5113:9:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66379,
                  "src": "5098:24:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                    "typeString": "contract L2OutputOracle"
                  },
                  "typeName": {
                    "id": 66338,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66337,
                      "name": "L2OutputOracle",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66187,
                      "src": "5098:14:81"
                    },
                    "referencedDeclaration": 66187,
                    "src": "5098:14:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                      "typeString": "contract L2OutputOracle"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66342,
                  "mutability": "mutable",
                  "name": "_systemConfig",
                  "nameLocation": "5145:13:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66379,
                  "src": "5132:26:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SystemConfig_$69375",
                    "typeString": "contract SystemConfig"
                  },
                  "typeName": {
                    "id": 66341,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66340,
                      "name": "SystemConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 69375,
                      "src": "5132:12:81"
                    },
                    "referencedDeclaration": 69375,
                    "src": "5132:12:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SystemConfig_$69375",
                      "typeString": "contract SystemConfig"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66345,
                  "mutability": "mutable",
                  "name": "_superchainConfig",
                  "nameLocation": "5185:17:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66379,
                  "src": "5168:34:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
                    "typeString": "contract SuperchainConfig"
                  },
                  "typeName": {
                    "id": 66344,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66343,
                      "name": "SuperchainConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 68561,
                      "src": "5168:16:81"
                    },
                    "referencedDeclaration": 68561,
                    "src": "5168:16:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
                      "typeString": "contract SuperchainConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:120:81"
            },
            "returnParameters": {
              "id": 66349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5248:0:81"
            },
            "scope": 66856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66390,
            "nodeType": "FunctionDefinition",
            "src": "5757:101:81",
            "nodes": [],
            "body": {
              "id": 66389,
              "nodeType": "Block",
              "src": "5807:51:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66385,
                        "name": "superchainConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66259,
                        "src": "5824:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
                          "typeString": "contract SuperchainConfig"
                        }
                      },
                      "id": 66386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "guardian",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68461,
                      "src": "5824:25:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 66387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5824:27:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 66384,
                  "id": 66388,
                  "nodeType": "Return",
                  "src": "5817:34:81"
                }
              ]
            },
            "documentation": {
              "id": 66380,
              "nodeType": "StructuredDocumentation",
              "src": "5510:242:81",
              "text": "@notice Getter function for the address of the guardian.\n         Public getter is legacy and will be removed in the future. Use `SuperchainConfig.guardian()` instead.\n @return Address of the guardian.\n @custom:legacy"
            },
            "functionSelector": "452a9320",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "guardian",
            "nameLocation": "5766:8:81",
            "parameters": {
              "id": 66381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5774:2:81"
            },
            "returnParameters": {
              "id": 66384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66390,
                  "src": "5798:7:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5798:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5797:9:81"
            },
            "scope": 66856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66403,
            "nodeType": "FunctionDefinition",
            "src": "5981:105:81",
            "nodes": [],
            "body": {
              "id": 66402,
              "nodeType": "Block",
              "src": "6034:52:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 66400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66396,
                      "name": "paused_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66394,
                      "src": "6044:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 66397,
                          "name": "superchainConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66259,
                          "src": "6054:16:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperchainConfig_$68561",
                            "typeString": "contract SuperchainConfig"
                          }
                        },
                        "id": 66398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paused",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68475,
                        "src": "6054:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                          "typeString": "function () view external returns (bool)"
                        }
                      },
                      "id": 66399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6054:25:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6044:35:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66401,
                  "nodeType": "ExpressionStatement",
                  "src": "6044:35:81"
                }
              ]
            },
            "documentation": {
              "id": 66391,
              "nodeType": "StructuredDocumentation",
              "src": "5864:112:81",
              "text": "@notice Getter for the current paused status.\n @return paused_ Whether or not the contract is paused."
            },
            "functionSelector": "5c975abb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "5990:6:81",
            "parameters": {
              "id": 66392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5996:2:81"
            },
            "returnParameters": {
              "id": 66395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66394,
                  "mutability": "mutable",
                  "name": "paused_",
                  "nameLocation": "6025:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66403,
                  "src": "6020:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66393,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6020:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6019:14:81"
            },
            "scope": 66856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66418,
            "nodeType": "FunctionDefinition",
            "src": "6579:120:81",
            "nodes": [],
            "body": {
              "id": 66417,
              "nodeType": "Block",
              "src": "6652:47:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 66415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 66413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66411,
                        "name": "_byteCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66406,
                        "src": "6669:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3136",
                        "id": 66412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6682:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_16_by_1",
                          "typeString": "int_const 16"
                        },
                        "value": "16"
                      },
                      "src": "6669:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "3231303030",
                      "id": 66414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6687:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_21000_by_1",
                        "typeString": "int_const 21000"
                      },
                      "value": "21000"
                    },
                    "src": "6669:23:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 66410,
                  "id": 66416,
                  "nodeType": "Return",
                  "src": "6662:30:81"
                }
              ]
            },
            "documentation": {
              "id": 66404,
              "nodeType": "StructuredDocumentation",
              "src": "6092:482:81",
              "text": "@notice Computes the minimum gas limit for a deposit.\n         The minimum gas limit linearly increases based on the size of the calldata.\n         This is to prevent users from creating L2 resource usage without paying for it.\n         This function can be used when interacting with the portal to ensure forwards\n         compatibility.\n @param _byteCount Number of bytes in the calldata.\n @return The minimum gas limit for a deposit."
            },
            "functionSelector": "a35d99df",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minimumGasLimit",
            "nameLocation": "6588:15:81",
            "parameters": {
              "id": 66407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66406,
                  "mutability": "mutable",
                  "name": "_byteCount",
                  "nameLocation": "6611:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66418,
                  "src": "6604:17:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 66405,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6604:6:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6603:19:81"
            },
            "returnParameters": {
              "id": 66410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66409,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66418,
                  "src": "6644:6:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 66408,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6644:6:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6643:8:81"
            },
            "scope": 66856,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66436,
            "nodeType": "FunctionDefinition",
            "src": "7078:130:81",
            "nodes": [],
            "body": {
              "id": 66435,
              "nodeType": "Block",
              "src": "7105:103:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66423,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7134:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7134:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 66425,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7146:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "7146:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 66427,
                        "name": "RECEIVE_DEFAULT_GAS_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66238,
                        "src": "7157:25:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 66428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7184:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 66431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7197:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 66430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7191:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 66429,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7191:5:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7191:9:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 66422,
                      "name": "depositTransaction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66820,
                      "src": "7115:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint64_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint64,bool,bytes memory)"
                      }
                    },
                    "id": 66433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7115:86:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66434,
                  "nodeType": "ExpressionStatement",
                  "src": "7115:86:81"
                }
              ]
            },
            "documentation": {
              "id": 66419,
              "nodeType": "StructuredDocumentation",
              "src": "6705:368:81",
              "text": "@notice Accepts value so that users can send ETH directly to this contract and have the\n         funds be deposited to their address on L2. This is intended as a convenience\n         function for EOAs. Contracts should call the depositTransaction() function directly\n         otherwise any deposited funds will be lost due to address aliasing."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 66420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7085:2:81"
            },
            "returnParameters": {
              "id": 66421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7105:0:81"
            },
            "scope": 66856,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66441,
            "nodeType": "FunctionDefinition",
            "src": "7422:77:81",
            "nodes": [],
            "body": {
              "id": 66440,
              "nodeType": "Block",
              "src": "7460:39:81",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 66437,
              "nodeType": "StructuredDocumentation",
              "src": "7214:203:81",
              "text": "@notice Accepts ETH value without triggering a deposit to L2.\n         This function mainly exists for the sake of the migration between the legacy\n         Optimism system and Bedrock."
            },
            "functionSelector": "8b4c40b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donateETH",
            "nameLocation": "7431:9:81",
            "parameters": {
              "id": 66438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7440:2:81"
            },
            "returnParameters": {
              "id": 66439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7460:0:81"
            },
            "scope": 66856,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66454,
            "nodeType": "FunctionDefinition",
            "src": "7748:152:81",
            "nodes": [],
            "body": {
              "id": 66453,
              "nodeType": "Block",
              "src": "7847:53:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66449,
                        "name": "systemConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66267,
                        "src": "7864:12:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SystemConfig_$69375",
                          "typeString": "contract SystemConfig"
                        }
                      },
                      "id": 66450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resourceConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69295,
                      "src": "7864:27:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_ResourceConfig_$68026_memory_ptr_$",
                        "typeString": "function () view external returns (struct ResourceMetering.ResourceConfig memory)"
                      }
                    },
                    "id": 66451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7864:29:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$68026_memory_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig memory"
                    }
                  },
                  "functionReturnParameters": 66448,
                  "id": 66452,
                  "nodeType": "Return",
                  "src": "7857:36:81"
                }
              ]
            },
            "baseFunctions": [
              68323
            ],
            "documentation": {
              "id": 66442,
              "nodeType": "StructuredDocumentation",
              "src": "7505:238:81",
              "text": "@notice Getter for the resource config.\n         Used internally by the ResourceMetering contract.\n         The SystemConfig is the source of truth for the resource config.\n @return ResourceMetering ResourceConfig"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resourceConfig",
            "nameLocation": "7757:15:81",
            "overrides": {
              "id": 66444,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7789:8:81"
            },
            "parameters": {
              "id": 66443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7772:2:81"
            },
            "returnParameters": {
              "id": 66448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66447,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66454,
                  "src": "7807:38:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$68026_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 66446,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66445,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 68026,
                      "src": "7807:31:81"
                    },
                    "referencedDeclaration": 68026,
                    "src": "7807:31:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$68026_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7806:40:81"
            },
            "scope": 66856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 66586,
            "nodeType": "FunctionDefinition",
            "src": "8288:3825:81",
            "nodes": [],
            "body": {
              "id": 66585,
              "nodeType": "Block",
              "src": "8553:3560:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 66472,
                            "name": "_tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66458,
                            "src": "8798:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                              "typeString": "struct Types.WithdrawalTransaction memory"
                            }
                          },
                          "id": 66473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "target",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 81073,
                          "src": "8798:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 66476,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "8820:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismPortal_$66856",
                                "typeString": "contract OptimismPortal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimismPortal_$66856",
                                "typeString": "contract OptimismPortal"
                              }
                            ],
                            "id": 66475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8812:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66474,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8812:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8812:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8798:27:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a20796f752063616e6e6f742073656e64206d6573736167657320746f2074686520706f7274616c20636f6e7472616374",
                        "id": 66479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8827:65:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57e41062e2e7b97ddf730827f5249d28f602a3846dfe107ce36292fb1c029eb8",
                          "typeString": "literal_string \"OptimismPortal: you cannot send messages to the portal contract\""
                        },
                        "value": "OptimismPortal: you cannot send messages to the portal contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57e41062e2e7b97ddf730827f5249d28f602a3846dfe107ce36292fb1c029eb8",
                          "typeString": "literal_string \"OptimismPortal: you cannot send messages to the portal contract\""
                        }
                      ],
                      "id": 66471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8790:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8790:103:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66481,
                  "nodeType": "ExpressionStatement",
                  "src": "8790:103:81"
                },
                {
                  "assignments": [
                    66483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66483,
                      "mutability": "mutable",
                      "name": "outputRoot",
                      "nameLocation": "9078:10:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 66585,
                      "src": "9070:18:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 66482,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9070:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66489,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 66486,
                          "name": "_l2OutputIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66460,
                          "src": "9112:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 66484,
                          "name": "l2Oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66263,
                          "src": "9091:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                            "typeString": "contract L2OutputOracle"
                          }
                        },
                        "id": 66485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getL2Output",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66027,
                        "src": "9091:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_OutputProposal_$81039_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (struct Types.OutputProposal memory)"
                        }
                      },
                      "id": 66487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9091:36:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OutputProposal_$81039_memory_ptr",
                        "typeString": "struct Types.OutputProposal memory"
                      }
                    },
                    "id": 66488,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "outputRoot",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 81034,
                    "src": "9091:47:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9070:68:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 66496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66491,
                          "name": "outputRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66483,
                          "src": "9258:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 66494,
                              "name": "_outputRootProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66463,
                              "src": "9300:16:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OutputRootProof_$81048_calldata_ptr",
                                "typeString": "struct Types.OutputRootProof calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_OutputRootProof_$81048_calldata_ptr",
                                "typeString": "struct Types.OutputRootProof calldata"
                              }
                            ],
                            "expression": {
                              "id": 66492,
                              "name": "Hashing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80406,
                              "src": "9272:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Hashing_$80406_$",
                                "typeString": "type(library Hashing)"
                              }
                            },
                            "id": 66493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hashOutputRootProof",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80405,
                            "src": "9272:27:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_OutputRootProof_$81048_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (struct Types.OutputRootProof memory) pure returns (bytes32)"
                            }
                          },
                          "id": 66495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9272:45:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "9258:59:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a20696e76616c6964206f757470757420726f6f742070726f6f66",
                        "id": 66497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9319:43:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_490ec653897228799e7e4c4af8b1fd3b4a0688df98d026b46afa352ce9876996",
                          "typeString": "literal_string \"OptimismPortal: invalid output root proof\""
                        },
                        "value": "OptimismPortal: invalid output root proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_490ec653897228799e7e4c4af8b1fd3b4a0688df98d026b46afa352ce9876996",
                          "typeString": "literal_string \"OptimismPortal: invalid output root proof\""
                        }
                      ],
                      "id": 66490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9237:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9237:135:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66499,
                  "nodeType": "ExpressionStatement",
                  "src": "9237:135:81"
                },
                {
                  "assignments": [
                    66501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66501,
                      "mutability": "mutable",
                      "name": "withdrawalHash",
                      "nameLocation": "9491:14:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 66585,
                      "src": "9483:22:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 66500,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9483:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66506,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66504,
                        "name": "_tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66458,
                        "src": "9531:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      ],
                      "expression": {
                        "id": 66502,
                        "name": "Hashing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80406,
                        "src": "9508:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hashing_$80406_$",
                          "typeString": "type(library Hashing)"
                        }
                      },
                      "id": 66503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashWithdrawal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80381,
                      "src": "9508:22:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_WithdrawalTransaction_$81080_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Types.WithdrawalTransaction memory) pure returns (bytes32)"
                      }
                    },
                    "id": 66505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9508:27:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9483:52:81"
                },
                {
                  "assignments": [
                    66509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66509,
                      "mutability": "mutable",
                      "name": "provenWithdrawal",
                      "nameLocation": "9569:16:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 66585,
                      "src": "9545:40:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                        "typeString": "struct OptimismPortal.ProvenWithdrawal"
                      },
                      "typeName": {
                        "id": 66508,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66507,
                          "name": "ProvenWithdrawal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66230,
                          "src": "9545:16:81"
                        },
                        "referencedDeclaration": 66230,
                        "src": "9545:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_storage_ptr",
                          "typeString": "struct OptimismPortal.ProvenWithdrawal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66513,
                  "initialValue": {
                    "baseExpression": {
                      "id": 66510,
                      "name": "provenWithdrawals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66252,
                      "src": "9588:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProvenWithdrawal_$66230_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal storage ref)"
                      }
                    },
                    "id": 66512,
                    "indexExpression": {
                      "id": 66511,
                      "name": "withdrawalHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66501,
                      "src": "9606:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9588:33:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_storage",
                      "typeString": "struct OptimismPortal.ProvenWithdrawal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9545:76:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 66528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 66518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 66515,
                              "name": "provenWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66509,
                              "src": "10175:16:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                                "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                              }
                            },
                            "id": 66516,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66227,
                            "src": "10175:26:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 66517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10205:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10175:31:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 66527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 66521,
                                    "name": "provenWithdrawal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66509,
                                    "src": "10247:16:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                                      "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                                    }
                                  },
                                  "id": 66522,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "l2OutputIndex",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66229,
                                  "src": "10247:30:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                ],
                                "expression": {
                                  "id": 66519,
                                  "name": "l2Oracle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66263,
                                  "src": "10226:8:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                                    "typeString": "contract L2OutputOracle"
                                  }
                                },
                                "id": 66520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getL2Output",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 66027,
                                "src": "10226:20:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_OutputProposal_$81039_memory_ptr_$",
                                  "typeString": "function (uint256) view external returns (struct Types.OutputProposal memory)"
                                }
                              },
                              "id": 66523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10226:52:81",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OutputProposal_$81039_memory_ptr",
                                "typeString": "struct Types.OutputProposal memory"
                              }
                            },
                            "id": 66524,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "outputRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81034,
                            "src": "10226:63:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 66525,
                              "name": "provenWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66509,
                              "src": "10293:16:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                                "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                              }
                            },
                            "id": 66526,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "outputRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66225,
                            "src": "10293:27:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "10226:94:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10175:145:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a207769746864726177616c20686173682068617320616c7265616479206265656e2070726f76656e",
                        "id": 66529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10334:57:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5238e365e021f6fd781c2264a5a09100f0670031b56dacfc224b453789ac1dd0",
                          "typeString": "literal_string \"OptimismPortal: withdrawal hash has already been proven\""
                        },
                        "value": "OptimismPortal: withdrawal hash has already been proven"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5238e365e021f6fd781c2264a5a09100f0670031b56dacfc224b453789ac1dd0",
                          "typeString": "literal_string \"OptimismPortal: withdrawal hash has already been proven\""
                        }
                      ],
                      "id": 66514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10154:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10154:247:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66531,
                  "nodeType": "ExpressionStatement",
                  "src": "10154:247:81"
                },
                {
                  "assignments": [
                    66533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66533,
                      "mutability": "mutable",
                      "name": "storageKey",
                      "nameLocation": "10645:10:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 66585,
                      "src": "10637:18:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 66532,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10637:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66544,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66537,
                            "name": "withdrawalHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66501,
                            "src": "10709:14:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 66540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10749:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 66539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10741:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 66538,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10741:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 66541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10741:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 66535,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10681:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 66536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10681:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 66542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10681:147:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 66534,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10658:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 66543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10658:180:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10637:201:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 66550,
                                "name": "storageKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66533,
                                "src": "11264:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 66548,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "11253:3:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 66549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "11253:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 66551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11253:22:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "01",
                            "id": 66552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11301:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2",
                              "typeString": "literal_string hex\"01\""
                            },
                            "value": "\u0001"
                          },
                          {
                            "id": 66553,
                            "name": "_withdrawalProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66466,
                            "src": "11334:16:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 66554,
                              "name": "_outputRootProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66463,
                              "src": "11375:16:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OutputRootProof_$81048_calldata_ptr",
                                "typeString": "struct Types.OutputRootProof calldata"
                              }
                            },
                            "id": 66555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "messagePasserStorageRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81045,
                            "src": "11375:41:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2",
                              "typeString": "literal_string hex\"01\""
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 66546,
                            "name": "SecureMerkleTrie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82765,
                            "src": "11191:16:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SecureMerkleTrie_$82765_$",
                              "typeString": "type(library SecureMerkleTrie)"
                            }
                          },
                          "id": 66547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyInclusionProof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82717,
                          "src": "11191:37:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,bytes memory,bytes memory[] memory,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 66556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [
                          "_key",
                          "_value",
                          "_proof",
                          "_root"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "11191:240:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a20696e76616c6964207769746864726177616c20696e636c7573696f6e2070726f6f66",
                        "id": 66557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11445:52:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11b666636981dad70da1c1a9e87589eb7d9c042eacd4d25e887aac557f6cd6b9",
                          "typeString": "literal_string \"OptimismPortal: invalid withdrawal inclusion proof\""
                        },
                        "value": "OptimismPortal: invalid withdrawal inclusion proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11b666636981dad70da1c1a9e87589eb7d9c042eacd4d25e887aac557f6cd6b9",
                          "typeString": "literal_string \"OptimismPortal: invalid withdrawal inclusion proof\""
                        }
                      ],
                      "id": 66545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11170:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11170:337:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66559,
                  "nodeType": "ExpressionStatement",
                  "src": "11170:337:81"
                },
                {
                  "expression": {
                    "id": 66575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66560,
                        "name": "provenWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66252,
                        "src": "11789:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProvenWithdrawal_$66230_storage_$",
                          "typeString": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal storage ref)"
                        }
                      },
                      "id": 66562,
                      "indexExpression": {
                        "id": 66561,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66501,
                        "src": "11807:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11789:33:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_storage",
                        "typeString": "struct OptimismPortal.ProvenWithdrawal storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 66564,
                          "name": "outputRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66483,
                          "src": "11868:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 66567,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11911:5:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 66568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11911:15:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 66566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11903:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
                              "id": 66565,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "11903:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11903:24:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 66572,
                              "name": "_l2OutputIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66460,
                              "src": "11964:14:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 66571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11956:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
                              "id": 66570,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "11956:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11956:23:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 66563,
                        "name": "ProvenWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66230,
                        "src": "11825:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProvenWithdrawal_$66230_storage_ptr_$",
                          "typeString": "type(struct OptimismPortal.ProvenWithdrawal storage pointer)"
                        }
                      },
                      "id": 66574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "outputRoot",
                        "timestamp",
                        "l2OutputIndex"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "11825:165:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                        "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                      }
                    },
                    "src": "11789:201:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_storage",
                      "typeString": "struct OptimismPortal.ProvenWithdrawal storage ref"
                    }
                  },
                  "id": 66576,
                  "nodeType": "ExpressionStatement",
                  "src": "11789:201:81"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 66578,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66501,
                        "src": "12067:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 66579,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66458,
                          "src": "12083:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 66580,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 81071,
                        "src": "12083:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 66581,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66458,
                          "src": "12095:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 66582,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "target",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 81073,
                        "src": "12095:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 66577,
                      "name": "WithdrawalProven",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66287,
                      "src": "12050:16:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 66583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12050:56:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66584,
                  "nodeType": "EmitStatement",
                  "src": "12045:61:81"
                }
              ]
            },
            "documentation": {
              "id": 66455,
              "nodeType": "StructuredDocumentation",
              "src": "7906:377:81",
              "text": "@notice Proves a withdrawal transaction.\n @param _tx              Withdrawal transaction to finalize.\n @param _l2OutputIndex   L2 output index to prove against.\n @param _outputRootProof Inclusion proof of the L2ToL1MessagePasser contract's storage root.\n @param _withdrawalProof Inclusion proof of the withdrawal in L2ToL1MessagePasser contract."
            },
            "functionSelector": "4870496f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66469,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66468,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66305,
                  "src": "8535:13:81"
                },
                "nodeType": "ModifierInvocation",
                "src": "8535:13:81"
              }
            ],
            "name": "proveWithdrawalTransaction",
            "nameLocation": "8297:26:81",
            "parameters": {
              "id": 66467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66458,
                  "mutability": "mutable",
                  "name": "_tx",
                  "nameLocation": "8368:3:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66586,
                  "src": "8333:38:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                    "typeString": "struct Types.WithdrawalTransaction"
                  },
                  "typeName": {
                    "id": 66457,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66456,
                      "name": "Types.WithdrawalTransaction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 81080,
                      "src": "8333:27:81"
                    },
                    "referencedDeclaration": 81080,
                    "src": "8333:27:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_storage_ptr",
                      "typeString": "struct Types.WithdrawalTransaction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66460,
                  "mutability": "mutable",
                  "name": "_l2OutputIndex",
                  "nameLocation": "8389:14:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66586,
                  "src": "8381:22:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8381:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66463,
                  "mutability": "mutable",
                  "name": "_outputRootProof",
                  "nameLocation": "8444:16:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66586,
                  "src": "8413:47:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OutputRootProof_$81048_calldata_ptr",
                    "typeString": "struct Types.OutputRootProof"
                  },
                  "typeName": {
                    "id": 66462,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66461,
                      "name": "Types.OutputRootProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 81048,
                      "src": "8413:21:81"
                    },
                    "referencedDeclaration": 81048,
                    "src": "8413:21:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OutputRootProof_$81048_storage_ptr",
                      "typeString": "struct Types.OutputRootProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66466,
                  "mutability": "mutable",
                  "name": "_withdrawalProof",
                  "nameLocation": "8487:16:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66586,
                  "src": "8470:33:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 66464,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "8470:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 66465,
                    "nodeType": "ArrayTypeName",
                    "src": "8470:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8323:186:81"
            },
            "returnParameters": {
              "id": 66470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8553:0:81"
            },
            "scope": 66856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66730,
            "nodeType": "FunctionDefinition",
            "src": "12226:4818:81",
            "nodes": [],
            "body": {
              "id": 66729,
              "nodeType": "Block",
              "src": "12328:4716:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66596,
                          "name": "l2Sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66241,
                          "src": "12594:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 66597,
                            "name": "Constants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79758,
                            "src": "12606:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Constants_$79758_$",
                              "typeString": "type(library Constants)"
                            }
                          },
                          "id": 66598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "DEFAULT_L2_SENDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79720,
                          "src": "12606:27:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12594:39:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a2063616e206f6e6c792074726967676572206f6e65207769746864726177616c20706572207472616e73616374696f6e",
                        "id": 66600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12635:65:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_452e6500a4013b85635a7a9b231d68a5197c7f7579d0b96d0b2f2e5fe6b5995b",
                          "typeString": "literal_string \"OptimismPortal: can only trigger one withdrawal per transaction\""
                        },
                        "value": "OptimismPortal: can only trigger one withdrawal per transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_452e6500a4013b85635a7a9b231d68a5197c7f7579d0b96d0b2f2e5fe6b5995b",
                          "typeString": "literal_string \"OptimismPortal: can only trigger one withdrawal per transaction\""
                        }
                      ],
                      "id": 66595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12573:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12573:137:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66602,
                  "nodeType": "ExpressionStatement",
                  "src": "12573:137:81"
                },
                {
                  "assignments": [
                    66604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66604,
                      "mutability": "mutable",
                      "name": "withdrawalHash",
                      "nameLocation": "12801:14:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 66729,
                      "src": "12793:22:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 66603,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12793:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66609,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66607,
                        "name": "_tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66590,
                        "src": "12841:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      ],
                      "expression": {
                        "id": 66605,
                        "name": "Hashing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80406,
                        "src": "12818:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hashing_$80406_$",
                          "typeString": "type(library Hashing)"
                        }
                      },
                      "id": 66606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashWithdrawal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80381,
                      "src": "12818:22:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_WithdrawalTransaction_$81080_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Types.WithdrawalTransaction memory) pure returns (bytes32)"
                      }
                    },
                    "id": 66608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12818:27:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12793:52:81"
                },
                {
                  "assignments": [
                    66612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66612,
                      "mutability": "mutable",
                      "name": "provenWithdrawal",
                      "nameLocation": "12879:16:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 66729,
                      "src": "12855:40:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                        "typeString": "struct OptimismPortal.ProvenWithdrawal"
                      },
                      "typeName": {
                        "id": 66611,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66610,
                          "name": "ProvenWithdrawal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66230,
                          "src": "12855:16:81"
                        },
                        "referencedDeclaration": 66230,
                        "src": "12855:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_storage_ptr",
                          "typeString": "struct OptimismPortal.ProvenWithdrawal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66616,
                  "initialValue": {
                    "baseExpression": {
                      "id": 66613,
                      "name": "provenWithdrawals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66252,
                      "src": "12898:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProvenWithdrawal_$66230_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal storage ref)"
                      }
                    },
                    "id": 66615,
                    "indexExpression": {
                      "id": 66614,
                      "name": "withdrawalHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66604,
                      "src": "12916:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12898:33:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_storage",
                      "typeString": "struct OptimismPortal.ProvenWithdrawal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12855:76:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 66621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 66618,
                            "name": "provenWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66612,
                            "src": "13181:16:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                              "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                            }
                          },
                          "id": 66619,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66227,
                          "src": "13181:26:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13211:1:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13181:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a207769746864726177616c20686173206e6f74206265656e2070726f76656e20796574",
                        "id": 66622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13214:52:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc94f9f4f2ecd47ddd807efca122bcc34325481f7fe9d60687e25c709aff1610",
                          "typeString": "literal_string \"OptimismPortal: withdrawal has not been proven yet\""
                        },
                        "value": "OptimismPortal: withdrawal has not been proven yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc94f9f4f2ecd47ddd807efca122bcc34325481f7fe9d60687e25c709aff1610",
                          "typeString": "literal_string \"OptimismPortal: withdrawal has not been proven yet\""
                        }
                      ],
                      "id": 66617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13173:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13173:94:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66624,
                  "nodeType": "ExpressionStatement",
                  "src": "13173:94:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 66626,
                            "name": "provenWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66612,
                            "src": "13554:16:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                              "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                            }
                          },
                          "id": 66627,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66227,
                          "src": "13554:26:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 66628,
                              "name": "l2Oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66263,
                              "src": "13584:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                                "typeString": "contract L2OutputOracle"
                              }
                            },
                            "id": 66629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startingTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65694,
                            "src": "13584:26:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 66630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13584:28:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13554:58:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a207769746864726177616c2074696d657374616d70206c657373207468616e204c32204f7261636c65207374617274696e672074696d657374616d70",
                        "id": 66632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13626:77:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c7c78dd7f8d5d79f2ff5ac1a4442209661a78fffa24392f88331b760a60bedd",
                          "typeString": "literal_string \"OptimismPortal: withdrawal timestamp less than L2 Oracle starting timestamp\""
                        },
                        "value": "OptimismPortal: withdrawal timestamp less than L2 Oracle starting timestamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c7c78dd7f8d5d79f2ff5ac1a4442209661a78fffa24392f88331b760a60bedd",
                          "typeString": "literal_string \"OptimismPortal: withdrawal timestamp less than L2 Oracle starting timestamp\""
                        }
                      ],
                      "id": 66625,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13533:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13533:180:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66634,
                  "nodeType": "ExpressionStatement",
                  "src": "13533:180:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 66637,
                              "name": "provenWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66612,
                              "src": "14132:16:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                                "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                              }
                            },
                            "id": 66638,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66227,
                            "src": "14132:26:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 66636,
                          "name": "_isFinalizationPeriodElapsed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66855,
                          "src": "14103:28:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 66639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14103:56:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a2070726f76656e207769746864726177616c2066696e616c697a6174696f6e20706572696f6420686173206e6f7420656c6170736564",
                        "id": 66640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14173:71:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98a66ca0d4a8e5a839585f0aa5b4b8fc94a946382443fc5580ee1ed6e6237f70",
                          "typeString": "literal_string \"OptimismPortal: proven withdrawal finalization period has not elapsed\""
                        },
                        "value": "OptimismPortal: proven withdrawal finalization period has not elapsed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98a66ca0d4a8e5a839585f0aa5b4b8fc94a946382443fc5580ee1ed6e6237f70",
                          "typeString": "literal_string \"OptimismPortal: proven withdrawal finalization period has not elapsed\""
                        }
                      ],
                      "id": 66635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14082:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14082:172:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66642,
                  "nodeType": "ExpressionStatement",
                  "src": "14082:172:81"
                },
                {
                  "assignments": [
                    66647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66647,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "14453:8:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 66729,
                      "src": "14425:36:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OutputProposal_$81039_memory_ptr",
                        "typeString": "struct Types.OutputProposal"
                      },
                      "typeName": {
                        "id": 66646,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66645,
                          "name": "Types.OutputProposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 81039,
                          "src": "14425:20:81"
                        },
                        "referencedDeclaration": 81039,
                        "src": "14425:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OutputProposal_$81039_storage_ptr",
                          "typeString": "struct Types.OutputProposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66653,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66650,
                          "name": "provenWithdrawal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66612,
                          "src": "14485:16:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                            "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                          }
                        },
                        "id": 66651,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "l2OutputIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66229,
                        "src": "14485:30:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 66648,
                        "name": "l2Oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66263,
                        "src": "14464:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                          "typeString": "contract L2OutputOracle"
                        }
                      },
                      "id": 66649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getL2Output",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66027,
                      "src": "14464:20:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_OutputProposal_$81039_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct Types.OutputProposal memory)"
                      }
                    },
                    "id": 66652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14464:52:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OutputProposal_$81039_memory_ptr",
                      "typeString": "struct Types.OutputProposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14425:91:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 66659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 66655,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66647,
                            "src": "14804:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OutputProposal_$81039_memory_ptr",
                              "typeString": "struct Types.OutputProposal memory"
                            }
                          },
                          "id": 66656,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "outputRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 81034,
                          "src": "14804:19:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 66657,
                            "name": "provenWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66612,
                            "src": "14827:16:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProvenWithdrawal_$66230_memory_ptr",
                              "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                            }
                          },
                          "id": 66658,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "outputRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66225,
                          "src": "14827:27:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "14804:50:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a206f757470757420726f6f742070726f76656e206973206e6f74207468652073616d652061732063757272656e74206f757470757420726f6f74",
                        "id": 66660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14868:75:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bee9e90a055fc3fdea28727a1d039ffb281ae00c8962ca3262d0dabb187a280",
                          "typeString": "literal_string \"OptimismPortal: output root proven is not the same as current output root\""
                        },
                        "value": "OptimismPortal: output root proven is not the same as current output root"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bee9e90a055fc3fdea28727a1d039ffb281ae00c8962ca3262d0dabb187a280",
                          "typeString": "literal_string \"OptimismPortal: output root proven is not the same as current output root\""
                        }
                      ],
                      "id": 66654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14783:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14783:170:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66662,
                  "nodeType": "ExpressionStatement",
                  "src": "14783:170:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 66665,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66647,
                              "src": "15081:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OutputProposal_$81039_memory_ptr",
                                "typeString": "struct Types.OutputProposal memory"
                              }
                            },
                            "id": 66666,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81036,
                            "src": "15081:18:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 66664,
                          "name": "_isFinalizationPeriodElapsed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66855,
                          "src": "15052:28:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 66667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15052:48:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a206f75747075742070726f706f73616c2066696e616c697a6174696f6e20706572696f6420686173206e6f7420656c6170736564",
                        "id": 66668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15114:69:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2e53e5f2e5c146290963511529e48aa3e1570a42475ccc1fb3eba5190175c74",
                          "typeString": "literal_string \"OptimismPortal: output proposal finalization period has not elapsed\""
                        },
                        "value": "OptimismPortal: output proposal finalization period has not elapsed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2e53e5f2e5c146290963511529e48aa3e1570a42475ccc1fb3eba5190175c74",
                          "typeString": "literal_string \"OptimismPortal: output proposal finalization period has not elapsed\""
                        }
                      ],
                      "id": 66663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15031:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15031:162:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66670,
                  "nodeType": "ExpressionStatement",
                  "src": "15031:162:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 66676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 66672,
                            "name": "finalizedWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66246,
                            "src": "15309:20:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 66674,
                          "indexExpression": {
                            "id": 66673,
                            "name": "withdrawalHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66604,
                            "src": "15330:14:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15309:36:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 66675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15349:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "15309:45:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a207769746864726177616c2068617320616c7265616479206265656e2066696e616c697a6564",
                        "id": 66677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15356:55:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1157cbf4171a399f26106a5211324151853c78d2faca1fb1d3acbf755aa485",
                          "typeString": "literal_string \"OptimismPortal: withdrawal has already been finalized\""
                        },
                        "value": "OptimismPortal: withdrawal has already been finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1157cbf4171a399f26106a5211324151853c78d2faca1fb1d3acbf755aa485",
                          "typeString": "literal_string \"OptimismPortal: withdrawal has already been finalized\""
                        }
                      ],
                      "id": 66671,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15301:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15301:111:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66679,
                  "nodeType": "ExpressionStatement",
                  "src": "15301:111:81"
                },
                {
                  "expression": {
                    "id": 66684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66680,
                        "name": "finalizedWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66246,
                        "src": "15492:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 66682,
                      "indexExpression": {
                        "id": 66681,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66604,
                        "src": "15513:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15492:36:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 66683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15531:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "15492:43:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66685,
                  "nodeType": "ExpressionStatement",
                  "src": "15492:43:81"
                },
                {
                  "expression": {
                    "id": 66689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66686,
                      "name": "l2Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66241,
                      "src": "15629:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 66687,
                        "name": "_tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66590,
                        "src": "15640:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      },
                      "id": 66688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 81071,
                      "src": "15640:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15629:21:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66690,
                  "nodeType": "ExpressionStatement",
                  "src": "15629:21:81"
                },
                {
                  "assignments": [
                    66692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66692,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "16275:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 66729,
                      "src": "16270:12:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 66691,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16270:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66704,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66695,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66590,
                          "src": "16309:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 66696,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "target",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 81073,
                        "src": "16309:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 66697,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66590,
                          "src": "16321:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 66698,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "gasLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 81077,
                        "src": "16321:12:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 66699,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66590,
                          "src": "16335:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 66700,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 81075,
                        "src": "16335:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 66701,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66590,
                          "src": "16346:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 66702,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 81079,
                        "src": "16346:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 66693,
                        "name": "SafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80945,
                        "src": "16285:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCall_$80945_$",
                          "typeString": "type(library SafeCall)"
                        }
                      },
                      "id": 66694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callWithMinGas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80944,
                      "src": "16285:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 66703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16285:70:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16270:85:81"
                },
                {
                  "expression": {
                    "id": 66708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66705,
                      "name": "l2Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66241,
                      "src": "16423:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 66706,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79758,
                        "src": "16434:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$79758_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 66707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "DEFAULT_L2_SENDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79720,
                      "src": "16434:27:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16423:38:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66709,
                  "nodeType": "ExpressionStatement",
                  "src": "16423:38:81"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 66711,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66604,
                        "src": "16640:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 66712,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66692,
                        "src": "16656:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66710,
                      "name": "WithdrawalFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66294,
                      "src": "16620:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 66713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16620:44:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66714,
                  "nodeType": "EmitStatement",
                  "src": "16615:49:81"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 66723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 66717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66715,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66692,
                        "src": "16928:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 66716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16939:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "16928:16:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 66722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 66718,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "16948:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 66719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "16948:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 66720,
                          "name": "Constants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79758,
                          "src": "16961:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Constants_$79758_$",
                            "typeString": "type(library Constants)"
                          }
                        },
                        "id": 66721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ESTIMATION_ADDRESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79716,
                        "src": "16961:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "16948:41:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16928:61:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66728,
                  "nodeType": "IfStatement",
                  "src": "16924:114:81",
                  "trueBody": {
                    "id": 66727,
                    "nodeType": "Block",
                    "src": "16991:47:81",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 66724,
                            "name": "GasEstimation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80435,
                            "src": "17012:13:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 66725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17012:15:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66726,
                        "nodeType": "RevertStatement",
                        "src": "17005:22:81"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 66587,
              "nodeType": "StructuredDocumentation",
              "src": "12119:102:81",
              "text": "@notice Finalizes a withdrawal transaction.\n @param _tx Withdrawal transaction to finalize."
            },
            "functionSelector": "8c3152e9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66593,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66592,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66305,
                  "src": "12314:13:81"
                },
                "nodeType": "ModifierInvocation",
                "src": "12314:13:81"
              }
            ],
            "name": "finalizeWithdrawalTransaction",
            "nameLocation": "12235:29:81",
            "parameters": {
              "id": 66591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66590,
                  "mutability": "mutable",
                  "name": "_tx",
                  "nameLocation": "12300:3:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66730,
                  "src": "12265:38:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_memory_ptr",
                    "typeString": "struct Types.WithdrawalTransaction"
                  },
                  "typeName": {
                    "id": 66589,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66588,
                      "name": "Types.WithdrawalTransaction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 81080,
                      "src": "12265:27:81"
                    },
                    "referencedDeclaration": 81080,
                    "src": "12265:27:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalTransaction_$81080_storage_ptr",
                      "typeString": "struct Types.WithdrawalTransaction"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12264:40:81"
            },
            "returnParameters": {
              "id": 66594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12328:0:81"
            },
            "scope": 66856,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66820,
            "nodeType": "FunctionDefinition",
            "src": "17774:1855:81",
            "nodes": [],
            "body": {
              "id": 66819,
              "nodeType": "Block",
              "src": "17995:1634:81",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 66754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66747,
                      "name": "_isCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66739,
                      "src": "18134:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 66753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66748,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66733,
                        "src": "18149:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 66751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18164:1:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 66750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18156:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66749,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18156:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18156:10:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "18149:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "18134:32:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66758,
                  "nodeType": "IfStatement",
                  "src": "18130:56:81",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66755,
                        "name": "BadTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80411,
                        "src": "18175:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 66756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18175:11:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66757,
                    "nodeType": "RevertStatement",
                    "src": "18168:18:81"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 66767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66759,
                      "name": "_gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66737,
                      "src": "18338:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 66763,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66741,
                                "src": "18373:5:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 66764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "18373:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 66762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18366:6:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 66761,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "18366:6:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18366:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 66760,
                        "name": "minimumGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66418,
                        "src": "18350:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint64_$returns$_t_uint64_$",
                          "typeString": "function (uint64) pure returns (uint64)"
                        }
                      },
                      "id": 66766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18350:37:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "18338:49:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66771,
                  "nodeType": "IfStatement",
                  "src": "18334:77:81",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66768,
                        "name": "SmallGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80417,
                        "src": "18396:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 66769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18396:15:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66770,
                    "nodeType": "RevertStatement",
                    "src": "18389:22:81"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 66772,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66741,
                        "src": "18786:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 66773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "18786:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3132305f303030",
                      "id": 66774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18801:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_120000_by_1",
                        "typeString": "int_const 120000"
                      },
                      "value": "120_000"
                    },
                    "src": "18786:22:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66779,
                  "nodeType": "IfStatement",
                  "src": "18782:50:81",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66776,
                        "name": "LargeCalldata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80414,
                        "src": "18817:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 66777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18817:15:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66778,
                    "nodeType": "RevertStatement",
                    "src": "18810:22:81"
                  }
                },
                {
                  "assignments": [
                    66781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66781,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "18931:4:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 66819,
                      "src": "18923:12:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66780,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18923:7:81",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66784,
                  "initialValue": {
                    "expression": {
                      "id": 66782,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "18938:3:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 66783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "18938:10:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18923:25:81"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 66789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 66785,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "18962:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 66786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "18962:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 66787,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -26,
                        "src": "18976:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 66788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "src": "18976:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18962:23:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66799,
                  "nodeType": "IfStatement",
                  "src": "18958:108:81",
                  "trueBody": {
                    "id": 66798,
                    "nodeType": "Block",
                    "src": "18987:79:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 66796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 66790,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66781,
                            "src": "19001:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 66793,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "19044:3:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 66794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "19044:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 66791,
                                "name": "AddressAliasHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85854,
                                "src": "19008:18:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_AddressAliasHelper_$85854_$",
                                  "typeString": "type(library AddressAliasHelper)"
                                }
                              },
                              "id": 66792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "applyL1ToL2Alias",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 85831,
                              "src": "19008:35:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) pure returns (address)"
                              }
                            },
                            "id": 66795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19008:47:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19001:54:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 66797,
                        "nodeType": "ExpressionStatement",
                        "src": "19001:54:81"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    66801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66801,
                      "mutability": "mutable",
                      "name": "opaqueData",
                      "nameLocation": "19336:10:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 66819,
                      "src": "19323:23:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 66800,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19323:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66811,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66804,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19366:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "19366:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 66806,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66735,
                        "src": "19377:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 66807,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66737,
                        "src": "19385:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 66808,
                        "name": "_isCreation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66739,
                        "src": "19396:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 66809,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66741,
                        "src": "19409:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 66802,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "19349:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 66803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "19349:16:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 66810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19349:66:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19323:92:81"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 66813,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66781,
                        "src": "19583:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66814,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66733,
                        "src": "19589:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66815,
                        "name": "DEPOSIT_VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66234,
                        "src": "19594:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 66816,
                        "name": "opaqueData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66801,
                        "src": "19611:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 66812,
                      "name": "TransactionDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66278,
                      "src": "19562:20:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 66817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19562:60:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66818,
                  "nodeType": "EmitStatement",
                  "src": "19557:65:81"
                }
              ]
            },
            "documentation": {
              "id": 66731,
              "nodeType": "StructuredDocumentation",
              "src": "17050:719:81",
              "text": "@notice Accepts deposits of ETH and data, and emits a TransactionDeposited event for use in\n         deriving deposit transactions. Note that if a deposit is made by a contract, its\n         address will be aliased when retrieved using `tx.origin` or `msg.sender`. Consider\n         using the CrossDomainMessenger contracts for a simpler developer experience.\n @param _to         Target address on L2.\n @param _value      ETH value to send to the recipient.\n @param _gasLimit   Amount of L2 gas to purchase by burning gas on L1.\n @param _isCreation Whether or not the transaction is a contract creation.\n @param _data       Data to trigger the recipient with."
            },
            "functionSelector": "e9e05c42",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 66744,
                    "name": "_gasLimit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66737,
                    "src": "17980:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  }
                ],
                "id": 66745,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66743,
                  "name": "metered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68052,
                  "src": "17972:7:81"
                },
                "nodeType": "ModifierInvocation",
                "src": "17972:18:81"
              }
            ],
            "name": "depositTransaction",
            "nameLocation": "17783:18:81",
            "parameters": {
              "id": 66742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66733,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "17819:3:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66820,
                  "src": "17811:11:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17811:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66735,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "17840:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66820,
                  "src": "17832:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17832:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66737,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "17863:9:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66820,
                  "src": "17856:16:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 66736,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "17856:6:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66739,
                  "mutability": "mutable",
                  "name": "_isCreation",
                  "nameLocation": "17887:11:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66820,
                  "src": "17882:16:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66738,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17882:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66741,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "17921:5:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66820,
                  "src": "17908:18:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66740,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17908:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17801:131:81"
            },
            "returnParameters": {
              "id": 66746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17995:0:81"
            },
            "scope": 66856,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66837,
            "nodeType": "FunctionDefinition",
            "src": "19926:180:81",
            "nodes": [],
            "body": {
              "id": 66836,
              "nodeType": "Block",
              "src": "20006:100:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 66831,
                              "name": "_l2OutputIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66823,
                              "src": "20073:14:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 66829,
                              "name": "l2Oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66263,
                              "src": "20052:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                                "typeString": "contract L2OutputOracle"
                              }
                            },
                            "id": 66830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getL2Output",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66027,
                            "src": "20052:20:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_OutputProposal_$81039_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct Types.OutputProposal memory)"
                            }
                          },
                          "id": 66832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20052:36:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OutputProposal_$81039_memory_ptr",
                            "typeString": "struct Types.OutputProposal memory"
                          }
                        },
                        "id": 66833,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 81036,
                        "src": "20052:46:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 66828,
                      "name": "_isFinalizationPeriodElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66855,
                      "src": "20023:28:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 66834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20023:76:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 66827,
                  "id": 66835,
                  "nodeType": "Return",
                  "src": "20016:83:81"
                }
              ]
            },
            "documentation": {
              "id": 66821,
              "nodeType": "StructuredDocumentation",
              "src": "19635:286:81",
              "text": "@notice Determine if a given output is finalized.\n         Reverts if the call to l2Oracle.getL2Output reverts.\n         Returns a boolean otherwise.\n @param _l2OutputIndex Index of the L2 output to check.\n @return Whether or not the output is finalized."
            },
            "functionSelector": "6dbffb78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOutputFinalized",
            "nameLocation": "19935:17:81",
            "parameters": {
              "id": 66824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66823,
                  "mutability": "mutable",
                  "name": "_l2OutputIndex",
                  "nameLocation": "19961:14:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66837,
                  "src": "19953:22:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19953:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19952:24:81"
            },
            "returnParameters": {
              "id": 66827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66826,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66837,
                  "src": "20000:4:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66825,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20000:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19999:6:81"
            },
            "scope": 66856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66855,
            "nodeType": "FunctionDefinition",
            "src": "20359:180:81",
            "nodes": [],
            "body": {
              "id": 66854,
              "nodeType": "Block",
              "src": "20446:93:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 66845,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "20463:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 66846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "20463:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66847,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66840,
                        "src": "20481:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 66848,
                            "name": "l2Oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66263,
                            "src": "20494:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_L2OutputOracle_$66187",
                              "typeString": "contract L2OutputOracle"
                            }
                          },
                          "id": 66849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "FINALIZATION_PERIOD_SECONDS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65873,
                          "src": "20494:36:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 66850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20494:38:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "20481:51:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20463:69:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 66844,
                  "id": 66853,
                  "nodeType": "Return",
                  "src": "20456:76:81"
                }
              ]
            },
            "documentation": {
              "id": 66838,
              "nodeType": "StructuredDocumentation",
              "src": "20112:242:81",
              "text": "@notice Determines whether the finalization period has elapsed with respect to\n         the provided block timestamp.\n @param _timestamp Timestamp to check.\n @return Whether or not the finalization period has elapsed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isFinalizationPeriodElapsed",
            "nameLocation": "20368:28:81",
            "parameters": {
              "id": 66841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66840,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "20405:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 66855,
                  "src": "20397:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20397:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20396:20:81"
            },
            "returnParameters": {
              "id": 66844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66843,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66855,
                  "src": "20440:4:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66842,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20440:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20439:6:81"
            },
            "scope": 66856,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 66218,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43940,
              "src": "1267:13:81"
            },
            "id": 66219,
            "nodeType": "InheritanceSpecifier",
            "src": "1267:13:81"
          },
          {
            "baseName": {
              "id": 66220,
              "name": "ResourceMetering",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68349,
              "src": "1282:16:81"
            },
            "id": 66221,
            "nodeType": "InheritanceSpecifier",
            "src": "1282:16:81"
          },
          {
            "baseName": {
              "id": 66222,
              "name": "ISemver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 83714,
              "src": "1300:7:81"
            },
            "id": 66223,
            "nodeType": "InheritanceSpecifier",
            "src": "1300:7:81"
          }
        ],
        "canonicalName": "OptimismPortal",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 66217,
          "nodeType": "StructuredDocumentation",
          "src": "902:338:81",
          "text": "@custom:proxied\n @title OptimismPortal\n @notice The OptimismPortal is a low-level contract responsible for passing messages between L1\n         and L2. Messages sent directly to the OptimismPortal have no form of replayability.\n         Users are encouraged to use the L1CrossDomainMessenger for a higher-level interface."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          66856,
          83714,
          68349,
          43940
        ],
        "name": "OptimismPortal",
        "nameLocation": "1249:14:81",
        "scope": 66857,
        "usedErrors": [
          68006,
          80411,
          80414,
          80417,
          80432,
          80435
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 81
}
